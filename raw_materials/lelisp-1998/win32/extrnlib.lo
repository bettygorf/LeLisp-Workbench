(loader '((title |extrnlib.lo|)))
(if (not (>= (version) 15.2)) (progn (error 'load 'erricf 'extrnlib)))
(defvar #:sys-package:colon '#:display:windows)
(if (not (boundp '#:display:windows:extrnlib)) (progn (defvar #:display:windows:extrnlib (catenate #:system:system-directory "extrnlib.dll"))))
(loader'((entry WDGGetColor subr1)
(push a1)
(btvect a1 102)
(mov a1 a3)
(mov 'errvec a2)
(mov 'WDGGetColor a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (getinlib 'WDGGetColor '#:display:windows:extrnlib '(vector)))))
(push '0)
(push (& 3))
(push '4)
(mov '4 a4)
(jmp callextern)
103
(eval ())
(adjstk '1)
(return)
))
(loader'((entry WDGOpenFile subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov 'WDGOpenFile a1)
(jcall error)
102
(btfix (& 1) 104)
(mov (& 1) a3)
(mov 'errnia a2)
(mov 'WDGOpenFile a1)
(jcall error)
104
(push (@ 105))
(push (eval (kwote (getinlib 'WDGOpenFile '#:display:windows:extrnlib '(string fix)))))
(push '1)
(push (& 3))
(push '3)
(push (& 6))
(push '1)
(mov '6 a4)
(jmp callextern)
105
(eval ())
(adjstk '2)
(return)
))
(loader'((entry WDGGetText subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov 'WDGGetText a1)
(jcall error)
102
(btstrg (& 1) 104)
(mov (& 1) a3)
(mov 'errnsa a2)
(mov 'WDGGetText a1)
(jcall error)
104
(push (@ 105))
(push (eval (kwote (getinlib 'WDGGetText '#:display:windows:extrnlib '(string string)))))
(push '1)
(push (& 3))
(push '3)
(push (& 6))
(push '3)
(mov '6 a4)
(jmp callextern)
105
(eval ())
(adjstk '2)
(return)
))
(loader'((entry WDGMessageBox nsubr)
(btstrg (& 3) 102)
(mov (& 3) a3)
(mov 'errnsa a2)
(mov 'WDGMessageBox a1)
(jcall error)
102
(btfix (& 2) 104)
(mov (& 2) a3)
(mov 'errnia a2)
(mov 'WDGMessageBox a1)
(jcall error)
104
(btfix (& 1) 106)
(mov (& 1) a3)
(mov 'errnia a2)
(mov 'WDGMessageBox a1)
(jcall error)
106
(btfix (& 0) 108)
(mov (& 0) a3)
(mov 'errnia a2)
(mov 'WDGMessageBox a1)
(jcall error)
108
(push (@ 109))
(push (eval (kwote (getinlib 'WDGMessageBox '#:display:windows:extrnlib '(string fix fix fix)))))
(push '1)
(push (& 6))
(push '3)
(push (& 7))
(push '1)
(push (& 8))
(push '1)
(push (& 9))
(push '1)
(mov '10 a4)
(jmp callextern)
109
(eval ())
(adjstk '4)
(return)
))
(loader'((entry WDGGetFont subr1)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov 'WDGGetFont a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (getinlib 'WDGGetFont '#:display:windows:extrnlib '(string)))))
(push '1)
(push (& 3))
(push '3)
(mov '4 a4)
(jmp callextern)
103
(eval ())
(adjstk '1)
(return)
))
(loader'((entry WDGOpenClipboard subr0)
(push (@ 101))
(push (eval (kwote (getinlib 'WDGOpenClipboard '#:display:windows:extrnlib '()))))
(push '1)
(mov '2 a4)
(jmp callextern)
101
(eval ())
(return)
))
(loader'((entry WDGIsAvailable subr1)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov 'WDGIsAvailable a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (getinlib 'WDGIsAvailable '#:display:windows:extrnlib '(string)))))
(push '1)
(push (& 3))
(push '3)
(mov '4 a4)
(jmp callextern)
103
(eval ())
(adjstk '1)
(return)
))
(loader'((entry WDGCloseClipboard subr0)
(push (@ 101))
(push (eval (kwote (getinlib 'WDGCloseClipboard '#:display:windows:extrnlib '()))))
(push '1)
(mov '2 a4)
(jmp callextern)
101
(eval ())
(return)
))
(loader'((entry WDGGetClipboard subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov 'WDGGetClipboard a1)
(jcall error)
102
(btstrg (& 1) 104)
(mov (& 1) a3)
(mov 'errnsa a2)
(mov 'WDGGetClipboard a1)
(jcall error)
104
(push (@ 105))
(push (eval (kwote (getinlib 'WDGGetClipboard '#:display:windows:extrnlib '(string string)))))
(push '1)
(push (& 3))
(push '3)
(push (& 6))
(push '3)
(mov '6 a4)
(jmp callextern)
105
(eval ())
(adjstk '2)
(return)
))
(loader'((entry WDGSetClipboard subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov 'WDGSetClipboard a1)
(jcall error)
102
(btstrg (& 1) 104)
(mov (& 1) a3)
(mov 'errnsa a2)
(mov 'WDGSetClipboard a1)
(jcall error)
104
(push (@ 105))
(push (eval (kwote (getinlib 'WDGSetClipboard '#:display:windows:extrnlib '(string string)))))
(push '1)
(push (& 3))
(push '3)
(push (& 6))
(push '3)
(mov '6 a4)
(jmp callextern)
105
(eval ())
(adjstk '2)
(return)
))
(loader'((entry WDGResources subr1)
(push a1)
(btvect a1 102)
(mov a1 a3)
(mov 'errvec a2)
(mov 'WDGResources a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (getinlib 'WDGResources '#:display:windows:extrnlib '(vector)))))
(push '1)
(push (& 3))
(push '4)
(mov '4 a4)
(jmp callextern)
103
(eval ())
(adjstk '1)
(return)
))
(loader'((entry #:display:windows:assure-extrnlib-loaded subr0)
(mov nil a1)
(return)
))
(defvar #:display:windows:work-string-length (if (boundp '#:display:windows:work-string-length) #:display:windows:work-string-length 2048))
(defvar #:display:windows:work-string (makestring #:display:windows:work-string-length 0))
(loader'((fentry #:display:windows:ask-file subr1)
(entry #:display:windows:ask-file subr1)
(push a1)
(call #:display:windows:assure-extrnlib-loaded)
(mov (& 0) a1)
(jcall pathname)
(push nil)
(push nil)
(push a1)
(push (@ 101))
(jcall pathname-host)
(push a1)
(mov (& 2) a1)
(jcall pathname-device)
(push a1)
(mov (& 3) a1)
(jcall pathname-directory)
(push a1)
(mov '3 a4)
(jmp make-pathname)
101
(eval ())
(mov a1 (& 2))
(mov nil a2)
(mov (& 0) a1)
(jcall set-pathname-host)
(mov nil a2)
(mov (& 0) a1)
(jcall set-pathname-device)
(mov nil a2)
(mov (& 0) a1)
(jcall set-pathname-directory)
(mov (& 0) a1)
(jcall namestring)
(mov a1 (& 1))
(push (@ 102))
(mov '0 a4)
(jmp current-directory)
102
(eval ())
(push a1)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(push (@ 105))
(push (& 7))
(mov '1 a4)
(jmp current-directory)
105
(eval ())
(push (@ 106))
(hgsize (& 6) a4)
(push a4)
(mov (cvalq #:display:windows:work-string-length) a4)
(diff '1 a4)
(push a4)
(mov '2 a4)
(jmp min)
106
(eval ())
(push nil)
(push a1)
(push (@ 107))
(push (cvalq #:display:windows:work-string))
(push '0)
(push (& 10))
(push '0)
(push a1)
(mov '5 a4)
(jmp bltstring)
107
(eval ())
(hbmovx '0 (cvalq #:display:windows:work-string) (& 0))
(mov (cvalq #:display:windows:work-string-length) a2)
(mov (cvalq #:display:windows:work-string) a1)
(call WDGOpenFile)
(cnbne '1 a1 108)
(push (@ 110))
(push (cvalq #:display:windows:work-string))
(push '0)
(push (@ 111))
(push '0)
(push (cvalq #:display:windows:work-string))
(mov '2 a4)
(jmp chrpos)
111
(eval ())
(push a1)
(mov '3 a4)
(jmp substring)
110
(eval ())
(mov a1 (& 1))
(hgsize a1 a4)
(diff '1 a4)
(push '0)
(push a4)
(mov a4 a1)
(jcall numberp)
(bfnil a1 114)
(mov (& 0) a3)
(mov 'errnna a2)
(mov 'for a1)
(jcall error)
114
(push (@ 116))
(push (& 2))
(push (& 2))
(mov '2 a4)
(jmp >)
116
(eval ())
(bfnil a1 115)
(hbxmov (& 3) (& 1) a1)
(jcall lowercase)
(hbmovx a1 (& 3) (& 1))
(push (@ 117))
(push (& 2))
(push '1)
(mov '2 a4)
(jmp |+|)
117
(eval ())
(mov a1 (& 1))
(bra 114)
115
(adjstk '2)
(mov (& 1) a1)
(bra 109)
108
(mov nil a1)
109
(adjstk '2)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(push (@ 118))
(push (& 4))
(mov '1 a4)
(jmp current-directory)
118
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(adjstk '5)
(return)
))
(loader'((fentry #:display:windows:ask-string nsubr)
(entry #:display:windows:ask-string nsubr)
(cnbge a4 '2 101)
(mov '#:display:windows:ask-string a1)
(mov '2 a2)
(jmp #:llcp:errwna)
101
(diff '2 a4)
(jcall #:llcp:nlist)
(call #:display:windows:assure-extrnlib-loaded)
(push nil)
(push (@ 102))
(push (cvalq #:display:windows:work-string))
(push '0)
(push '0)
(mov '3 a4)
(jmp fillstring)
102
(eval ())
(push (@ 103))
(push (cvalq #:display:windows:work-string))
(push '0)
(bfcons (& 4) 104)
(mov (& 4) a1)
(mov (car a1) a1)
(bra 105)
104
(mov (& 4) a1)
105
(jcall string)
(push a1)
(push '0)
(mov '4 a4)
(jmp bltstring)
103
(eval ())
(mov (cvalq #:display:windows:work-string) a2)
(mov (& 2) a1)
(call WDGGetText)
(cnbne '1 a1 106)
(push (@ 108))
(push (cvalq #:display:windows:work-string))
(push '0)
(push (@ 109))
(push '0)
(push (cvalq #:display:windows:work-string))
(mov '2 a4)
(jmp chrpos)
109
(eval ())
(push a1)
(mov '3 a4)
(jmp substring)
108
(eval ())
(mov a1 (& 0))
(hgsize a1 a4)
(cnble a4 '0 110)
(adjstk '3)
(return)
110
(mov nil a1)
(adjstk '3)
(return)
106
(mov nil a1)
(adjstk '3)
(return)
))
(loader'((fentry #:display:windows:ask-font subr0)
(entry #:display:windows:ask-font subr0)
(call #:display:windows:assure-extrnlib-loaded)
(push nil)
(push (@ 101))
(push (cvalq #:display:windows:work-string))
(push '0)
(push '0)
(mov '3 a4)
(jmp fillstring)
101
(eval ())
(mov (cvalq #:display:windows:work-string) a1)
(call WDGGetFont)
(cnbne '1 a1 102)
(push (@ 104))
(push (cvalq #:display:windows:work-string))
(push '0)
(push (@ 105))
(push '0)
(push (cvalq #:display:windows:work-string))
(mov '2 a4)
(jmp chrpos)
105
(eval ())
(push a1)
(mov '3 a4)
(jmp substring)
104
(eval ())
(mov a1 (& 0))
(hgsize a1 a4)
(cnble a4 '0 106)
(adjstk '1)
(return)
106
(mov nil a1)
(adjstk '1)
(return)
102
(mov nil a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:ask-color subr0)
(entry #:display:windows:ask-color subr0)
(call #:display:windows:assure-extrnlib-loaded)
(mov '0 a2)
(mov '3 a1)
(jcall makevector)
(push a1)
(call WDGGetColor)
(cabne a1 '1 101)
(mov (& 0) a1)
(adjstk '1)
(return)
101
(mov nil a1)
(adjstk '1)
(return)
))
(defvar #:display:windows:return-button-box #[ok cancel abort retry ignore yes no])
(defvar #:display:windows:icons '((hand . 0) (question . 1) (exclamation . 2) (asterisk . 3)))
(defvar #:display:windows:buttons '((ok . 0) (ok-cancel . 1) (abort-retry-ignore . 2) (yes-no-cancel . 3) (yes-no . 4) (retry-cancel . 5)))
(loader'((fentry #:display:windows:message-box nsubr)
(entry #:display:windows:message-box nsubr)
(cnbeq a4 '4 101)
(mov '#:display:windows:message-box a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(call #:display:windows:assure-extrnlib-loaded)
(mov (cvalq #:display:windows:icons) a2)
(mov (& 2) a1)
(jcall cassoc)
(mov a1 (& 2))
(mov (cvalq #:display:windows:buttons) a2)
(mov (& 1) a1)
(jcall cassoc)
(mov a1 (& 1))
(btnil (& 0) 102)
(mov '1 a4)
(bra 103)
102
(mov '0 a4)
103
(mov a4 (& 0))
(btnil (& 2) 104)
(btnil a1 104)
(push (@ 106))
(mov (& 4) a1)
(jcall string)
(push a1)
(push (& 4))
(push (& 4))
(push (& 4))
(mov '4 a4)
(bra WDGMessageBox)
106
(eval ())
(cabeq a1 '-1 107)
(hpxmov (cvalq #:display:windows:return-button-box) a1 a1)
(adjstk '4)
(return)
107
(mov nil a1)
(adjstk '4)
(return)
104
(mov nil a1)
(adjstk '4)
(return)
))
(loader'((fentry #:display:windows:store-selection subr2)
(entry #:display:windows:store-selection subr2)
(push a2)
(call #:display:windows:assure-extrnlib-loaded)
(mov '"TEXT" a2)
(mov (& 0) a1)
(adjstk '1)
(bra WDGSetClipboard)
))
(loader'((fentry #:display:windows:get-selection subr1)
(entry #:display:windows:get-selection subr1)
(call #:display:windows:assure-extrnlib-loaded)
(push nil)
(push nil)
(call WDGOpenClipboard)
(cabeq '0 a1 101)
(mov '"TEXT" a1)
(call WDGIsAvailable)
(mov a1 (& 1))
(push (@ 105))
(push a1)
(push '0)
(mov '2 a4)
(jmp >)
105
(eval ())
(btnil a1 103)
(push (@ 106))
(push (& 2))
(push '32767)
(mov '2 a4)
(jmp <=)
106
(eval ())
(btnil a1 103)
(mov (& 1) a1)
(jcall |1+|)
(mov '0 a2)
(jcall makestring)
(mov a1 (& 0))
(mov '"TEXT" a2)
(call WDGGetClipboard)
(cabeq '0 a1 107)
(call WDGCloseClipboard)
(push (@ 109))
(push (& 1))
(push '0)
(push (@ 110))
(push '0)
(push (& 5))
(mov '2 a4)
(jmp chrpos)
110
(eval ())
(push a1)
(mov '3 a4)
(jmp substring)
109
(eval ())
(adjstk '2)
(return)
107
(mov nil a1)
(adjstk '2)
(return)
103
(mov nil a1)
(adjstk '2)
(return)
101
(mov nil a1)
(adjstk '2)
(return)
))
(defvar #:display:windows:resources-info #[100 100 100 100])
(loader'((fentry #:display:windows:get-resources-info subr0)
(entry #:display:windows:get-resources-info subr0)
(call #:display:windows:assure-extrnlib-loaded)
(mov (cvalq #:display:windows:resources-info) a1)
(call WDGResources)
(mov (cvalq #:display:windows:resources-info) a1)
(return)
))
(loader '((end)))
