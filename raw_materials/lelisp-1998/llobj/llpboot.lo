(loader '((title |llpboot.lo|)))
(setq #:sys-package:colon 'llpatch)
(if (not (typefn '#:llpatch:setfn)) (progn (synonymq #:llpatch:setfn setfn)))
(loader'((fentry setfn subr3)
(entry setfn subr3)
(push a3)
(push a2)
(push a1)
(mov 'resetfn a2)
(jcall remprop)
(mov 'trace a2)
(mov (& 0) a1)
(jcall remprop)
(mov '#:trace:trace a1)
(jcall boundp)
(btnil a1 102)
(mov (cvalq #:trace:trace) a2)
(mov (& 0) a1)
(jcall delq)
(mov a1 (cvalq #:trace:trace))
102
(mov (& 2) a3)
(mov (& 1) a2)
(mov (& 0) a1)
(adjstk '3)
(jmp #:llpatch:setfn)
))
(loader'((fentry lmaccess subr2)
(entry lmaccess subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov 'lmaccess a1)
(jcall error)
102
(mov (& 1) a1)
(jcall numberp)
(bfnil a1 103)
(mov (& 1) a3)
(mov 'errnna a2)
(mov 'lmaccess a1)
(jcall error)
(bra 104)
103
(mov (& 1) a1)
(jcall fix)
(mov a1 (& 1))
104
(push (@ 105))
(push (eval (kwote (#:system:cached-getglobal 'lmaccess))))
(push '1)
(push (& 3))
(push '3)
(push (& 6))
(push '1)
(mov '6 a4)
(jmp callextern)
105
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry lmnumb subr1)
(entry lmnumb subr1)
(mov '1 a2)
(jmp lmaccess)
))
(loader'((entry lmalive subr1)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov 'lmalive a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (#:system:cached-getglobal 'lmalive))))
(push '1)
(push (& 3))
(push '3)
(mov '4 a4)
(jmp callextern)
103
(eval ())
(adjstk '1)
(return)
))
(loader'((fentry lmsymb subr1)
(entry lmsymb subr1)
(bra lmalive)
))
(loader'((fentry llnumb subr1)
(entry llnumb subr1)
(jcall string)
(jmp lmnumb)
))
(defvar #:system:23-compatibility-flag ())
(if (not (typefn '#:llpatch:rmargin)) (progn (synonymq #:llpatch:rmargin rmargin)))
(loader'((fentry #:llpatch:new-rmargin nsubr)
(entry #:llpatch:new-rmargin nsubr)
(push a4)
(cnbne (& 0) '0 101)
(mov nil a4)
(bra 102)
101
(mov (& 0) a4)
(plus '0 a4)
(xspmov a4 a4)
102
(btnil a4 103)
(btnil (cvalq #:system:23-compatibility-flag) 105)
(bffix a4 105)
(cnblt a4 '256 105)
(push (@ 107))
(push (@ 108))
(mov '0 a4)
(jmp outbuf)
108
(eval ())
(hgsize a1 a3)
(plus '1 a3)
(push a3)
(mov '1 a4)
(jmp #:llpatch:rmargin)
107
(eval ())
(bra 104)
105
(push (@ 109))
(push a4)
(mov '1 a4)
(jmp #:llpatch:rmargin)
109
(eval ())
(bra 104)
103
(push (@ 110))
(mov '0 a4)
(jmp #:llpatch:rmargin)
110
(eval ())
104
(pop a4)
(adjstk a4)
(return)
))
(synonym 'rmargin '#:llpatch:new-rmargin)
(loader '((end)))
