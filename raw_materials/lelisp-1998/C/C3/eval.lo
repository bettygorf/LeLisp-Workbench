(loader '(
(listext (function protect llock unwind unexit ffexit untlxit evexit evtag tag flet letvq letv letseq let uapply stepeval traceval llarg symeval evalwhen gettype lllength displace evlis nreverse findfn getfns getfn1 probjt probj inicst inisymb gcnumb gcfloat gccons errxia errnab errilb errbal errbpa erroob errwna errudt errudf errudv errnva errnla errnia errsym erres errfs evbale bndtrbex unbise evbser evbndext evprognr evprogn unbinp evexpg funcall ffuncall apply evalc eval findtag sysprot llsupit llitsoft evala1 evalcar unbind10 unbind9 unbind8 unbind7 unbind6 unbind5 unbind4 unbind3 unbind2 unbinp1 unbind1 unbind0 ini_eval evalan evalt))
(entry startmodule subr0)
	(title eval)
	(xdefp ini_eval)
	(xdefp unbind0)
	(xdefp unbind1)
	(xdefp unbinp1)
	(xdefp unbind2)
	(xdefp unbind3)
	(xdefp unbind4)
	(xdefp unbind5)
	(xdefp unbind6)
	(xdefp unbind7)
	(xdefp unbind8)
	(xdefp unbind9)
	(xdefp unbind10)
	(xdefp evalcar)
	(xdefp evala1)
	(xdefp evalan)
	(xdefp evalt)
	(xdefp llitsoft)
	(xdefp llsupit)
	(xdefp sysprot)
	(xdefp findtag)
	(xdefi dlink)
	(xdefi llink)
	(xdefi evalst)
	(xdefi forme)
	(xdefi funct)
	(xdefi savea1)
	(xdefi savea2)
	(xdefi savea3)
	(xdefi savea4)
	(xdefi intret)
	(xdefi intllink)
	(xdefi errname)
	(xdefp eval)
	(xdefp evalc)
	(xdefp apply)
	(xdefp ffuncall)
	(xdefp funcall)
	(xdefp evexpg)
	(xdefp unbinp)
	(xdefp evprogn)
	(xdefp evprognr)
	(xdefp evbndext)
	(xdefp evbser)
	(xdefp unbise)
	(xdefp bndtrbex)
	(xdefp evbale)
	(xdefi |.function|)
	(xdefi |.eval|)
	(xrefi llinit |.undef|)
	(xrefi llinit fcons)
	(xrefi llinit bvar)
	(xrefi llinit |.t|)
	(xrefi llinit |.void|)
	(xrefi llinit |.itsoft|)
	(xrefi llinit |.syspkgc|)
	(xrefi llinit mstack)
	(xrefp toperr errfs)
	(xrefp toperr erres)
	(xrefp toperr errsym)
	(xrefp toperr errnia)
	(xrefp toperr errnla)
	(xrefp toperr errnva)
	(xrefp toperr errudv)
	(xrefp toperr errudf)
	(xrefp toperr errudt)
	(xrefp toperr errwna)
	(xrefp toperr erroob)
	(xrefp toperr errbpa)
	(xrefp toperr errbal)
	(xrefp toperr errilb)
	(xrefp toperr errnab)
	(xrefp toperr errxia)
	(xrefp gc gccons)
	(xrefp gc gcfloat)
	(xrefp gc gcnumb)
	(xrefp read inisymb)
	(xrefp read inicst)
	(xrefi read cpkgc)
	(xrefp print probj)
	(xrefp print probjt)
	(xrefi cntrl |.lambda|)
	(xrefi cntrl |.flambda|)
	(xrefi cntrl |.mlambda|)
	(xrefp symbs getfn1)
	(xrefp symbs getfns)
	(xrefp symbs findfn)
	(xrefp fntstd nreverse)
	(xrefp fntstd evlis)
	(xrefp fntstd displace)
	(xrefp fntstd lllength)
	(xrefp gc gettype)
	(impure)
	(ladr llink 0)
	(ladr evalst 0)
	(ladr forme 0)
	(ladr funct 0)
	(ladr savea1 0)
	(ladr savea2 0)
	(ladr savea3 0)
	(ladr savea4 0)
	(ladr errname 0)
	(ladr intret 0)
	(ladr intllink 0)
	(ladr dlink 0)
	(ladr rvbser 0)
	(pure)
ini_eval
	(eval ())
	(mov |.syspkgc| cpkgc)
	(makcst sysits '6 (strg "itsoft"))
	(movnil cpkgc)
	(makfnt eval '4 (strg "eval"))
	(makfnt evalwhen '9 (strg "eval-when"))
	(makfnt symeval '7 (strg "symeval"))
	(makfnt llarg '3 (strg "arg"))
	(makcst nobind '7 (strg "&nobind"))
	(makfnt traceval '8 (strg "traceval"))
	(makfnt stepeval '8 (strg "stepeval"))
	(makfnt uapply '5 (strg "apply"))
	(makfnt funcall '7 (strg "funcall"))
	(makfnt tag '3 (strg "tag"))
	(makfnt evtag '5 (strg "evtag"))
	(makfnt untlxit '9 (strg "untilexit"))
	(makfnt ffexit '4 (strg "exit"))
	(makfnt evexit '6 (strg "evexit"))
	(makfnt unwind '6 (strg "unwind"))
	(makfnt unexit '6 (strg "unexit"))
	(makfnt llock '4 (strg "lock"))
	(makfnt protect '7 (strg "protect"))
	(makfnt let '3 (strg "let"))
	(makfnt letseq '4 (strg "lets"))
	(makfnt letv '4 (strg "letv"))
	(makfnt letvq '5 (strg "letvq"))
	(makfnt flet '4 (strg "flet"))
	(makfnt function '8 (strg "function"))
	(makcst closure '9 (strg "_closure_"))
	(makcst rarrow '3 (strg "-> "))
	(makcst larrow '3 (strg "<- "))
	(movnil evalst)
	(movnil llink)
	(return)
	(lentry eval 5)
	(cnbeq a4 '1 evalu2)
	(cnbeq a4 '2 evalu1)
	(mov '1 a1)
	(mov |.eval| a2)
	(bra errwna)
evalu1
	(pop a2)
	(pop a1)
	(push llink)
	(mov a2 llink)
	(bra evalu3)
evalu2
	(pop a1)
	(push llink)
	(movnil llink)
evalu3
	(mov (@ evala1) a3)
	(push (@ ret_call_sysprot_1))
	(bra sysprot)
ret_call_sysprot_1
	(eval ())
	(pop a1)
	(pop llink)
	(bri a3)
evalc
	(eval ())
	(mov (car a1) a1)
	(push a1)
	(mov '1 a4)
	(bra eval)
	(lentry evalwhen 6)
	(bfcons a1 evwhen3)
	(mov (cdr a1) a4)
	(mov (car a1) a1)
	(mov |.eval| a3)
	(bra evwhen2)
evwhen1
	(mov (car a1) a2)
	(cabeq a2 a3 evwhen4)
	(mov (cdr a1) a1)
evwhen2
	(btcons a1 evwhen1)
evwhen3
	(movnil a1)
	(return)
evwhen4
	(mov a4 a1)
	(mov |.evalwhen| errname)
	(intest)
	(bra evprogn)
	(lentry symeval 2)
	(bfsymb a1 symeval1)
	(mov a1 a2)
	(mov (cval a1) a1)
	(cabeq a1 |.undef| symeval2)
	(return)
symeval1
	(mov |.symeval| a2)
	(bra errsym)
symeval2
	(mov a2 a1)
	(mov |.symeval| a2)
	(bra errudv)
	(lentry llarg 5)
	(cabeq a4 '0 llarget)
	(cabeq a4 '1 llarg1)
	(mov '1 a1)
	(mov |.llarg| a2)
	(bra errwna)
llarg1
	(push (@ ret_call_llarget_2))
	(bra llarget)
ret_call_llarget_2
	(eval ())
	(pop a2)
	(diff a2 a1)
	(adjstkr a4 a1)
	(topstr a4 a1)
	(return)
llarget
	(eval ())
	(mov dlink a4)
	(popr a4 a1)
	(cabne a1 (@ unbind1) llarger)
	(adjstkr a4 '3)
	(popr a4 a1)
	(cabne a1 |.nobind| llarger)
	(topstr a4 a1)
	(return)
llarger
	(mov |.llarg| a2)
	(movnil a1)
	(bra errnab)
	(lentry traceval 5)
	(cnbeq a4 '1 tracev1)
	(cnbeq a4 '2 tracev2)
	(mov '1 a1)
	(mov |.traceval| a2)
	(bra errwna)
tracev1
	(pop a1)
	(movnil a2)
	(bra tracev3)
tracev2
	(pop a2)
	(pop a1)
tracev3
	(push nil)
	(push savea4)
	(push savea3)
	(push savea2)
	(push savea1)
	(push funct)
	(push forme)
	(push evalst)
	(mov |.t| evalst)
	(push |.stepeval|)
	(push llink)
	(mov a2 llink)
	(push dlink)
	(push (@ unbind4))
	(stack dlink)
	(bra evalan)
	(lentry stepeval 5)
	(cabeq a4 '1 stepev1)
	(cabeq a4 '2 stepev2)
	(mov '1 a1)
	(mov |.stepeval| a2)
	(bra errwna)
stepev1
	(pop a1)
	(push (@ stepevr))
	(push a1)
	(push nil)
	(bra stepev3)
stepev2
	(pop a2)
	(pop a1)
	(push (@ stepevr))
	(push a1)
	(push a2)
stepev3
	(mov |.rarrow| a1)
	(push (@ ret_call_probj_3))
	(bra probj)
ret_call_probj_3
	(eval ())
	(mov (& 1) a1)
	(push (@ ret_call_probjt_4))
	(bra probjt)
ret_call_probjt_4
	(eval ())
	(mov '2 a4)
	(bra traceval)
stepevr
	(push a1)
	(mov |.larrow| a1)
	(push (@ ret_call_probj_5))
	(bra probj)
ret_call_probj_5
	(eval ())
	(topst a1)
	(push (@ ret_call_probjt_6))
	(bra probjt)
ret_call_probjt_6
	(eval ())
	(pop a1)
	(return)
evalt
	(eval ())
	(mov llink a2)
	(ncons a2)
	(cons a1 a2)
	(mov |.stepeval| a1)
	(push (@ ret_call_llitsoft_7))
	(bra llitsoft)
ret_call_llitsoft_7
	(eval ())
	(mov |.t| evalst)
	(return)
popj
	(eval ())
	(return)
evalcar
	(eval ())
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
evala1
	(eval ())
	(bfnil evalst evalt)
	(bra evalan)
evalan
	(eval ())
	(btcons a1 evalis)
	(bffix a1 evalat)
	(return)
evalis
	(eval ())
	(intest)
	(chkstk mstack errfs)
	(mov a1 forme)
	(mov (car a1) a2)
	(mov (cdr a1) a1)
	(bfsymb a2 evalfv)
	(mov (fval a2) a3)
	(gftype a2 a4)
	(brx ((@ udfer) (@ eval0) (@ eval1) (@ eval2) (@ eval3) (@ evaln) (@ evalf) (@ evexp) (@ evfexp) (@ evmac) (@ evdmac) (@ evalm) (@ evaldm)) a4)
evalat
	(eval ())
	(bfsymb a1 evothat)
	(mov a1 a2)
	(mov (cval a1) a1)
	(cabeq a1 |.undef| evalera8)
	(return)
evalera8
	(eval ())
	(mov a2 a1)
	(mov |.eval| a2)
	(bra errudv)
evothat
	(eval ())
	(btstrg a1 evextyp)
	(btvect a1 evextyp)
	(return)
evextyp
	(push a1)
	(mov (typ a1) a1)
	(bfsymb a1 evextypr)
	(mov |.eval| a2)
	(movnil a3)
	(push (@ ret_call_getfns_8))
	(bra getfns)
ret_call_getfns_8
	(eval ())
	(btnil a1 evextypr)
	(mov '1 a4)
	(bra ffuncall)
evextypr
	(pop a1)
	(return)
eval0
	(eval ())
	(bfnil a1 wnaer0)
	(bri a3)
eval1
	(eval ())
	(push a3)
	(bfcons a1 wnaer1)
	(bfnil (cdr a1) wnaer1d)
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
eval2
	(eval ())
	(push a3)
	(bfcons a1 wnaer2)
	(mov (cdr a1) a3)
	(bfcons a3 wnaer23)
	(push (car a3))
	(bfnil (cdr a3) wnaer23d)
	(push (@ ret_call_evalcar_9))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_9
	(eval ())
	(xtopst a1)
	(push (@ ret_call_evala1_10))
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evala1_10
	(eval ())
	(mov a1 a2)
	(pop a1)
	(return)
eval3
	(eval ())
	(push a3)
	(bfcons a1 wnaer3)
	(push (cdr a1))
	(push a2)
	(push (@ ret_call_evalcar_11))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_11
	(eval ())
	(pop a2)
	(xtopst a1)
	(bfcons a1 wnaer3)
	(push (cdr a1))
	(push a2)
	(push (@ ret_call_evalcar_12))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_12
	(eval ())
	(pop a2)
	(xtopst a1)
	(bfcons a1 wnaer3)
	(bfnil (cdr a1) wnaer3d)
	(push (@ ret_call_evalcar_13))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_13
	(eval ())
	(mov a1 a3)
	(pop a2)
	(pop a1)
	(return)
evaln
	(eval ())
	(btcons a1 evalns0)
	(bfnil a1 evbal)
	(mov '0 a4)
	(bri a3)
evalns0
	(eval ())
	(mov (cdr a1) a2)
	(btcons a2 evalns1)
	(bfnil a2 evbal2)
	(push a3)
	(push (@ ret_call_evalcar_14))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_14
	(eval ())
	(xtopst a1)
	(mov '1 a4)
	(bri a1)
evalns1
	(eval ())
	(push a2)
	(push a3)
	(push (@ ret_call_evalcar_15))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_15
	(eval ())
	(pop a3)
	(xtopst a1)
	(mov (cdr a1) a2)
	(btcons a2 evalnsn)
	(bfnil a2 evbal2)
	(push a3)
	(push (@ ret_call_evalcar_16))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_16
	(eval ())
	(xtopst a1)
	(mov '2 a4)
	(bri a1)
evalnsn
	(mov '1 a4)
evaln1
	(push (cdr a1))
	(push a4)
	(push a3)
	(push (@ ret_call_evalcar_17))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_17
	(eval ())
	(pop a3)
	(pop a4)
	(xtopst a1)
	(incr a4)
	(btcons a1 evaln1)
	(bfnil a1 evbal)
	(bri a3)
evbal2
	(push a2)
	(bra evbal1)
evbal
	(eval ())
	(push a1)
evbal1
	(mov a3 a1)
evbale
	(eval ())
	(push (@ ret_call_findfn_18))
	(bra findfn)
ret_call_findfn_18
	(eval ())
	(mov a1 a2)
	(pop a1)
	(bra errbal)
evalf
	(eval ())
	(bri a3)
evalm
	(eval ())
	(push (@ evala1))
	(mov forme a1)
	(bri a3)
evaldm
	(eval ())
	(mov forme a1)
	(push a1)
	(push (@ evaldmr))
	(mov (cdr a1) a1)
	(bri a3)
evaldmr
	(eval ())
	(mov a1 a2)
	(pop a1)
	(push (@ ret_call_displace_19))
	(bra displace)
ret_call_displace_19
	(eval ())
	(bfnil evalst evalt)
	(bra evalan)
evexp
	(eval ())
	(mov '0 a4)
	(btcons a1 evexp1)
	(bra evexp2)
evexp1
	(push (cdr a1))
	(push a4)
	(push a3)
	(push a2)
	(push (@ ret_call_evalcar_20))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_20
	(eval ())
	(pop a2)
	(pop a3)
	(pop a4)
	(xtopst a1)
	(incr a4)
	(btcons a1 evexp1)
evexp2
	(bfnil a1 everrbal)
	(mov a2 errname)
	(movnil intllink)
evbnd
	(eval ())
	(mov (@ evexpg) intret)
	(mov a4 savea4)
	(mov a3 savea1)
	(mov (car a3) a3)
	(mov a3 savea2)
	(bfcons a3 evbnd6)
evbnd2
	(cabeq a4 '0 evbnr32)
	(decr a4)
	(mov (car a3) a2)
	(btcons a2 evbdst)
	(mov (cval a2) a1)
	(xspmov a4 (cval a2))
	(movxsp a1 a4)
	(mov (cdr a3) a3)
	(btcons a3 evbnd2)
	(bra evbnd6)
evbndext
	(eval ())
	(nop)
	(btcons a3 evbnd2)
evbnd6
	(btnil a3 evbnd9)
	(cabeq a3 |.nobind| evbnd91)
	(decr a4)
	(diff a4 savea4)
	(incr a4)
	(incr a4)
	(movnil a1)
	(bra evbnd8)
evbnd7
	(pop a2)
	(cons a2 a1)
evbnd8
	(sobgtz a4 evbnd7)
	(push (cval a3))
	(mov a1 (cval a3))
evbnd9
	(cabne a4 '0 evbnr1)
evbnd91
	(mov savea4 a4)
evbnd92
	(mov savea1 a1)
	(xspmov a4 a2)
	(cabne a2 (@ unbind1) evbnd94)
	(mov a4 a3)
	(plus '3 a3)
	(xspmov a3 a2)
	(cabne a2 a1 evbnd94)
	(plus '1 a3)
	(xspmov a3 a2)
	(cabeq a2 |.nobind| evbnd94)
	(adjstk a4)
	(bri intret)
evbnd94
	(push a4)
	(push savea2)
	(push a1)
evexpn
	(eval ())
	(push llink)
	(push dlink)
	(push (@ unbind1))
	(stack dlink)
	(mov intllink llink)
	(bri intret)
evbnr1
	(eval ())
	(movnil a1)
	(diff a4 savea4)
	(mov savea4 a1)
evbnr2
	(pop a3)
	(sobgtz a4 evbnr2)
	(mov savea4 a4)
evbnr31
	(mov a1 savea1)
	(mov savea2 a3)
	(mov (@ errbner) savea3)
	(bra unbise)
evbnr32
	(eval ())
	(mov savea4 a4)
evbnr33
	(eval ())
	(mov savea2 a1)
	(push (@ ret_call_lllength_21))
	(bra lllength)
ret_call_lllength_21
	(eval ())
	(bra evbnr31)
errbner
	(mov savea1 a1)
	(push (@ ret_call_ferrnam_22))
	(bra ferrnam)
ret_call_ferrnam_22
	(eval ())
	(bra errwna)
evbser
	(eval ())
	(sstack rvbser)
	(ncons a3)
	(cons a2 a3)
	(mov a3 savea1)
	(diff a4 savea4)
	(adjstk a4)
	(movnil a2)
	(bfcons a1 evbser5)
evbser4
	(mov (cdr a1) a3)
	(mov a2 (cdr a1))
	(mov a1 a2)
	(mov a3 a1)
	(btcons a1 evbser4)
evbser5
	(xtopst a2)
	(mov savea4 a4)
	(mov savea2 a3)
	(mov (@ evbser9) savea3)
	(bra unbise)
evbser9
	(mov savea1 a1)
	(push (@ ret_call_ferrnam_23))
	(bra ferrnam)
ret_call_ferrnam_23
	(eval ())
	(bra errilb)
evbdst
	(eval ())
	(mov a3 savea3)
	(xspmov a4 a3)
	(movnil a1)
	(stack rvbser)
	(push (@ ret_call_evbdst1_24))
	(bra evbdst1)
ret_call_evbdst1_24
	(eval ())
	(movnil a2)
	(bfcons a1 evbdst6)
evbdst4
	(mov (cdr a1) a3)
	(mov a2 (cdr a1))
	(mov a1 a2)
	(mov a3 a1)
	(btcons a1 evbdst4)
	(mov a2 a1)
evbdst6
	(mov savea3 a3)
	(movxsp a1 a4)
	(mov (cdr a3) a3)
	(btcons a3 evbnd2)
	(bra evbnd6)
evbdst1
	(eval ())
	(btnil a3 evbdst11)
	(bfcons a3 evbser)
evbdst11
	(push (cdr a2))
	(mov (car a2) a2)
	(btcons a2 evbdst8)
	(cons (cval a2) a1)
	(mov (car a3) (cval a2))
evbdst2
	(mov (cdr a3) a3)
	(pop a2)
	(btcons a2 evbdst1)
	(btnil a2 evbdst3)
	(cons (cval a2) a1)
	(mov a3 (cval a2))
evbdst3
	(return)
evbdst8
	(push a3)
	(mov (car a3) a3)
	(push (@ ret_call_evbdst1_25))
	(bra evbdst1)
ret_call_evbdst1_25
	(eval ())
	(pop a3)
	(bra evbdst2)
evexpg
	(eval ())
	(mov (cdr a1) a1)
	(bfcons a1 evprogn7)
	(mov (cdr a1) a2)
	(btcons a2 evprogn2)
	(bfnil a2 evprogn5)
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
evprogn
	(eval ())
	(bfcons a1 evprogn7)
	(mov (cdr a1) a2)
	(btcons a2 evprogn2)
	(bfnil a2 evprogn5)
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
evprogn2
	(push a1)
	(push (@ evprognr))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
evprognr
	(eval ())
	(pop a1)
	(mov (cdr a1) a1)
	(mov (cdr a1) a2)
	(btcons a2 evprogn2)
	(bfnil a2 evprogn5)
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
evprogn5
	(mov a2 a1)
evprogn6
	(push (@ ret_call_ferrnam_26))
	(bra ferrnam)
ret_call_ferrnam_26
	(eval ())
everrbal
	(bra errbal)
evprogn7
	(btnil a1 popj)
	(bra evprogn6)
evmac
	(eval ())
	(push (@ evala1))
	(mov forme a1)
	(bra evfexp)
evdmac
	(eval ())
	(mov forme a1)
	(push a1)
	(push (@ evaldmr))
	(mov (cdr a1) a1)
evfexp
	(eval ())
	(mov a2 errname)
bndtrb
	(eval ())
	(mov (@ evexpg) intret)
	(mov a3 savea1)
	(mov (car a3) a3)
	(mov a3 savea2)
bndtrbex
	(eval ())
	(mov '0 a4)
	(bra bndtrb2)
bndtrb1
	(bfcons a1 evbnr33)
	(incr a4)
	(mov (car a3) a2)
	(btcons a2 bndtrb7)
	(push (cval a2))
	(mov (car a1) (cval a2))
	(mov (cdr a1) a1)
	(mov (cdr a3) a3)
bndtrb2
	(btcons a3 bndtrb1)
	(btnil a3 bndtrb3)
	(cabeq a3 |.nobind| bndtrb5)
	(incr a4)
	(push (cval a3))
	(mov a1 (cval a3))
	(bra bndtrb6)
bndtrb3
	(btnil a1 bndtrb6)
	(bra evbnr33)
bndtrb4
	(push (car a1))
	(mov (cdr a1) a1)
	(chkstk mstack errfs)
	(incr a4)
bndtrb5
	(btcons a1 bndtrb4)
	(btnil a1 bndtrb6)
	(push (@ ret_call_ferrnam_27))
	(bra ferrnam)
ret_call_ferrnam_27
	(eval ())
	(bra errbal)
bndtrb6
	(eval ())
	(mov savea1 a1)
	(xspmov a4 a2)
	(cabne a2 (@ unbind1) evbnd94)
	(mov a4 a3)
	(plus '3 a3)
	(xspmov a3 a2)
	(cabne a2 a1 evbnd94)
	(plus '1 a3)
	(xspmov a3 a2)
	(cabeq a2 |.nobind| evbnd94)
	(adjstk a4)
	(bri intret)
bndtrb7
	(eval ())
	(push nil)
	(stack rvbser)
	(push (cdr a1))
	(push (cdr a3))
	(mov (car a1) a3)
	(movnil a1)
	(mov a4 savea4)
	(mov '0 a4)
	(push (@ ret_call_evbdst1_28))
	(bra evbdst1)
ret_call_evbdst1_28
	(eval ())
	(mov savea4 a4)
	(movnil a2)
	(bfcons a1 bndtrb9)
bndtrb8
	(mov (cdr a1) a3)
	(mov a2 (cdr a1))
	(mov a1 a2)
	(mov a3 a1)
	(btcons a1 bndtrb8)
bndtrbz
	(pop a3)
	(pop a1)
	(adjstk '1)
	(push a2)
	(bra bndtrb2)
bndtrb9
	(movnil a2)
	(bra bndtrbz)
evalfv
	(eval ())
	(bfcons a2 udfer)
	(mov (car a2) a3)
	(cabeq a3 |.lambda| evalll)
	(cabeq a3 |.flambda| evallf)
	(cabeq a3 |.mlambda| evallm)
	(cabeq a3 |.closure| evallc)
	(bra udfer)
evalll
	(eval ())
	(mov (cdr a2) a3)
	(mov |.lambda| errname)
	(push (@ ret_call_verlpar_29))
	(bra verlpar)
ret_call_verlpar_29
	(eval ())
	(mov |.lambda| a2)
	(mov '0 a4)
	(bra evalll2)
evalll1
	(push (cdr a1))
	(push a4)
	(push a3)
	(push a2)
	(push (@ ret_call_evalcar_30))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_30
	(eval ())
	(pop a2)
	(pop a3)
	(pop a4)
	(xtopst a1)
	(incr a4)
evalll2
	(btcons a1 evalll1)
	(bfnil a1 everrbal)
	(mov a2 errname)
	(mov llink intllink)
	(bra evbnd)
evallf
	(eval ())
	(mov (cdr a2) a3)
	(mov |.flambda| errname)
	(mov llink intllink)
	(push (@ ret_call_verlpar_31))
	(bra verlpar)
ret_call_verlpar_31
	(eval ())
	(bra bndtrb)
evallm
	(eval ())
	(mov forme a1)
	(mov (cdr a2) a3)
	(push (@ evala1))
	(mov |.mlambda| errname)
	(mov llink intllink)
	(push (@ ret_call_verlpar_32))
	(bra verlpar)
ret_call_verlpar_32
	(eval ())
	(bra bndtrb)
evallc
	(eval ())
	(mov (cdr a2) a2)
	(mov (cdr a2) a3)
	(mov |.closure| errname)
	(mov (car a2) intllink)
	(bra evexp)
udfer
	(eval ())
	(mov forme a4)
	(bfinvsbl a4 udfer8)
	(mov a4 a1)
	(push (@ ret_call_gettype_33))
	(bra gettype)
ret_call_gettype_33
	(eval ())
	(bfsymb a1 udfer8)
	(btnil a1 udfer8)
	(push a2)
	(mov |.eval| a2)
	(movnil a3)
	(push (@ ret_call_getfns_34))
	(bra getfns)
ret_call_getfns_34
	(eval ())
	(pop a2)
	(btnil a1 udfer8)
	(push forme)
	(mov '1 a4)
	(bra ffuncall)
udfer8
	(push a1)
	(mov a2 a1)
	(mov |.eval| a2)
	(push (@ ret_call_errudf_35))
	(bra errudf)
ret_call_errudf_35
	(eval ())
	(mov a1 a2)
	(pop a1)
	(cons a2 a1)
	(bra evalan)
xwnaer0
	(mov a1 a2)
	(bra wnaer00)
wnaer0
	(btnil a1 wnaer00)
	(bfcons a1 balr1)
wnaer00
	(mov '0 a1)
	(bra wnaer)
xwnaer1
	(mov a1 a2)
	(bra wnaer10)
wnaer1d
	(mov (cdr a1) a1)
wnaer1
	(btnil a1 wnaer10)
	(bfcons a1 balr1)
wnaer10
	(mov '1 a1)
	(bra wnaer)
xwnaer2
	(mov a1 a2)
	(bra wnaer20)
wnaer23d
	(mov (cdr a3) a3)
wnaer23
	(mov a3 a1)
wnaer2
	(btnil a1 wnaer20)
	(bfcons a1 balr1)
wnaer20
	(mov '2 a1)
	(bra wnaer)
xwnaer3
	(mov a1 a2)
	(bra wnaer30)
wnaer3d
	(mov (cdr a1) a1)
wnaer3
	(btnil a1 wnaer30)
	(bfcons a1 balr1)
wnaer30
	(mov '3 a1)
wnaer
	(eval ())
	(bra errwna)
balr1
	(eval ())
	(bra errbal)
	(lentry funcall 5)
	(mov |.funcall| errname)
	(cnbeq a4 '0 funcerwn)
funcall0
	(decr a4)
	(xspmov a4 a1)
	(movxsp (@ popj) a4)
ffuncall
	(eval ())
	(movnil intllink)
	(bfsymb a1 applys)
	(gftype a1 a3)
	(brx ((@ fncludf) (@ fncal0) (@ fncal1) (@ fncal2) (@ fncal3) (@ fncaln) (@ fncalf) (@ fncalex) (@ fncalex) (@ fncalmc) (@ fncalmd) (@ fncalm) (@ fncaldm)) a3)
funcerwn
	(mov a4 a1)
	(push (@ ret_call_ferrnam_36))
	(bra ferrnam)
ret_call_ferrnam_36
	(eval ())
	(bra errwna)
fncludf
	(eval ())
	(push a4)
	(push (@ ret_call_ferrnam_37))
	(bra ferrnam)
ret_call_ferrnam_37
	(eval ())
	(push (@ ret_call_errudf_38))
	(bra errudf)
ret_call_errudf_38
	(eval ())
	(pop a4)
	(bra ffuncall)
fncal0
	(eval ())
	(cnbne a4 '0 xwnaer0)
	(bri (fval a1))
fncal1
	(eval ())
	(cnbne a4 '1 xwnaer1)
	(mov (fval a1) a4)
	(pop a1)
	(bri a4)
fncal2
	(eval ())
	(cnbne a4 '2 xwnaer2)
	(pop a2)
	(mov (fval a1) a4)
	(pop a1)
	(bri a4)
fncal3
	(eval ())
	(cnbne a4 '3 xwnaer3)
	(pop a3)
	(pop a2)
	(mov (fval a1) a4)
	(pop a1)
	(bri a4)
fncaln
	(eval ())
	(bri (fval a1))
fncalf
	(eval ())
	(mov (fval a1) a2)
	(movnil a1)
	(bra fncalf2)
fncalf1
	(pop a3)
	(cons a3 a1)
fncalf2
	(sobgez a4 fncalf1)
	(bri a2)
fncalm
	(eval ())
	(mov (fval a1) a2)
	(movnil a1)
	(bra fncalm2)
fncalm1
	(pop a3)
	(cons a3 a1)
fncalm2
	(sobgez a4 fncalm1)
	(cons a3 a1)
	(push (@ evala1))
	(bri a2)
fncaldm
	(eval ())
	(mov (fval a1) a2)
	(movnil a1)
	(bra fncaldm2)
fncaldm1
	(pop a3)
	(cons a3 a1)
fncaldm2
	(sobgez a4 fncaldm1)
	(push a1)
	(push (@ evaldmr))
	(bri a2)
fncalex
	(eval ())
	(mov (fval a1) a3)
	(mov a1 errname)
	(bra evbnd)
fncalmc
	(eval ())
	(mov (fval a1) a3)
	(mov a1 errname)
	(movnil a1)
	(bra fncalmc2)
fncalmc1
	(pop a2)
	(cons a2 a1)
fncalmc2
	(sobgez a4 fncalmc1)
	(cons errname a1)
	(push (@ evala1))
	(bra bndtrb)
fncalmd
	(eval ())
	(mov (fval a1) a3)
	(mov a1 errname)
	(movnil a1)
	(bra fncalmd2)
fncalmd1
	(pop a2)
	(cons a2 a1)
fncalmd2
	(sobgez a4 fncalmd1)
	(push a1)
	(push (@ evaldmr))
	(bra bndtrb)
applys
	(eval ())
	(bfcons a1 fncludf)
	(mov (car a1) a3)
	(cabeq a3 |.lambda| applyll)
	(cabeq a3 |.flambda| applylf)
	(cabeq a3 |.closure| applylc)
	(bra fncludf)
applyll
	(eval ())
	(mov |.lambda| errname)
	(bra applylf1)
applylf
	(eval ())
	(mov |.flambda| errname)
applylf1
	(mov (cdr a1) a3)
	(push (@ ret_call_verlpar_39))
	(bra verlpar)
ret_call_verlpar_39
	(eval ())
	(bra evbnd)
applylc
	(eval ())
	(mov |.closure| errname)
	(mov (cdr a1) a1)
	(mov (car a1) intllink)
	(mov (cdr a1) a3)
	(bra evbnd)
	(lentry uapply 5)
	(mov |.uapply| errname)
	(cnblt a4 '2 uapplyer)
	(pop a2)
	(decr a4)
	(bra uapply3)
uapply2
	(push (car a2))
	(chkstk mstack errfs)
	(mov (cdr a2) a2)
	(incr a4)
uapply3
	(btcons a2 uapply2)
	(btnil a2 funcall0)
	(mov a2 a1)
	(decr a4)
	(xspmov a4 a2)
	(bra errbal)
uapplyer
	(mov '2 a1)
	(mov |.uapply| a2)
	(bra errwna)
apply
	(eval ())
	(push a1)
	(push a2)
	(mov '2 a4)
	(bra uapply)
unbinp
	(eval ())
	(pop a4)
	(cabeq a4 (@ unbind1) unbinp1)
	(cabeq a4 (@ unbind2) unbinp2)
	(cabeq a4 (@ unbind3) unbinp3)
	(cabeq a4 (@ unbind4) unbinp4)
	(cabeq a4 (@ unbind5) unbinp5)
	(cabeq a4 (@ unbind6) unbinp6)
	(cabeq a4 (@ unbind7) unbinp7)
	(cabeq a4 (@ unbind8) unbinp8)
	(cabeq a4 (@ unbind9) unbinp9)
	(cabeq a4 (@ unbind10) unbinp10)
	(ttymsg '14 (strg " error UNBINP "))
unbind0
	(eval ())
	(nop)
unbinp0
	(eval ())
	(bra erres)
unbind1
	(eval ())
	(mov (@ popj) a3)
unbinp1
	(eval ())
	(mov a3 savea3)
	(pop dlink)
	(pop llink)
	(adjstk '1)
	(pop a3)
	(pop a4)
unbise
	(eval ())
	(cabne a4 '1 unbis19)
	(bfcons a3 unbis14)
	(btcons (car a3) unbis19)
	(mov (car a3) a3)
	(pop (cval a3))
	(bri savea3)
unbis14
	(eval ())
	(cabeq a3 |.nobind| unbis15)
	(pop (cval a3))
	(bri savea3)
unbis15
	(adjstk '1)
	(bri savea3)
unbis19
	(eval ())
	(mov a4 savea4)
	(mov a2 savea2)
	(bra unbid15)
unbid12
	(cnbeq a4 '0 unbid18)
	(mov (car a3) a2)
	(mov (cdr a3) a3)
	(btcons a2 unbid19)
	(decr a4)
	(xspmov a4 (cval a2))
unbid15
	(btcons a3 unbid12)
	(btnil a3 unbid18)
	(cabeq a3 |.nobind| unbid18)
	(cnbeq a4 '0 unbid18)
	(decr a4)
	(xspmov a4 (cval a3))
unbid18
	(mov savea2 a2)
	(adjstk savea4)
	(bri savea3)
unbid19
	(push a3)
	(xspmov a4 a3)
	(push (@ ret_call_unbides1_40))
	(bra unbides1)
ret_call_unbides1_40
	(eval ())
	(pop a3)
	(decr a4)
	(bra unbid15)
unbides0
	(push (@ unbides2))
unbides1
	(eval ())
	(btnil a3 unbides3)
	(push (cdr a2))
	(mov (car a2) a2)
	(btcons a2 unbides0)
	(mov (car a3) (cval a2))
	(mov (cdr a3) a3)
unbides2
	(pop a2)
	(btcons a2 unbides1)
	(btnil a2 unbides3)
	(mov (car a3) (cval a2))
	(mov (cdr a3) a3)
unbides3
	(return)
unbind2
	(eval ())
	(mov (@ popj) a3)
unbinp2
	(eval ())
	(pop dlink)
	(mov a3 savea3)
	(bra unbdw7)
unbdw6
	(pop a3)
	(sftype a3 a4)
	(pop (fval a4))
unbdw7
	(pop a4)
	(cabne a4 '0 unbdw6)
	(bri savea3)
unbind3
	(eval ())
	(pop dlink)
	(pop a4)
	(return)
unbinp3
	(eval ())
	(pop dlink)
	(pop a4)
	(bri a3)
unbind4
	(eval ())
	(mov (@ popj) a3)
unbinp4
	(eval ())
	(pop dlink)
	(pop llink)
	(adjstk '1)
	(pop evalst)
	(pop forme)
	(pop funct)
	(pop savea1)
	(pop savea2)
	(pop savea3)
	(pop savea4)
	(adjstk '1)
	(bri a3)
unbind5
	(eval ())
	(mov (@ popj) a3)
unbinp5
	(eval ())
	(pop dlink)
	(pop a4)
	(push a3)
	(push a2)
	(ncons a1)
	(movnil a2)
	(cons a2 a1)
	(mov a1 a2)
	(mov a4 a1)
	(push (@ ret_call_apply_41))
	(bra apply)
ret_call_apply_41
	(eval ())
	(pop a2)
	(return)
unbind6
	(eval ())
	(mov (@ popj) a3)
unbinp6
	(eval ())
	(pop dlink)
	(xtopst a3)
	(push a2)
	(push a1)
	(mov a3 a1)
	(push (@ ret_call_evprogn_42))
	(bra evprogn)
ret_call_evprogn_42
	(eval ())
	(pop a1)
	(pop a2)
	(return)
unbind7
	(eval ())
	(mov (@ popj) a3)
unbinp7
	(eval ())
	(pop dlink)
	(xtopst a1)
	(bri a1)
unbind8
	(eval ())
	(topst dlink)
	(adjstk '2)
	(return)
unbinp8
	(eval ())
	(topst dlink)
	(adjstk '2)
	(bri a3)
unbind9
	(eval ())
	(mov (@ popj) a3)
unbinp9
	(eval ())
	(topst dlink)
	(mov llink a4)
	(mov (cdr a4) llink)
	(mov (car a4) a4)
	(movnil (cdr a4))
	(adjstk '2)
	(pop a4)
	(plus a4 a4)
	(adjstk a4)
	(bri a3)
unbind10
	(eval ())
	(mov (@ popj) a3)
unbinp10
	(eval ())
	(topst dlink)
	(mov llink a4)
	(mov (cdr a4) llink)
	(mov (car a4) a4)
	(mov (cdr a4) a4)
	(movnil (cdr a4))
	(adjstk '2)
	(bri a3)
	(lentry let 12)
	(push (cdr a1))
	(mov (car a1) a1)
	(movnil a2)
	(ncons a2)
	(push a2)
	(movnil a3)
	(ncons a3)
	(push a3)
let2
	(bfcons a1 let8)
	(mov (car a1) a4)
	(push (cdr a1))
	(btcons a4 let3)
	(mov a4 a1)
	(movnil a4)
	(bra let4)
let3
	(mov (car a4) a1)
	(mov (cdr a4) a4)
let4
	(ncons a1)
	(mov a1 (cdr a2))
	(mov a1 a2)
	(btnil a4 let5)
	(bfcons a4 letwla1)
	(bfnil (cdr a4) letwla1)
let5
	(mov (car a4) a1)
	(ncons a1)
	(mov a1 (cdr a3))
	(mov a1 a3)
	(pop a1)
	(bra let2)
let8
	(pop a1)
	(mov (cdr a1) a1)
	(pop a2)
	(mov (cdr a2) a2)
	(pop a4)
	(xcons a4 a2)
	(cons |.lambda| a2)
	(cons a2 a1)
	(return)
letwla1
	(mov a4 a1)
letwla2
	(mov |.let| a2)
	(bra errwna)
	(lentry letseq 6)
	(mov |.letseq| a1)
	(mov |.eval| a2)
	(bra errudf)
	(lentry letv 6)
	(push (cdr a1))
	(push (@ ret_call_evalcar_43))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_43
	(eval ())
	(xtopst a1)
	(push (cdr a1))
	(push (@ ret_call_evalcar_44))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_44
	(eval ())
	(mov |.letv| errname)
letvq2
	(pop a3)
	(pop a2)
	(cons a2 a3)
	(mov llink intllink)
	(push (@ ret_call_verlpar_45))
	(bra verlpar)
ret_call_verlpar_45
	(eval ())
	(bra bndtrb)
	(lentry letvq 6)
	(push (car a1))
	(mov (cdr a1) a1)
	(push (cdr a1))
	(push (@ ret_call_evalcar_46))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_46
	(eval ())
	(mov |.letvq| errname)
	(bra letvq2)
	(lentry flet 6)
	(bfcons a1 fleterr1)
	(mov (car a1) a2)
	(mov (cdr a1) savea1)
	(push '0)
	(bra flet3)
flet2
	(mov (car a2) a1)
	(bfcons a1 fleterr1)
	(mov (car a1) a3)
	(bfvar a3 fleterr2)
	(push (fval a3))
	(mov (cdr a1) (fval a3))
	(gftype a3 a4)
	(push a4)
	(sftype '7 a3)
	(push a3)
	(mov (cdr a2) a2)
flet3
	(btcons a2 flet2)
	(push dlink)
	(push (@ unbind2))
	(stack dlink)
	(mov savea1 a1)
	(mov |.flet| errname)
	(bra evprogn)
fleterr1
	(mov |.flet| a2)
	(bra errnla)
fleterr2
	(mov a3 a1)
	(mov |.flet| a2)
	(bra errnva)
	(lentry tag 6)
	(push (car a1))
tag3
	(push dlink)
	(push (@ unbind3))
	(stack dlink)
	(mov |.tag| errname)
	(bra evexpg)
	(lentry evtag 6)
	(push a1)
	(push (@ ret_call_evalcar_47))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_47
	(eval ())
	(bfsymb a1 evtagerr)
	(xtopst a1)
	(bra tag3)
evtagerr
	(pop a2)
	(mov |.evtag| a2)
	(bra errsym)
	(lentry evexit 6)
	(push (cdr a1))
	(push (@ ret_call_evalcar_48))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_48
	(eval ())
	(xtopst a1)
	(mov |.evexit| errname)
	(bra exit1)
	(lentry untlxit 6)
	(push (car a1))
	(push dlink)
	(push (@ unbind3))
	(stack dlink)
	(push (cdr a1))
untlxit1
	(topst a1)
	(mov |.untlxit| errname)
	(push (@ ret_call_evprogn_49))
	(bra evprogn)
ret_call_evprogn_49
	(eval ())
	(bra untlxit1)
	(lentry ffexit 6)
	(push (car a1))
	(mov (cdr a1) a1)
	(mov |.ffexit| errname)
exit1
	(push (@ ret_call_evprogn_50))
	(bra evprogn)
ret_call_evprogn_50
	(eval ())
	(pop a2)
findtag
	(eval ())
	(sstack dlink)
	(topst a3)
	(cabeq a3 (@ unbind3) evesc3)
	(cabeq a3 (@ unbind5) evesc4)
	(mov (@ findtag) a3)
	(bra unbinp)
evesc3
	(eval ())
	(adjstk '1)
	(pop dlink)
	(pop a3)
	(cabne a2 a3 findtag)
	(return)
evesc4
	(eval ())
	(adjstk '1)
	(pop dlink)
	(push a2)
	(push a1)
	(mov '3 a4)
	(bra funcall)
	(lentry unexit 6)
	(mov (car a1) a2)
	(mov (cdr a1) a1)
uvesc1
	(sstack dlink)
	(topst a3)
	(cabeq a3 (@ unbind3) uvesc3)
	(cabeq a3 (@ unbind5) uvesc4)
	(mov (@ uvesc1) a3)
	(bra unbinp)
uvesc3
	(adjstk '1)
	(pop dlink)
	(pop a3)
	(cabne a2 a3 uvesc1)
	(mov |.unexit| errname)
	(bra evprogn)
uvesc4
	(adjstk '1)
	(ncons a1)
	(cons a2 a1)
	(mov a1 a2)
	(pop dlink)
	(pop a1)
	(bra apply)
	(lentry unwind 6)
	(push (cdr a1))
	(push (@ ret_call_evalcar_51))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_51
	(eval ())
	(pop a2)
	(btfix a1 unwind4)
	(mov |.unwind| a2)
	(bra errnia)
unwind3
	(sstack dlink)
	(mov (@ unwind4) a3)
	(bra unbinp)
unwind4
	(sobgez a1 unwind3)
	(mov a2 a1)
	(mov |.unwind| errname)
	(bra evprogn)
llitsoft
	(eval ())
	(mov |.sysits| a3)
	(mov (cval a3) a3)
	(bra llitsofi)
llsupit
	(eval ())
	(mov |.sysits| a4)
	(mov (cval a4) a4)
	(bra llsupit1)
llsupit0
	(bfsymb (car a4) llitster)
	(cabeq a1 (car a4) llsupit3)
	(mov (cdr a4) a4)
llsupit1
	(btcons a4 llsupit0)
	(bfsymb a4 llitster)
llsupit2
	(cabeq a1 a4 llsupit4)
	(btnil a4 llitster)
	(mov (pkgc a4) a4)
	(bra llsupit2)
llsupit3
	(mov a2 a1)
	(mov a3 a2)
	(mov (cdr a4) a3)
	(bra llitsofi)
llsupit4
	(mov a2 a1)
	(mov a3 a2)
	(mov (pkgc a4) a3)
	(bra llitsofi)
llitsofi
	(push a2)
	(push savea4)
	(push savea3)
	(push savea2)
	(push savea1)
	(push funct)
	(push forme)
	(push evalst)
	(push a1)
	(push llink)
	(push dlink)
	(push (@ unbind4))
	(stack dlink)
	(movnil llink)
	(movnil evalst)
	(push a2)
	(mov a1 a2)
	(mov a3 a1)
	(push (@ ret_call_findits_52))
	(bra findits)
ret_call_findits_52
	(eval ())
	(btnil a1 llitster)
	(pop a2)
	(bra apply)
llitster
	(mov a2 a1)
	(mov |.itsoft| a2)
	(mov |.sysits| a3)
	(movnil (cval a3))
	(bra errudf)
findits0
	(pop a1)
findits
	(btcons a1 findits1)
	(bfsymb a1 llitster)
	(mov '0 a3)
	(push a2)
	(push (@ ret_call_getfns_53))
	(bra getfns)
ret_call_getfns_53
	(eval ())
	(pop a2)
	(return)
findits1
	(push (cdr a1))
	(mov (car a1) a1)
	(bfsymb a1 llitster)
	(push a2)
	(push (@ ret_call_getfn1_54))
	(bra getfn1)
ret_call_getfn1_54
	(eval ())
	(pop a2)
	(btnil a1 findits0)
	(adjstk '1)
	(return)
	(lentry llock 6)
	(push a1)
	(push (@ ret_call_evalcar_55))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_55
	(eval ())
	(xtopst a1)
	(push dlink)
	(push (@ unbind5))
	(stack dlink)
	(mov |.llock| errname)
	(bra evexpg)
	(lentry protect 6)
	(push (cdr a1))
	(push dlink)
	(push (@ unbind6))
	(stack dlink)
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
sysprot
	(eval ())
	(push dlink)
	(push (@ unbind7))
	(stack dlink)
	(bri a3)
	(lentry function 6)
	(bfcons a1 funcret)
	(mov (car a1) a1)
	(bfcons a1 funcret)
	(btnil llink funcret)
	(cabne (car a1) |.lambda| funcret)
	(mov (cdr a1) a1)
	(cons llink a1)
	(cons |.closure| a1)
funcret
	(return)
verlpar
	(eval ())
	(bfcons a3 vererr)
	(push a3)
	(mov (car a3) a3)
	(push (@ ret_call_verlpar4_56))
	(bra verlpar4)
ret_call_verlpar4_56
	(eval ())
	(pop a3)
	(return)
verlpar3
	(push (cdr a3))
	(mov (car a3) a3)
	(push (@ ret_call_verlpar5_57))
	(bra verlpar5)
ret_call_verlpar5_57
	(eval ())
	(pop a3)
verlpar4
	(btnil a3 verlpar9)
verlpar5
	(btcons a3 verlpar3)
	(btvar a3 verlpar9)
vererr
	(mov a3 a1)
	(push (@ ret_call_ferrnam_58))
	(bra ferrnam)
ret_call_ferrnam_58
	(eval ())
	(bra errbpa)
verlpar9
	(return)
ferrnam
	(eval ())
	(mov errname a2)
	(bffix a2 ferrname)
	(push a1)
	(push a2)
	(mov a2 a1)
	(push (@ ret_call_findfn_59))
	(bra findfn)
ret_call_findfn_59
	(eval ())
	(btnil a1 ferrnam1)
	(pop a2)
	(mov a1 a2)
	(pop a1)
	(return)
ferrnam1
	(pop a2)
	(pop a1)
ferrname
	(return)
	(end)
))
