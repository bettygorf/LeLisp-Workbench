(loader '((title |bandetty.lo|)))
(defvar #:sys-package:bitmap '#:bitmap:bandetty)
(defvar #:sys-package:colon #:sys-package:bitmap)
(#:messages:put-message 'errnotimplemented 'french '"Pas encore imple'mente'" 'defmessage)
(#:messages:put-message 'errnotimplemented 'english '"Not yet implemented" 'defmessage)
'errnotimplemented
(if (not (boundp '#:bitmap:bandetty:main-tty)) (progn (defvar #:bitmap:bandetty:xmax (sub1 (tyxmax))) (defvar #:bitmap:bandetty:ymax (tyymax)) (defvar #:bitmap:bandetty:main-tty 'tty)))
(loader'((fentry #:bitmap:bandetty:bitprologue subr0)
(entry #:bitmap:bandetty:bitprologue subr0)
(jcall tyflush)
(jcall typrologue)
(push (@ 101))
(mov '0 a4)
(jmp bitxmax)
101
(eval ())
(plus '1 a1)
(push a1)
(push (@ 102))
(mov '0 a4)
(jmp bitymax)
102
(eval ())
(plus '1 a1)
(pop a4)
(times a1 a4)
(mov '32 a2)
(mov a4 a1)
(jcall makestring)
(mov a1 (cvalq #:bitmap:bandetty:screen))
(jcall copy)
(mov a1 (cvalq #:bitmap:bandetty:oscreen))
(mov (cvalq #:bitmap:bandetty:screen) a1)
(jcall copy)
(mov a1 (cvalq #:bitmap:bandetty:blankscreen))
(mov (cvalq #:sys-package:tty) (cvalq #:bitmap:bandetty:main-tty))
(jcall #:graph-env:make)
(mov a1 (cvalq #:graph-env:main-graph-env))
(mov a1 (cvalq #:graph-env:current-graph-env))
(push (@ 103))
(push '(#:bitmap:bitprologue))
(mov '1 a4)
(jmp eval)
103
(eval ())
(return)
))
(loader'((fentry #:bitmap:bandetty:bitepilogue subr0)
(entry #:bitmap:bandetty:bitepilogue subr0)
(jcall tyflush)
(push (@ 101))
(push '(#:bitmap:bitepilogue))
(mov '1 a4)
(jmp eval)
101
(eval ())
(mov (cvalq #:bitmap:bandetty:main-tty) (cvalq #:sys-package:tty))
(jcall tyepilogue)
(jmp tyflush)
))
(loader'((fentry #:bitmap:bandetty:bitmap-refresh subr0)
(entry #:bitmap:bandetty:bitmap-refresh subr0)
(bra #:bitmap:bandetty:full-redisplay)
))
(loader'((fentry #:bitmap:bandetty:bitmap-flush subr0)
(entry #:bitmap:bandetty:bitmap-flush subr0)
(mov nil a1)
(return)
))
(loader'((fentry #:bitmap:bandetty:create-window subr1)
(entry #:bitmap:bandetty:create-window subr1)
(push a1)
(push a1)
(push (@ 101))
(mov '0 a4)
(jmp bitxmax)
101
(eval ())
(plus '1 a1)
(pop a4)
(hpmovx a1 a4 '2)
(hpmovx '0 (& 0) '0)
(push (@ 102))
(hpxmov (& 1) '2 a4)
(push a4)
(hpxmov (& 2) '3 a4)
(push a4)
(hpxmov (& 3) '4 a4)
(push a4)
(hpxmov (& 4) '5 a4)
(push a4)
(mov '4 a4)
(bra #:bitmap:bandetty:make-framed-screen)
102
(eval ())
(hpmovx a1 (& 0) '8)
(jcall #:graph-env:make)
(hpmovx a1 (& 0) '7)
(push (@ 103))
(push 't)
(push '0)
(push '0)
(push '0)
(push '0)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
103
(eval ())
(adjstk '1)
(return)
))
(loader'((fentry #:bitmap:bandetty:create-subwindow subr1)
(entry #:bitmap:bandetty:create-subwindow subr1)
(mov nil a3)
(mov 'errnotimplemented a2)
(mov '#:bitmap:bandetty:create-subwindow a1)
(jmp error)
))
(loader'((entry #:bitmap:bandetty:make-framed-screen nsubr)
(mov (& 3) a4)
(plus '2 a4)
(mov (& 2) a3)
(plus '2 a3)
(times a3 a4)
(mov '46 a2)
(mov a4 a1)
(jcall makestring)
(push a1)
(push (@ 101))
(push a1)
(push (cvalq #:bitmap:bandetty:blankscreen))
(mov (& 7) a4)
(plus '2 a4)
(push a4)
(mov (& 7) a4)
(plus '2 a4)
(push a4)
(push (@ 102))
(mov '0 a4)
(jmp bitxmax)
102
(eval ())
(plus '1 a1)
(push a1)
(push (@ 103))
(mov '0 a4)
(jmp bitymax)
103
(eval ())
(plus '1 a1)
(push a1)
(push '1)
(push '1)
(push '0)
(push '0)
(push (& 15))
(push (& 15))
(mov '12 a4)
(jmp bltscreen)
101
(eval ())
(push (@ 106))
(push (& 2))
(push '0)
(mov '2 a4)
(jmp =)
106
(eval ())
(bfnil a1 105)
(push (@ 107))
(push (& 1))
(push '0)
(push '61)
(mov '2 a4)
(plus (& 8) a4)
(push a4)
(mov '4 a4)
(jmp fillstring)
107
(eval ())
105
(push (@ 108))
(push (& 1))
(push '1)
(push (& 5))
(push '0)
(push (@ 109))
(hgsize (& 8) a4)
(push a4)
(push (& 11))
(mov '2 a4)
(jmp min)
109
(eval ())
(push a1)
(mov '5 a4)
(jmp bltstring)
108
(eval ())
(mov (& 0) a1)
(adjstk '5)
(return)
))
(loader'((fentry #:image:rectangle:window:current-window subr1)
(entry #:image:rectangle:window:current-window subr1)
(mov nil a1)
(return)
))
(loader'((fentry #:image:rectangle:window:uncurrent-window subr1)
(entry #:image:rectangle:window:uncurrent-window subr1)
(mov (cvalq #:graph-env:main-graph-env) (cvalq #:graph-env:current-graph-env))
(mov (cvalq #:graph-env:main-graph-env) a1)
(return)
))
(loader'((fentry #:image:rectangle:window:modify-window nsubr)
(entry #:image:rectangle:window:modify-window nsubr)
(cnbeq a4 '8 101)
(mov '#:image:rectangle:window:modify-window a1)
(mov '8 a2)
(jmp #:llcp:errwna)
101
(btnil (& 6) 103)
(mov '0 (& 6))
(hpmovx (& 6) (& 7) '0)
103
(btnil (& 5) 105)
(hpmovx (& 5) (& 7) '1)
105
(bfnil (& 4) 108)
(btnil (& 3) 107)
108
(bfnil (& 4) 110)
(push (@ 111))
(mov '0 a4)
(jmp bitxmax)
111
(eval ())
(plus '1 a1)
(mov a1 (& 4))
110
(bfnil (& 3) 113)
(hpxmov (& 7) '3 a4)
(mov a4 (& 3))
113
(push (@ 114))
(push (& 5))
(push (& 5))
(hpxmov (& 10) '4 a4)
(push a4)
(hpxmov (& 11) '5 a4)
(push a4)
(mov '4 a4)
(bra #:bitmap:bandetty:make-framed-screen)
114
(eval ())
(push a1)
(push (@ 115))
(push a1)
(hpxmov (& 10) '8 a4)
(push a4)
(mov '2 a4)
(plus (& 8) a4)
(push a4)
(mov '2 a4)
(plus (& 8) a4)
(push a4)
(hpxmov (& 13) '2 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(hpxmov (& 14) '3 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push '1)
(push '1)
(push '1)
(push '1)
(push (@ 116))
(push (& 17))
(hpxmov (& 21) '2 a4)
(push a4)
(mov '2 a4)
(jmp min)
116
(eval ())
(push a1)
(push (@ 117))
(push (& 17))
(hpxmov (& 22) '3 a4)
(push a4)
(mov '2 a4)
(jmp min)
117
(eval ())
(push a1)
(mov '12 a4)
(jmp bltscreen)
115
(eval ())
(hpmovx (& 0) (& 8) '8)
(hpmovx (& 5) (& 8) '2)
(hpmovx (& 4) (& 8) '3)
(adjstk '1)
107
(bfnil (& 2) 120)
(btnil (& 1) 119)
120
(btnil (& 2) 122)
(hpmovx (& 2) (& 7) '4)
122
(btnil (& 1) 124)
(hpmovx (& 1) (& 7) '5)
124
(push (@ 125))
(hpxmov (& 8) '8 a4)
(push a4)
(push '0)
(push (@ 128))
(hpxmov (& 11) '5 a4)
(push a4)
(push '0)
(mov '2 a4)
(jmp =)
128
(eval ())
(btnil a1 126)
(mov '46 a4)
(bra 127)
126
(mov '61 a4)
127
(push a4)
(hpxmov (& 11) '2 a3)
(mov '2 a4)
(plus a3 a4)
(push a4)
(mov '4 a4)
(jmp fillstring)
125
(eval ())
(push (@ 129))
(hpxmov (& 8) '8 a4)
(push a4)
(push '1)
(hpxmov (& 10) '4 a4)
(push a4)
(push '0)
(hpxmov (& 12) '2 a4)
(push a4)
(mov '5 a4)
(jmp bltstring)
129
(eval ())
119
(btnil (& 0) 131)
(hpmovx (& 0) (& 7) '6)
131
(push (@ 132))
(push 't)
(push '0)
(push '0)
(push '0)
(push '0)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
132
(eval ())
(mov (& 7) a1)
(adjstk '8)
(return)
))
(loader'((fentry #:image:rectangle:window:kill-window subr1)
(entry #:image:rectangle:window:kill-window subr1)
(push (@ 101))
(push 't)
(push '0)
(push '0)
(push '0)
(push '0)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:pop-window subr1)
(entry #:image:rectangle:window:pop-window subr1)
(push (@ 101))
(push 't)
(push '0)
(push '0)
(push '0)
(push '0)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:move-behind-window subr2)
(entry #:image:rectangle:window:move-behind-window subr2)
(push (@ 101))
(push 't)
(push '0)
(push '0)
(push '0)
(push '0)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:current-keyboard-focus-window subr1)
(entry #:image:rectangle:window:current-keyboard-focus-window subr1)
(mov nil a1)
(return)
))
(loader'((fentry #:image:rectangle:window:uncurrent-keyboard-focus-window subr1)
(entry #:image:rectangle:window:uncurrent-keyboard-focus-window subr1)
(mov nil a1)
(return)
))
(loader'((fentry #:bitmap:bandetty:find-window subr2)
(entry #:bitmap:bandetty:find-window subr2)
(mov nil a3)
(mov 'errnotimplemented a2)
(mov '#:bitmap:bandetty:find-window a1)
(jmp error)
))
(if (not (boundp '#:bitmap:bandetty:lx)) (progn (defvar #:bitmap:bandetty:lx) (defvar #:bitmap:bandetty:ly)))
(loader'((fentry #:image:rectangle:window:map-window nsubr)
(entry #:image:rectangle:window:map-window nsubr)
(cnbeq a4 '5 101)
(mov '#:image:rectangle:window:map-window a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(push (cvalq #:bitmap:bandetty:ly))
(mov (& 1) (cvalq #:bitmap:bandetty:ly))
(push (cvalq #:bitmap:bandetty:lx))
(mov (& 3) (cvalq #:bitmap:bandetty:lx))
(push '2)
(push '(#:bitmap:bandetty:ly #:bitmap:bandetty:lx))
(push (@ #:image:rectangle:window:map-window))
(push llink)
(mov nil llink)
(push dlink)
(push cbindn)
(stack dlink)
(hpxmov (& 12) '0 a4)
(mov (& 11) a3)
(diff a4 a3)
(mov (cvalq #:bitmap:bandetty:lx) a4)
(mov a3 (cval a4))
(hpxmov (& 12) '1 a3)
(mov (& 10) a2)
(diff a3 a2)
(mov (cvalq #:bitmap:bandetty:ly) a3)
(mov a2 (cval a3))
(mov a2 a1)
(mov (& 1) dlink)
(mov (& 2) llink)
(mov (& 6) (cvalq #:bitmap:bandetty:lx))
(mov (& 7) (cvalq #:bitmap:bandetty:ly))
(adjstk '13)
(return)
))
(if (not (boundp '#:bitmap:bandetty:reread)) (progn (defvar #:bitmap:bandetty:reread ())))
(loader'((fentry #:bitmap:bandetty:event-mode subr1)
(entry #:bitmap:bandetty:event-mode subr1)
(mov nil a1)
(return)
))
(loader'((fentry #:bitmap:bandetty:eventp subr0)
(entry #:bitmap:bandetty:eventp subr0)
(mov (cvalq #:bitmap:bandetty:reread) a1)
(bfnil a1 29999)
(jcall tyflush)
(push (cvalq #:bitmap:bandetty:main-tty))
(push (cvalq #:sys-package:tty))
(mov (& 1) (cvalq #:sys-package:tty))
(push '1)
(push '(#:sys-package:tty))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(push (@ 102))
(push dlink)
(push prot)
(stack dlink)
(jcall tys)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 103) a3)
102
(push a3)
(push a2)
(jcall tyflush)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
103
(eval ())
(mov (& 1) dlink)
(mov (& 6) (cvalq #:sys-package:tty))
(adjstk '8)
(btnil a1 104)
(jcall ncons)
(mov a1 (cvalq #:bitmap:bandetty:reread))
(return)
104
(mov nil a1)
(return)
29999
(return)
))
(loader'((fentry #:bitmap:bandetty:read-event subr1)
(entry #:bitmap:bandetty:read-event subr1)
(push a1)
(btnil (cvalq #:bitmap:bandetty:reread) 101)
(mov (cvalq #:bitmap:bandetty:reread) a2)
(mov (cdr a2) (cvalq #:bitmap:bandetty:reread))
(mov (car a2) a2)
(bra 102)
101
(jcall tyflush)
(push (cvalq #:bitmap:bandetty:main-tty))
(push (cvalq #:sys-package:tty))
(mov (& 1) (cvalq #:sys-package:tty))
(push '1)
(push '(#:sys-package:tty))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(jcall tyi)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(jcall tyflush)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(mov (& 1) dlink)
(mov (& 6) (cvalq #:sys-package:tty))
(adjstk '8)
(mov a1 a2)
102
(pop a1)
(bra make-ascii-event)
))
(loader'((fentry #:bitmap:bandetty:peek-event subr1)
(entry #:bitmap:bandetty:peek-event subr1)
(push a1)
(btnil (cvalq #:bitmap:bandetty:reread) 101)
(mov (cvalq #:bitmap:bandetty:reread) a2)
(mov (car a2) a2)
(bra 102)
101
(jcall tyflush)
(push (cvalq #:bitmap:bandetty:main-tty))
(push (cvalq #:sys-package:tty))
(mov (& 1) (cvalq #:sys-package:tty))
(push '1)
(push '(#:sys-package:tty))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(jcall tyi)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(jcall tyflush)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(mov (& 1) dlink)
(mov (& 6) (cvalq #:sys-package:tty))
(adjstk '8)
(jcall ncons)
(mov a1 (cvalq #:bitmap:bandetty:reread))
(mov (car a1) a2)
102
(pop a1)
(bra make-ascii-event)
))
(loader'((fentry #:bitmap:bandetty:flush-event subr0)
(entry #:bitmap:bandetty:flush-event subr0)
(mov nil (cvalq #:bitmap:bandetty:reread))
(mov nil a1)
(return)
))
(loader'((fentry #:bitmap:bandetty:add-event subr1)
(entry #:bitmap:bandetty:add-event subr1)
(mov nil a1)
(return)
))
(loader'((fentry #:bitmap:bandetty:grab-event subr1)
(entry #:bitmap:bandetty:grab-event subr1)
(mov a1 a3)
(mov 'errnotimplemented a2)
(mov '#:bitmap:bandetty:grab-event a1)
(jmp error)
))
(loader'((fentry #:bitmap:bandetty:ungrab-event subr0)
(entry #:bitmap:bandetty:ungrab-event subr0)
(mov nil a3)
(mov 'errnotimplemented a2)
(mov '#:bitmap:bandetty:ungrab-event a1)
(jmp error)
))
(loader'((fentry #:bitmap:bandetty:itsoft-event subr1)
(entry #:bitmap:bandetty:itsoft-event subr1)
(mov a1 a3)
(mov 'errnotimplemented a2)
(mov '#:bitmap:bandetty:itsoft-event a1)
(jmp error)
))
(loader'((fentry #:bitmap:bandetty:read-mouse subr1)
(entry #:bitmap:bandetty:read-mouse subr1)
(hpmovx '0 a1 '5)
(hpmovx '0 a1 '6)
(hpmovx '0 a1 '3)
(hpmovx '0 a1 '4)
(hpmovx nil a1 '1)
(hpmovx '0 a1 '2)
(mov '0 a1)
(return)
))
(loader'((entry make-ascii-event subr2)
(push a1)
(hpmovx a2 a1 '2)
(hpmovx 'ascii-event a1 '0)
(push a1)
(push (@ 101))
(mov '0 a4)
(jmp current-keyboard-focus-window)
101
(eval ())
(pop a4)
(hpmovx a1 a4 '1)
(hpmovx '0 (& 0) '5)
(hpmovx '0 (& 0) '6)
(hpmovx '0 (& 0) '3)
(hpmovx '0 (& 0) '4)
(mov (& 0) a1)
(adjstk '1)
(return)
))
(if (not (boundp '#:bitmap:bandetty:blankscreen)) (progn (defvar #:bitmap:bandetty:screen) (defvar #:bitmap:bandetty:oscreen) (defvar #:bitmap:bandetty:blankscreen) (defvar #:bitmap:bandetty:flag t) (defvar #:bitmap:bandetty:delayed ())))
(loader'((entry #:bitmap:bandetty:delayed-redisplay nsubr)
(jcall #:llcp:nlist)
(mov (cvalq #:bitmap:bandetty:delayed) a2)
(jcall cons)
(mov a1 (cvalq #:bitmap:bandetty:delayed))
(return)
))
(loader'((entry #:bitmap:bandetty:flush-delayed-redisplay nsubr)
(bfnil (cvalq #:bitmap:bandetty:delayed) 101)
(push (@ 103))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(mov '5 a4)
(jmp #:bitmap:bandetty:do-redisplay)
103
(eval ())
(adjstk '5)
(return)
101
(mov (cvalq #:bitmap:bandetty:delayed) a1)
(jcall nreverse)
(mov a1 (cvalq #:bitmap:bandetty:delayed))
104
(btnil (cvalq #:bitmap:bandetty:delayed) 105)
(push (@ 106))
(push '#:bitmap:bandetty:do-redisplay)
(mov (cvalq #:bitmap:bandetty:delayed) a4)
(mov (cdr a4) (cvalq #:bitmap:bandetty:delayed))
(push (car a4))
(mov '2 a4)
(jmp apply)
106
(eval ())
(bra 104)
105
(cabeq (& 4) 't 107)
(push (@ 109))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(mov '5 a4)
(jmp #:bitmap:bandetty:do-redisplay)
109
(eval ())
(adjstk '5)
(return)
107
(mov nil a1)
(adjstk '5)
(return)
))
(loader'((entry #:bitmap:bandetty:redisplay nsubr)
(bfnil (cvalq #:bitmap:bandetty:flag) 101)
(push (@ 103))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(mov '5 a4)
(bra #:bitmap:bandetty:delayed-redisplay)
103
(eval ())
(adjstk '5)
(return)
101
(push (@ 104))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(mov '5 a4)
(bra #:bitmap:bandetty:flush-delayed-redisplay)
104
(eval ())
(adjstk '5)
(return)
))
(loader'((fentry #:bitmap:bandetty:do-redisplay nsubr)
(entry #:bitmap:bandetty:do-redisplay nsubr)
(cnbeq a4 '5 101)
(mov '#:bitmap:bandetty:do-redisplay a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(push nil)
(push (cvalq #:bitmap:bandetty:flag))
(mov (& 1) (cvalq #:bitmap:bandetty:flag))
(push '1)
(push '(#:bitmap:bandetty:flag))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(jcall tyflush)
(push nil)
(push (@ 102))
(mov '0 a4)
(jmp outchan)
102
(eval ())
(push a1)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(push (@ 105))
(push 't)
(mov '1 a4)
(jmp outchan)
105
(eval ())
(push (@ 106))
(mov '0 a4)
(jmp rmargin)
106
(eval ())
(mov a1 (& 4))
(push (@ 107))
(push (@ 108))
(mov '0 a4)
(jmp outbuf)
108
(eval ())
(hgsize a1 a4)
(plus '1 a4)
(push a4)
(mov '1 a4)
(jmp rmargin)
107
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(push (@ 109))
(push (& 4))
(mov '1 a4)
(jmp outchan)
109
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(adjstk '1)
(push (@ 110))
(push dlink)
(push prot)
(stack dlink)
(push (cvalq #:bitmap:bandetty:main-tty))
(push (cvalq #:sys-package:tty))
(mov (& 1) (cvalq #:sys-package:tty))
(push '1)
(push '(#:sys-package:tty))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(cabne (& 24) 't 112)
(push (@ 114))
(push (cvalq #:bitmap:bandetty:screen))
(push (cvalq #:bitmap:bandetty:blankscreen))
(push (@ 115))
(mov '0 a4)
(jmp bitxmax)
115
(eval ())
(plus '1 a1)
(push a1)
(push (@ 116))
(mov '0 a4)
(jmp bitymax)
116
(eval ())
(plus '1 a1)
(push a1)
(mov '4 a4)
(jmp bltscreen)
114
(eval ())
(push (cvalq #:window:all-windows))
117
(bfcons (& 0) 118)
(mov (& 0) a1)
(mov (cdr a1) (& 0))
(mov (car a1) a1)
(jcall #:bitmap:bandetty:redisplay1)
(bra 117)
118
(adjstk '1)
(push (@ 119))
(push (cvalq #:bitmap:bandetty:screen))
(push (cvalq #:bitmap:bandetty:oscreen))
(push (@ 120))
(mov '0 a4)
(jmp bitxmax)
120
(eval ())
(plus '1 a1)
(push a1)
(push (@ 121))
(mov '0 a4)
(jmp bitymax)
121
(eval ())
(plus '1 a1)
(push a1)
(mov '4 a4)
(jmp redisplayscreen)
119
(eval ())
(bra 113)
112
(hpxmov (& 24) '6 a1)
(mov '0 a2)
(jcall <>)
(btnil a1 113)
(mov (cvalq #:window:all-windows) a2)
(mov (& 24) a1)
(jcall memq)
(push a1)
124
(bfcons (& 0) 125)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(push (@ 126))
(push (& 1))
(push (& 27))
(push (& 27))
(push (& 27))
(push (& 27))
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay1-mini)
126
(eval ())
(adjstk '1)
(bra 124)
125
(adjstk '1)
(push (@ 127))
(push (& 24))
(push (@ 128))
(mov '0 a4)
(jmp bitxmax)
128
(eval ())
(plus '1 a1)
(push a1)
(mov '2 a4)
(jmp min)
127
(eval ())
(mov a1 (& 23))
(push (@ 129))
(push a1)
(push '0)
(mov '2 a4)
(jmp max)
129
(eval ())
(mov a1 (& 23))
(push (@ 130))
(push (& 22))
(push (@ 131))
(mov '0 a4)
(jmp bitxmax)
131
(eval ())
(plus '1 a1)
(push a1)
(mov '2 a4)
(jmp min)
130
(eval ())
(mov a1 (& 21))
(push (@ 132))
(push a1)
(push '0)
(mov '2 a4)
(jmp max)
132
(eval ())
(mov a1 (& 21))
(push (@ 133))
(push (& 23))
(push (@ 134))
(mov '0 a4)
(jmp bitymax)
134
(eval ())
(plus '1 a1)
(push a1)
(mov '2 a4)
(jmp min)
133
(eval ())
(mov a1 (& 22))
(push (@ 135))
(push a1)
(push '0)
(mov '2 a4)
(jmp max)
135
(eval ())
(mov a1 (& 22))
(push (@ 136))
(push (& 21))
(push (@ 137))
(mov '0 a4)
(jmp bitymax)
137
(eval ())
(plus '1 a1)
(push a1)
(mov '2 a4)
(jmp min)
136
(eval ())
(mov a1 (& 20))
(push (@ 138))
(push a1)
(push '0)
(mov '2 a4)
(jmp max)
138
(eval ())
(mov a1 (& 20))
(push (@ 139))
(push (cvalq #:bitmap:bandetty:screen))
(push (cvalq #:bitmap:bandetty:oscreen))
(push (@ 140))
(mov '0 a4)
(jmp bitxmax)
140
(eval ())
(plus '1 a1)
(push a1)
(push (@ 141))
(mov '0 a4)
(jmp bitymax)
141
(eval ())
(plus '1 a1)
(push a1)
(push (@ 142))
(mov '0 a4)
(jmp bitxmax)
142
(eval ())
(plus '1 a1)
(push a1)
(push (@ 143))
(mov '0 a4)
(jmp bitymax)
143
(eval ())
(plus '1 a1)
(push a1)
(push (& 30))
(push (& 30))
(push (& 32))
(push (& 32))
(push (& 32))
(push (& 32))
(mov '12 a4)
(jmp redisplayscreen)
139
(eval ())
113
(jcall tyflush)
(mov (& 1) dlink)
(mov (& 6) (cvalq #:sys-package:tty))
(adjstk '8)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 111) a3)
110
(push a3)
(push a2)
(push (@ 144))
(mov '0 a4)
(jmp outchan)
144
(eval ())
(push a1)
(push (@ 145))
(push dlink)
(push prot)
(stack dlink)
(push (@ 147))
(push 't)
(mov '1 a4)
(jmp outchan)
147
(eval ())
(push (@ 148))
(push (& 8))
(mov '1 a4)
(jmp rmargin)
148
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 146) a3)
145
(push a3)
(push a2)
(push (@ 149))
(push (& 4))
(mov '1 a4)
(jmp outchan)
149
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
146
(eval ())
(adjstk '1)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
111
(eval ())
(adjstk '1)
(mov (& 1) dlink)
(mov (& 6) (cvalq #:bitmap:bandetty:flag))
(adjstk '13)
(return)
))
(loader'((fentry #:bitmap:bandetty:redisplay1 subr1)
(entry #:bitmap:bandetty:redisplay1 subr1)
(push a1)
(push (@ 103))
(hpxmov a1 '6 a4)
(push a4)
(push '0)
(mov '2 a4)
(jmp =)
103
(eval ())
(bfnil a1 101)
(push (@ 104))
(push (cvalq #:bitmap:bandetty:screen))
(hpxmov (& 2) '8 a4)
(push a4)
(push (@ 105))
(mov '0 a4)
(jmp bitxmax)
105
(eval ())
(plus '1 a1)
(push a1)
(push (@ 106))
(mov '0 a4)
(jmp bitymax)
106
(eval ())
(plus '1 a1)
(push a1)
(hpxmov (& 5) '2 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(hpxmov (& 6) '3 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(hpxmov (& 7) '0 a4)
(diff '1 a4)
(push a4)
(hpxmov (& 8) '1 a4)
(diff '1 a4)
(push a4)
(push '0)
(push '0)
(hpxmov (& 11) '2 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(hpxmov (& 12) '3 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(mov '12 a4)
(jmp bltscreen)
104
(eval ())
(adjstk '1)
(return)
101
(mov nil a1)
(adjstk '1)
(return)
))
(loader'((entry #:bitmap:bandetty:redisplay1-mini nsubr)
(push (@ 103))
(hpxmov (& 5) '6 a4)
(push a4)
(push '0)
(mov '2 a4)
(jmp =)
103
(eval ())
(bfnil a1 101)
(push (@ 104))
(push (cvalq #:bitmap:bandetty:screen))
(hpxmov (& 6) '8 a4)
(push a4)
(push (@ 105))
(mov '0 a4)
(jmp bitxmax)
105
(eval ())
(plus '1 a1)
(push a1)
(push (@ 106))
(mov '0 a4)
(jmp bitymax)
106
(eval ())
(plus '1 a1)
(push a1)
(hpxmov (& 9) '2 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(hpxmov (& 10) '3 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push (& 10))
(push (& 10))
(hpxmov (& 13) '0 a4)
(mov (& 12) a3)
(diff a4 a3)
(plus '1 a3)
(push a3)
(hpxmov (& 14) '1 a4)
(mov (& 12) a3)
(diff a4 a3)
(plus '1 a3)
(push a3)
(push (& 12))
(push (& 12))
(mov '12 a4)
(jmp bltscreen)
104
(eval ())
(adjstk '5)
(return)
101
(mov nil a1)
(adjstk '5)
(return)
))
(loader'((entry #:bitmap:bandetty:full-redisplay subr0)
(push nil)
(push (cvalq #:bitmap:bandetty:flag))
(mov (& 1) (cvalq #:bitmap:bandetty:flag))
(push '1)
(push '(#:bitmap:bandetty:flag))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(jcall tyflush)
(mov (& 1) dlink)
(mov (& 6) (cvalq #:bitmap:bandetty:flag))
(adjstk '8)
(jcall tyflush)
(push (cvalq #:bitmap:bandetty:main-tty))
(push (cvalq #:sys-package:tty))
(mov (& 1) (cvalq #:sys-package:tty))
(push '1)
(push '(#:sys-package:tty))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(push (@ 101))
(push dlink)
(push prot)
(stack dlink)
(jcall tycls)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 102) a3)
101
(push a3)
(push a2)
(jcall tyflush)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
102
(eval ())
(mov (& 1) dlink)
(mov (& 6) (cvalq #:sys-package:tty))
(adjstk '8)
(push (@ 103))
(push (cvalq #:bitmap:bandetty:oscreen))
(push (cvalq #:bitmap:bandetty:blankscreen))
(push (@ 104))
(mov '0 a4)
(jmp bitxmax)
104
(eval ())
(push a1)
(push (@ 105))
(mov '0 a4)
(jmp bitymax)
105
(eval ())
(push a1)
(mov '4 a4)
(jmp bltscreen)
103
(eval ())
(push (@ 106))
(push 't)
(push '0)
(push '0)
(push '0)
(push '0)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
106
(eval ())
(return)
))
(loader'((fentry #:tty:window:redisplayscreen nsubr)
(entry #:tty:window:redisplayscreen nsubr)
(jcall #:llcp:nlist)
(push nil)
(push (cvalq #:bitmap:bandetty:flag))
(mov (& 1) (cvalq #:bitmap:bandetty:flag))
(push '1)
(push '(#:bitmap:bandetty:flag))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(push (@ 101))
(push '#:tty:redisplayscreen)
(push a1)
(mov '2 a4)
(jmp apply)
101
(eval ())
(mov (& 1) dlink)
(mov (& 6) (cvalq #:bitmap:bandetty:flag))
(adjstk '8)
(push (@ 102))
(push 't)
(push '0)
(push '0)
(push '0)
(push '0)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
102
(eval ())
(return)
))
(loader'((fentry #:tty:window:tycls subr0)
(entry #:tty:window:tycls subr0)
(jcall tyymax)
(push '0)
(push a1)
101
(push (@ 103))
(push (& 2))
(push (& 2))
(mov '2 a4)
(jmp <=)
103
(eval ())
(btnil a1 102)
(mov (& 1) a2)
(mov '0 a1)
(jcall tycursor)
(jcall tycleol)
(push (@ 104))
(push (& 2))
(push '1)
(mov '2 a4)
(jmp |+|)
104
(eval ())
(mov a1 (& 1))
(bra 101)
102
(adjstk '2)
(mov '0 a2)
(mov '0 a1)
(jmp tycursor)
))
(loader'((fentry #:tty:window:tycleol subr0)
(entry #:tty:window:tycleol subr0)
(push (@ 101))
(mov '0 a4)
(jmp current-window)
101
(eval ())
(push a1)
(mov (cvalq #:window:all-windows) a1)
(jcall last)
(mov (car a1) a2)
(pop a1)
(jcall eq)
(push a1)
(push (@ 102))
(push 'not-all-white)
(push dlink)
(push tag)
(stack dlink)
(push (@ 103))
(mov '0 a4)
(jmp current-window)
103
(eval ())
(hpxmov a1 '19 a4)
(plus '1 a4)
(push a4)
(push (@ 104))
(mov '0 a4)
(jmp current-window)
104
(eval ())
(hpxmov a1 '2 a3)
(mov '2 a4)
(plus a3 a4)
(pop a3)
(times a4 a3)
(push a3)
(push (@ 105))
(mov '0 a4)
(jmp current-window)
105
(eval ())
(hpxmov a1 '18 a4)
(plus '1 a4)
(pop a3)
(plus a4 a3)
(push a3)
(push (@ 106))
(mov '0 a4)
(jmp current-window)
106
(eval ())
(hpxmov a1 '19 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push (@ 107))
(mov '0 a4)
(jmp current-window)
107
(eval ())
(hpxmov a1 '2 a4)
(mov '2 a3)
(plus a4 a3)
(pop a4)
(times a3 a4)
(diff '2 a4)
(push a4)
108
(push (@ 110))
(push (& 2))
(push (& 2))
(mov '2 a4)
(jmp <=)
110
(eval ())
(btnil a1 109)
(push (@ 113))
(mov '0 a4)
(jmp current-window)
113
(eval ())
(hpxmov a1 '8 a4)
(hbxmov a4 (& 1) a4)
(cabeq '32 a4 112)
(mov 't a1)
(mov 'not-all-white a2)
(jmp #:llcp:exit)
112
(push (@ 114))
(push (& 2))
(push '1)
(mov '2 a4)
(jmp |+|)
114
(eval ())
(mov a1 (& 1))
(bra 108)
109
(adjstk '2)
(mov nil a1)
(mov (& 1) dlink)
(adjstk '4)
102
(eval ())
(push a1)
(push (@ 115))
(push (@ 116))
(mov '0 a4)
(jmp current-window)
116
(eval ())
(hpxmov a1 '8 a4)
(push a4)
(push (cvalq #:bitmap:bandetty:blankscreen))
(push (@ 117))
(mov '0 a4)
(jmp current-window)
117
(eval ())
(hpxmov a1 '2 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push (@ 118))
(mov '0 a4)
(jmp current-window)
118
(eval ())
(hpxmov a1 '3 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push (@ 119))
(mov '0 a4)
(jmp bitxmax)
119
(eval ())
(plus '1 a1)
(push a1)
(push '1)
(push (@ 120))
(mov '0 a4)
(jmp current-window)
120
(eval ())
(hpxmov a1 '18 a4)
(plus '1 a4)
(push a4)
(push (@ 121))
(mov '0 a4)
(jmp current-window)
121
(eval ())
(hpxmov a1 '19 a4)
(plus '1 a4)
(push a4)
(push '0)
(push '0)
(push (@ 122))
(mov '0 a4)
(jmp current-window)
122
(eval ())
(hpxmov a1 '2 a4)
(push a4)
(push '1)
(mov '12 a4)
(jmp bltscreen)
115
(eval ())
(bfnil (& 1) 123)
(push (@ 125))
(push 't)
(push '0)
(push '0)
(push '0)
(push '0)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
125
(eval ())
(adjstk '2)
(return)
123
(btnil (& 0) 126)
(jcall tyflush)
(push (cvalq #:bitmap:bandetty:main-tty))
(push (cvalq #:sys-package:tty))
(mov (& 1) (cvalq #:sys-package:tty))
(push '1)
(push '(#:sys-package:tty))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(push (@ 128))
(push dlink)
(push prot)
(stack dlink)
(push (@ 130))
(mov '0 a4)
(jmp current-window)
130
(eval ())
(hpxmov a1 '0 a1)
(push a1)
(push (@ 131))
(mov '0 a4)
(jmp current-window)
131
(eval ())
(hpxmov a1 '18 a4)
(pop a3)
(plus a4 a3)
(push a3)
(push (@ 132))
(mov '0 a4)
(jmp current-window)
132
(eval ())
(hpxmov a1 '1 a2)
(push a2)
(push (@ 133))
(mov '0 a4)
(jmp current-window)
133
(eval ())
(hpxmov a1 '19 a4)
(pop a3)
(plus a4 a3)
(mov a3 a2)
(pop a1)
(jcall tycursor)
(jcall tycleol)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 129) a3)
128
(push a3)
(push a2)
(jcall tyflush)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
129
(eval ())
(mov (& 1) dlink)
(mov (& 6) (cvalq #:sys-package:tty))
(adjstk '8)
(push (@ 134))
(push (cvalq #:bitmap:bandetty:screen))
(push (cvalq #:bitmap:bandetty:blankscreen))
(push (@ 135))
(mov '0 a4)
(jmp bitxmax)
135
(eval ())
(plus '1 a1)
(push a1)
(push (@ 136))
(mov '0 a4)
(jmp bitymax)
136
(eval ())
(plus '1 a1)
(push a1)
(mov '4 a4)
(jmp bltscreen)
134
(eval ())
(push (@ 137))
(mov '0 a4)
(jmp current-window)
137
(eval ())
(mov (cvalq #:window:all-windows) a2)
(jcall memq)
(push a1)
138
(bfcons (& 0) 139)
(mov (& 0) a1)
(mov (cdr a1) (& 0))
(mov (car a1) a1)
(jcall #:bitmap:bandetty:redisplay1)
(bra 138)
139
(adjstk '1)
(push (@ 140))
(push (cvalq #:bitmap:bandetty:oscreen))
(push (cvalq #:bitmap:bandetty:screen))
(push (@ 141))
(mov '0 a4)
(jmp bitxmax)
141
(eval ())
(plus '1 a1)
(push a1)
(push (@ 142))
(mov '0 a4)
(jmp bitymax)
142
(eval ())
(plus '1 a1)
(push a1)
(mov '4 a4)
(jmp bltscreen)
140
(eval ())
(adjstk '2)
(return)
126
(mov nil a1)
(adjstk '2)
(return)
))
(loader'((fentry #:tty:window:tynewline subr0)
(entry #:tty:window:tynewline subr0)
(btnil (cvalq #:tty:window:page-mode) 102)
(jcall tycleol)
102
(push (@ 103))
(mov '0 a4)
(jmp current-window)
103
(eval ())
(hpmovx '0 a1 '18)
(push (@ 104))
(mov '0 a4)
(jmp current-window)
104
(eval ())
(push a1)
(push (@ 105))
(mov '0 a4)
(jmp current-window)
105
(eval ())
(hpxmov a1 '19 a4)
(push a4)
(jcall height-space)
(pop a4)
(plus a1 a4)
(pop a3)
(hpmovx a4 a3 '19)
(push (@ 108))
(mov '0 a4)
(jmp current-window)
108
(eval ())
(hpxmov a1 '19 a4)
(push a4)
(jcall height-space)
(pop a4)
(plus a1 a4)
(push a4)
(jcall y-base-space)
(pop a4)
(diff a1 a4)
(push a4)
(push (@ 109))
(mov '0 a4)
(jmp current-window)
109
(eval ())
(hpxmov a1 '3 a3)
(pop a4)
(cnble a4 a3 106)
(btnil (cvalq #:tty:window:page-mode) 110)
(jmp tycls)
110
(push (@ 112))
(push (@ 113))
(mov '0 a4)
(jmp current-window)
113
(eval ())
(hpxmov a1 '8 a4)
(push a4)
(push (@ 114))
(mov '0 a4)
(jmp current-window)
114
(eval ())
(hpxmov a1 '8 a4)
(push a4)
(push (@ 115))
(mov '0 a4)
(jmp current-window)
115
(eval ())
(hpxmov a1 '2 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push (@ 116))
(mov '0 a4)
(jmp current-window)
116
(eval ())
(hpxmov a1 '3 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push (@ 117))
(mov '0 a4)
(jmp current-window)
117
(eval ())
(hpxmov a1 '2 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push (@ 118))
(mov '0 a4)
(jmp current-window)
118
(eval ())
(hpxmov a1 '3 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push '1)
(push '1)
(push '1)
(push '2)
(push (@ 119))
(mov '0 a4)
(jmp current-window)
119
(eval ())
(hpxmov a1 '2 a4)
(push a4)
(push (@ 120))
(mov '0 a4)
(jmp current-window)
120
(eval ())
(hpxmov a1 '3 a4)
(diff '1 a4)
(push a4)
(mov '12 a4)
(jmp bltscreen)
112
(eval ())
(push (@ 121))
(push (@ 122))
(mov '0 a4)
(jmp current-window)
122
(eval ())
(hpxmov a1 '8 a4)
(push a4)
(push (cvalq #:bitmap:bandetty:blankscreen))
(push (@ 123))
(mov '0 a4)
(jmp current-window)
123
(eval ())
(hpxmov a1 '2 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push (@ 124))
(mov '0 a4)
(jmp current-window)
124
(eval ())
(hpxmov a1 '3 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push (@ 125))
(mov '0 a4)
(jmp bitxmax)
125
(eval ())
(plus '1 a1)
(push a1)
(push '1)
(push '1)
(push (@ 126))
(mov '0 a4)
(jmp current-window)
126
(eval ())
(hpxmov a1 '3 a4)
(push a4)
(push '0)
(push '0)
(push (@ 127))
(mov '0 a4)
(jmp current-window)
127
(eval ())
(hpxmov a1 '2 a4)
(push a4)
(push '1)
(mov '12 a4)
(jmp bltscreen)
121
(eval ())
(push (@ 130))
(mov '0 a4)
(jmp current-window)
130
(eval ())
(push a1)
(mov (cvalq #:window:all-windows) a1)
(jcall last)
(pop a4)
(cabne a4 (car a1) 128)
(push (cvalq #:bitmap:bandetty:main-tty))
(push (cvalq #:sys-package:tty))
(mov (& 1) (cvalq #:sys-package:tty))
(push '1)
(push '(#:sys-package:tty))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(push (@ 131))
(mov '0 a4)
(jmp current-window)
131
(eval ())
(hpxmov a1 '1 a2)
(mov '0 a1)
(jcall tycursor)
(jcall tydelln)
(push (@ 132))
(mov '0 a4)
(jmp current-window)
132
(eval ())
(hpxmov a1 '1 a2)
(push a2)
(push (@ 133))
(mov '0 a4)
(jmp current-window)
133
(eval ())
(hpxmov a1 '3 a4)
(pop a3)
(plus a4 a3)
(diff '1 a3)
(mov a3 a2)
(mov '0 a1)
(jcall tycursor)
(jcall tyinsln)
(jcall tyflush)
(push (@ 134))
(push (cvalq #:bitmap:bandetty:screen))
(push (cvalq #:bitmap:bandetty:blankscreen))
(push (@ 135))
(mov '0 a4)
(jmp bitxmax)
135
(eval ())
(plus '1 a1)
(push a1)
(push (@ 136))
(mov '0 a4)
(jmp bitymax)
136
(eval ())
(plus '1 a1)
(push a1)
(mov '4 a4)
(jmp bltscreen)
134
(eval ())
(push (@ 137))
(mov '0 a4)
(jmp current-window)
137
(eval ())
(mov (cvalq #:window:all-windows) a2)
(jcall memq)
(push a1)
138
(bfcons (& 0) 139)
(mov (& 0) a1)
(mov (cdr a1) (& 0))
(mov (car a1) a1)
(jcall #:bitmap:bandetty:redisplay1)
(bra 138)
139
(adjstk '1)
(push (@ 140))
(push (cvalq #:bitmap:bandetty:oscreen))
(push (cvalq #:bitmap:bandetty:screen))
(push (@ 141))
(mov '0 a4)
(jmp bitxmax)
141
(eval ())
(plus '1 a1)
(push a1)
(push (@ 142))
(mov '0 a4)
(jmp bitymax)
142
(eval ())
(plus '1 a1)
(push a1)
(mov '4 a4)
(jmp bltscreen)
140
(eval ())
(mov (& 1) dlink)
(mov (& 6) (cvalq #:sys-package:tty))
(adjstk '8)
(bra 129)
128
(push (@ 143))
(push 't)
(push '0)
(push '0)
(push '0)
(push '0)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
143
(eval ())
129
(push (@ 144))
(mov '0 a4)
(jmp current-window)
144
(eval ())
(push a1)
(push (@ 145))
(mov '0 a4)
(jmp current-window)
145
(eval ())
(hpxmov a1 '19 a4)
(diff '1 a4)
(pop a3)
(hpmovx a4 a3 '19)
(mov a4 a1)
(return)
106
(mov nil a1)
(return)
))
(loader'((fentry #:tty:window:tybeep subr0)
(entry #:tty:window:tybeep subr0)
(jcall tyflush)
(push (cvalq #:bitmap:bandetty:main-tty))
(push (cvalq #:sys-package:tty))
(mov (& 1) (cvalq #:sys-package:tty))
(push '1)
(push '(#:sys-package:tty))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(push (@ 101))
(push dlink)
(push prot)
(stack dlink)
(jcall tybeep)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 102) a3)
101
(push a3)
(push a2)
(jcall tyflush)
(pop a2)
(pop a3)
(pop a1)
(bri a3)
102
(eval ())
(mov (& 1) dlink)
(mov (& 6) (cvalq #:sys-package:tty))
(adjstk '8)
(return)
))
(loader'((fentry #:bitmap:bandetty:create-bitmap subr1)
(entry #:bitmap:bandetty:create-bitmap subr1)
(return)
))
(loader'((fentry #:bitmap:bandetty:create-window-bitmap subr2)
(entry #:bitmap:bandetty:create-window-bitmap subr2)
(mov a2 a1)
(return)
))
(loader'((fentry #:bitmap:bandetty:get-bit-line subr3)
(entry #:bitmap:bandetty:get-bit-line subr3)
(mov nil a1)
(return)
))
(loader'((fentry #:bitmap:bandetty:set-bit-line subr3)
(entry #:bitmap:bandetty:set-bit-line subr3)
(mov nil a1)
(return)
))
(loader'((fentry #:bitmap:bandetty:kill-bitmap subr1)
(entry #:bitmap:bandetty:kill-bitmap subr1)
(mov nil a1)
(return)
))
(loader'((fentry #:bitmap:bandetty:bmset nsubr)
(entry #:bitmap:bandetty:bmset nsubr)
(cnbeq a4 '4 101)
(mov '#:bitmap:bandetty:bmset a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '4)
(return)
))
(loader'((fentry #:bitmap:bandetty:bmref subr3)
(entry #:bitmap:bandetty:bmref subr3)
(mov nil a1)
(return)
))
(loader'((fentry #:bitmap:bandetty:bitblit nsubr)
(entry #:bitmap:bandetty:bitblit nsubr)
(cnbeq a4 '8 101)
(mov '#:bitmap:bandetty:bitblit a1)
(mov '8 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '8)
(return)
))
(defvar #:sys-package:colon 'graph-env)
(loader'((fentry #:graph-env:clear-graph-env subr1)
(entry #:graph-env:clear-graph-env subr1)
(push (@ 101))
(hpxmov (cvalq #:window:current-window) '8 a4)
(push a4)
(push (cvalq #:bitmap:bandetty:blankscreen))
(hpxmov (cvalq #:window:current-window) '2 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(hpxmov (cvalq #:window:current-window) '3 a4)
(mov '2 a3)
(plus a4 a3)
(push a3)
(push (@ 102))
(mov '0 a4)
(jmp bitxmax)
102
(eval ())
(plus '1 a1)
(push a1)
(push (@ 103))
(mov '0 a4)
(jmp bitymax)
103
(eval ())
(plus '1 a1)
(push a1)
(push '1)
(push '1)
(push '0)
(push '0)
(hpxmov (cvalq #:window:current-window) '2 a4)
(push a4)
(hpxmov (cvalq #:window:current-window) '3 a4)
(push a4)
(mov '12 a4)
(jmp bltscreen)
101
(eval ())
(push (@ 104))
(push 't)
(push '0)
(push '0)
(push '0)
(push '0)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
104
(eval ())
(return)
))
(loader'((fentry #:graph-env:draw-cursor nsubr)
(entry #:graph-env:draw-cursor nsubr)
(cnbeq a4 '4 101)
(mov '#:graph-env:draw-cursor a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(btnil (cvalq #:bitmap:bandetty:flag) 102)
(hpxmov (cvalq #:window:current-window) '6 a4)
(cnbeq '0 a4 102)
(push (@ 104))
(mov '0 a4)
(jmp tyshowcursor)
104
(eval ())
(btnil a1 102)
(jcall tyflush)
(push (cvalq #:bitmap:bandetty:main-tty))
(push (cvalq #:sys-package:tty))
(mov (& 1) (cvalq #:sys-package:tty))
(push '1)
(push '(#:sys-package:tty))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(push (@ 105))
(push (& 9))
(mov '1 a4)
(jmp tyshowcursor)
105
(eval ())
(btnil (& 8) 107)
(push (@ 108))
(mov '0 a4)
(jmp current-window)
108
(eval ())
(hpxmov a1 '0 a4)
(mov (& 10) a3)
(plus a4 a3)
(push a3)
(push (@ 109))
(mov '0 a4)
(jmp current-window)
109
(eval ())
(hpxmov a1 '1 a4)
(mov (& 10) a3)
(plus a4 a3)
(mov a3 a2)
(pop a1)
(jcall tycursor)
107
(jcall tyflush)
(mov (& 1) dlink)
(mov (& 6) (cvalq #:sys-package:tty))
(adjstk '12)
(return)
102
(mov nil a1)
(adjstk '4)
(return)
))
(loader'((fentry #:graph-env:draw-substring nsubr)
(entry #:graph-env:draw-substring nsubr)
(cnbeq a4 '6 101)
(mov '#:graph-env:draw-substring a1)
(mov '6 a2)
(jmp #:llcp:errwna)
101
(btnil (cvalq #:window:current-window) 102)
(push (@ 104))
(push (& 5))
(push '0)
(mov '2 a4)
(jmp max)
104
(eval ())
(mov a1 (& 4))
(push (@ 105))
(push (& 4))
(push '0)
(mov '2 a4)
(jmp max)
105
(eval ())
(mov a1 (& 3))
(push (@ 106))
(push (@ 107))
(mov '0 a4)
(jmp current-window)
107
(eval ())
(hpxmov a1 '2 a4)
(diff (& 5) a4)
(push a4)
(push (& 2))
(mov '2 a4)
(jmp min)
106
(eval ())
(mov a1 (& 0))
(mov (& 4) a4)
(plus '1 a4)
(hpxmov (cvalq #:window:current-window) '2 a3)
(mov '2 a2)
(plus a3 a2)
(mov (& 3) a3)
(plus '1 a3)
(times a3 a2)
(plus a2 a4)
(push a4)
(push (@ 108))
(hpxmov (cvalq #:window:current-window) '8 a3)
(push a3)
(push a4)
(push (& 6))
(push (& 6))
(push a1)
(mov '5 a4)
(jmp bltstring)
108
(eval ())
(hpxmov (& 6) '0 a4)
(cabne a4 '1 110)
(hpxmov (cvalq #:window:current-window) '8 a4)
(mov a4 (& 3))
(push (@ 111))
(push (& 2))
(hgsize a4 a3)
(push a3)
(mov '2 a4)
(jmp min)
111
(eval ())
(mov (& 0) a4)
(plus a1 a4)
(diff '1 a4)
(push (& 0))
(push a4)
112
(push (@ 114))
(push (& 2))
(push (& 2))
(mov '2 a4)
(jmp <=)
114
(eval ())
(btnil a1 113)
(hbxmov (& 5) (& 1) a4)
(lor '128 a4)
(hbmovx a4 (& 5) (& 1))
(push (@ 115))
(push (& 2))
(push '1)
(mov '2 a4)
(jmp |+|)
115
(eval ())
(mov a1 (& 1))
(bra 112)
113
(adjstk '2)
110
(adjstk '1)
(push (@ 116))
(push (cvalq #:window:current-window))
(hpxmov (cvalq #:window:current-window) '0 a4)
(mov (& 6) a3)
(plus a4 a3)
(push a3)
(hpxmov (cvalq #:window:current-window) '1 a4)
(mov (& 6) a3)
(plus a4 a3)
(push a3)
(push (& 4))
(push '1)
(mov '5 a4)
(bra #:bitmap:bandetty:redisplay)
116
(eval ())
(adjstk '6)
(return)
102
(mov nil a1)
(adjstk '6)
(return)
))
(loader'((fentry #:graph-env:height-substring nsubr)
(entry #:graph-env:height-substring nsubr)
(cnbeq a4 '4 101)
(mov '#:graph-env:height-substring a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(mov '1 a1)
(adjstk '4)
(return)
))
(loader'((fentry #:graph-env:width-substring nsubr)
(entry #:graph-env:width-substring nsubr)
(cnbeq a4 '4 101)
(mov '#:graph-env:width-substring a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(push '0)
(push (@ 103))
(push (& 3))
(hgsize (& 6) a4)
(diff (& 5) a4)
(push a4)
(mov '2 a4)
(jmp min)
103
(eval ())
(push a1)
(mov '2 a4)
(jmp max)
102
(eval ())
(adjstk '4)
(return)
))
(loader'((fentry #:graph-env:x-base-substring nsubr)
(entry #:graph-env:x-base-substring nsubr)
(cnbeq a4 '4 101)
(mov '#:graph-env:x-base-substring a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(mov '0 a1)
(adjstk '4)
(return)
))
(loader'((fentry #:graph-env:y-base-substring nsubr)
(entry #:graph-env:y-base-substring nsubr)
(cnbeq a4 '4 101)
(mov '#:graph-env:y-base-substring a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(mov '0 a1)
(adjstk '4)
(return)
))
(loader'((fentry #:graph-env:x-inc-substring nsubr)
(entry #:graph-env:x-inc-substring nsubr)
(cnbeq a4 '4 101)
(mov '#:graph-env:x-inc-substring a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(push (& 4))
(push (& 4))
(push (& 4))
(push (& 4))
(mov '4 a4)
(jmp #:graph-env:width-substring)
102
(eval ())
(adjstk '4)
(return)
))
(loader'((fentry #:graph-env:y-inc-substring nsubr)
(entry #:graph-env:y-inc-substring nsubr)
(cnbeq a4 '4 101)
(mov '#:graph-env:y-inc-substring a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(mov '0 a1)
(adjstk '4)
(return)
))
(loader'((fentry #:graph-env:current-font subr2)
(entry #:graph-env:current-font subr2)
(mov nil a1)
(return)
))
(loader'((fentry #:graph-env:font-max subr1)
(entry #:graph-env:font-max subr1)
(mov '1 a1)
(return)
))
(loader'((fentry #:graph-env:load-font subr2)
(entry #:graph-env:load-font subr2)
(mov a2 a3)
(mov 'erroob a2)
(mov '#:graph-env:load-font a1)
(jmp error)
))
(loader'((fentry #:graph-env:current-clip nsubr)
(entry #:graph-env:current-clip nsubr)
(cnbeq a4 '5 101)
(mov '#:graph-env:current-clip a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(push (& 4))
(push (& 4))
(push (& 4))
(push (& 4))
(mov '4 a4)
(jmp list)
102
(eval ())
(mov a1 a3)
(mov 'errnotimplemented a2)
(mov '#:graph-env:current-clip a1)
(adjstk '5)
(jmp error)
))
(loader'((fentry #:graph-env:current-line-style subr2)
(entry #:graph-env:current-line-style subr2)
(mov nil a1)
(return)
))
(loader'((fentry #:graph-env:line-style-max subr1)
(entry #:graph-env:line-style-max subr1)
(mov '0 a1)
(return)
))
(loader'((fentry #:graph-env:current-pattern subr2)
(entry #:graph-env:current-pattern subr2)
(mov nil a1)
(return)
))
(loader'((fentry #:graph-env:pattern-max subr1)
(entry #:graph-env:pattern-max subr1)
(mov '0 a1)
(return)
))
(loader'((fentry #:graph-env:current-mode subr2)
(entry #:graph-env:current-mode subr2)
(mov nil a1)
(return)
))
(loader'((fentry #:graph-env:draw-polyline nsubr)
(entry #:graph-env:draw-polyline nsubr)
(cnbeq a4 '4 101)
(mov '#:graph-env:draw-polyline a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '4)
(return)
))
(loader'((fentry #:graph-env:draw-polymarker nsubr)
(entry #:graph-env:draw-polymarker nsubr)
(cnbeq a4 '4 101)
(mov '#:graph-env:draw-polymarker a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '4)
(return)
))
(loader'((fentry #:graph-env:fill-area nsubr)
(entry #:graph-env:fill-area nsubr)
(cnbeq a4 '4 101)
(mov '#:graph-env:fill-area a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '4)
(return)
))
(loader'((fentry #:graph-env:draw-ellipse nsubr)
(entry #:graph-env:draw-ellipse nsubr)
(cnbeq a4 '5 101)
(mov '#:graph-env:draw-ellipse a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '5)
(return)
))
(loader'((fentry #:graph-env:fill-ellipse nsubr)
(entry #:graph-env:fill-ellipse nsubr)
(cnbeq a4 '5 101)
(mov '#:graph-env:fill-ellipse a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '5)
(return)
))
(loader '((end)))
