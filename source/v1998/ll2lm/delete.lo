(loader '((title |delete.lo|)))
(setq #:sys-package:colon 'llmodule)
(loader'((fentry #:llmodule:delete-modules subr2)
(entry #:llmodule:delete-modules subr2)
(push a2)
(push a1)
(jcall probefile)
(btnil a1 101)
(push (@ 103))
(mov '0 a4)
(jmp standardmodulereferences)
103
(eval ())
(mov (& 0) a2)
(jcall #:llmodulereferences:read-from-file)
(mov a1 a4)
(bra 102)
101
(mov (& 0) a3)
(mov 'errfile a2)
(mov 'sh-analyze a1)
(jcall error)
(mov a1 a4)
102
(push nil)
(push a4)
(push (& 3))
104
(bfcons (& 0) 105)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(hpxmov (& 2) '1 a2)
(mov (& 0) a1)
(jcall assq)
(btnil a1 107)
(mov 't (& 3))
(hpxmov (& 2) '1 a2)
(jcall delete)
(hpmovx a1 (& 2) '1)
(hpxmov (& 2) '1 a4)
(push a4)
108
(bfcons (& 0) 109)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(mov (& 0) a2)
(mov (& 2) a1)
(jcall delete)
(adjstk '1)
(bra 108)
109
(adjstk '1)
107
(hpxmov (& 2) '2 a2)
(mov (& 0) a1)
(jcall assq)
(btnil a1 111)
(mov 't (& 3))
(hpxmov (& 2) '2 a2)
(jcall delete)
(hpmovx a1 (& 2) '2)
111
(hpxmov (& 2) '3 a2)
(mov (& 0) a1)
(jcall assq)
(btnil a1 113)
(mov 't (& 3))
(hpxmov (& 2) '3 a2)
(jcall delete)
(hpmovx a1 (& 2) '3)
113
(hpxmov (& 2) '4 a2)
(mov (& 0) a1)
(jcall assq)
(btnil a1 115)
(mov 't (& 3))
(hpxmov (& 2) '4 a2)
(jcall delete)
(hpmovx a1 (& 2) '4)
115
(adjstk '1)
(bra 104)
105
(adjstk '1)
(btnil (& 1) 116)
(mov (& 2) a2)
(mov (& 0) a1)
(adjstk '4)
(jmp #:llmodulereferences:write-to-file)
116
(cnblt (cvalq #:crunch:verbose) '1 118)
(push (@ 120))
(push (@ 121))
(push '".. ")
(push '"nothing to delete from")
(push '" : ")
(mov '3 a4)
(jmp catenate)
121
(eval ())
(push a1)
(push (& 4))
(mov '2 a4)
(jmp print)
120
(eval ())
(adjstk '4)
(return)
118
(mov nil a1)
(adjstk '4)
(return)
))
(loader '((end)))
