(loader '((title |winwindo.lo|)))
(defvar #:sys-package:colon '#:display:windows)
(loader'((fentry #:display:windows:kill-window subr2)
(entry #:display:windows:kill-window subr2)
(push a2)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(hpxmov a2 '15 a4)
(cabne a4 'transparent 101)
(mov '0 a2)
(bra 102)
101
(hpxmov a2 '8 a2)
(hpxmov a2 '1 a2)
102
(jcall windows_kill_window)
(hpxmov (& 0) '8 a4)
(hpmovx nil a4 '0)
(hpxmov (& 0) '8 a4)
(hpmovx nil a4 '1)
(mov nil a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:pop-window subr2)
(entry #:display:windows:pop-window subr2)
(push a2)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(jcall windows_pop_window)
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:move-behind-window subr3)
(entry #:display:windows:move-behind-window subr3)
(push a3)
(push a2)
(hpxmov a2 '9 a4)
(hpxmov a3 '9 a3)
(cabne a4 a3 102)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(hpxmov (& 1) '8 a2)
(hpxmov a2 '0 a2)
(jcall windows_move_behind_window)
102
(mov (& 0) a1)
(adjstk '2)
(return)
))
(loader'((fentry #:display:windows:current-keyboard-focus-window subr2)
(entry #:display:windows:current-keyboard-focus-window subr2)
(mov nil a1)
(return)
))
(loader'((fentry #:display:windows:uncurrent-keyboard-focus-window subr2)
(entry #:display:windows:uncurrent-keyboard-focus-window subr2)
(mov nil a1)
(return)
))
(loader'((fentry #:display:windows:find-window subr3)
(entry #:display:windows:find-window subr3)
(push a2)
(mov a3 a2)
(pop a1)
(jcall windows_find_window)
(jmp windowp)
))
(loader'((fentry #:display:windows:map-window nsubr)
(entry #:display:windows:map-window nsubr)
(cnbeq a4 '6 101)
(mov '#:display:windows:map-window a1)
(mov '6 a2)
(jmp #:llcp:errwna)
101
(hpxmov (& 5) '35 a4)
(push a4)
(push (@ 102))
(hpxmov (& 6) '8 a3)
(hpxmov a3 '0 a3)
(push a3)
(push (& 6))
(push (& 6))
(push a4)
(mov '4 a4)
(jmp windows_map_window)
102
(eval ())
(hpxmov (& 0) '0 a4)
(mov (& 2) a3)
(mov a4 (cval a3))
(hpxmov (& 0) '1 a4)
(mov (& 1) a2)
(mov a4 (cval a2))
(mov a4 a1)
(adjstk '7)
(return)
))
(loader'((fentry #:image:rectangle:window:set-window-hints subr1)
(entry #:image:rectangle:window:set-window-hints subr1)
(mov nil a1)
(return)
))
(loader'((fentry #:image:rectangle:window:modify-window-hints subr1)
(entry #:image:rectangle:window:modify-window-hints subr1)
(mov nil a1)
(return)
))
(loader'((fentry #:display:windows:make-top-extend subr2)
(entry #:display:windows:make-top-extend subr2)
(push a1)
(hpxmov a1 '8 a4)
(bfnil a4 101)
(jcall #:tclass:winwindow:opaque-window:top-window:make)
(mov a1 a4)
101
(hpmovx a4 (& 0) '8)
(mov a4 a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:make-opaque-extend subr2)
(entry #:display:windows:make-opaque-extend subr2)
(push a1)
(hpxmov a1 '8 a4)
(bfnil a4 101)
(jcall #:tclass:winwindow:opaque-window:make)
(mov a1 a4)
101
(hpmovx a4 (& 0) '8)
(mov a4 a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:create-window subr2)
(entry #:display:windows:create-window subr2)
(push a2)
(push a1)
(hpmovx 'opaque a2 '15)
(hpxmov a2 '7 a4)
(bfnil a4 102)
(push a2)
(jcall #:graph-env:make)
(pop a4)
(hpmovx a1 a4 '7)
102
(hpxmov (& 0) '35 a4)
(push a4)
(hpxmov (& 2) '6 a3)
(push a3)
(hpxmov (& 2) '31 a2)
(hpxmov (& 3) '11 a1)
(hpxmov a2 a1 a2)
(push a2)
(mov (& 3) a2)
(mov (& 4) a1)
(jcall #:display:windows:make-top-extend)
(hpxmov (& 4) '16 a4)
(push a4)
(push (@ 103))
(push (& 4))
(push '0)
(push '0)
(push '20)
(mov '4 a4)
(jmp fillvector)
103
(eval ())
(hpxmov (& 5) '0 a4)
(hpmovx a4 (& 3) '0)
(hpxmov (& 5) '1 a4)
(hpmovx a4 (& 3) '1)
(hpxmov (& 5) '2 a4)
(hpmovx a4 (& 3) '2)
(hpxmov (& 5) '3 a4)
(hpmovx a4 (& 3) '3)
(hpxmov (& 5) '5 a4)
(bfnil a4 104)
(hpxmov (& 4) '55 a4)
(hpmovx a4 (& 5) '5)
104
(hpmovx a4 (& 3) '4)
105
(btnil (& 0) 106)
(mov (& 0) a1)
(mov (cdr a1) (& 0))
(mov (car a1) a1)
(cabne a1 'save-under 108)
(hpmovx '1 (& 3) '5)
(bra 105)
108
(cabne a1 'override-redirect 109)
(hpmovx '1 (& 3) '6)
(bra 105)
109
(cabne a1 'transient 105)
(hpmovx '1 (& 3) '19)
(bra 105)
106
(hpxmov (& 5) '8 a4)
(push a4)
(push (@ 111))
(push (& 5))
(hpxmov (& 8) '4 a3)
(push a3)
(push (& 5))
(mov (& 7) a3)
(bfnil a3 112)
(mov '1 a3)
112
(push a3)
(push (& 11))
(mov '5 a4)
(jmp windows_create_window)
111
(eval ())
(pop a4)
(hpmovx a1 a4 '0)
(hpxmov (& 5) '8 a4)
(hpxmov a4 '0 a4)
(cabeq a4 '0 113)
(mov (& 5) a2)
(mov (& 4) a1)
(jcall #:display:windows:windows-create-graph-env)
(bra 114)
113
(mov (& 5) a3)
(mov '"Insufficient Memory" a2)
(mov '#:display:windows:create-window a1)
(jcall error)
114
(btnil (& 2) 115)
(hpmovx 'map (& 5) '17)
(bra 116)
115
(hpmovx 'unmap (& 5) '17)
116
(hpxmov (& 5) '14 a4)
(bfnil a4 118)
(hpxmov (& 4) '41 a4)
(hpmovx a4 (& 5) '14)
118
(mov (& 5) a1)
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:create-subwindow subr2)
(entry #:display:windows:create-subwindow subr2)
(push a2)
(push a1)
(hpxmov a2 '9 a4)
(btnil a4 102)
(hpxmov a2 '9 a4)
(hpxmov a4 '15 a4)
(cabne a4 'transparent 102)
(hpxmov a2 '15 a4)
(cabne a4 'opaque 106)
(mov a2 a3)
(mov '"Window must be transparent" a2)
(mov '#:display:windows:create-subwindow a1)
(jcall printerror)
106
(hpmovx 'transparent (& 1) '15)
102
(hpxmov (& 1) '15 a4)
(bfnil a4 107)
(hpxmov (& 0) '36 a4)
107
(cabne a4 'opaque 108)
(mov (& 1) a2)
(mov (& 0) a1)
(adjstk '2)
(jmp #:display:windows:windows-create-subwindow)
108
(mov (& 1) a2)
(mov (& 0) a1)
(adjstk '2)
(jmp #:display:windows:windows-create-transparent-window)
))
(loader'((fentry #:display:windows:windows-create-subwindow subr2)
(entry #:display:windows:windows-create-subwindow subr2)
(push a2)
(push a1)
(hpxmov a2 '7 a4)
(bfnil a4 102)
(push a2)
(jcall #:graph-env:make)
(pop a4)
(hpmovx a1 a4 '7)
102
(hpmovx 'opaque (& 1) '15)
(hpxmov (& 0) '35 a4)
(push a4)
(hpxmov (& 2) '6 a3)
(push a3)
(hpxmov (& 2) '31 a2)
(hpxmov (& 3) '11 a1)
(bfnil a1 103)
(hpxmov (& 3) '9 a1)
(hpxmov a1 '11 a1)
(hpmovx a1 (& 3) '11)
103
(hpxmov a2 a1 a2)
(push a2)
(mov (& 3) a2)
(mov (& 4) a1)
(jcall #:display:windows:make-top-extend)
(hpxmov (& 4) '16 a4)
(push (@ 104))
(push (& 3))
(push '0)
(push '0)
(push '19)
(mov '4 a4)
(jmp fillvector)
104
(eval ())
(hpxmov (& 4) '0 a4)
(hpmovx a4 (& 2) '0)
(hpxmov (& 4) '1 a4)
(hpmovx a4 (& 2) '1)
(hpxmov (& 4) '2 a4)
(hpmovx a4 (& 2) '2)
(hpxmov (& 4) '3 a4)
(hpmovx a4 (& 2) '3)
(hpxmov (& 4) '8 a4)
(push a4)
(push (@ 105))
(push (& 4))
(hpxmov (& 7) '4 a3)
(push a3)
(push (& 4))
(mov (& 6) a3)
(bfnil a3 106)
(mov '1 a3)
106
(push a3)
(hpxmov (& 10) '9 a3)
(hpxmov a3 '8 a3)
(hpxmov a3 '0 a3)
(push a3)
(push (& 11))
(mov '6 a4)
(jmp windows_create_subwindow)
105
(eval ())
(pop a4)
(hpmovx a1 a4 '0)
(hpxmov (& 4) '8 a4)
(hpxmov a4 '0 a4)
(cabeq a4 '0 107)
(mov (& 4) a2)
(mov (& 3) a1)
(jcall #:display:windows:windows-create-graph-env)
(bra 108)
107
(mov (& 4) a3)
(mov '"Insufficient Memory" a2)
(mov '#:display:windows:create-subwindow a1)
(jcall error)
108
(hpxmov (& 4) '14 a4)
(bfnil a4 110)
(hpxmov (& 3) '42 a4)
(hpmovx a4 (& 4) '14)
110
(mov (& 4) a1)
(adjstk '5)
(return)
))
(loader'((fentry #:display:windows:make-transparent-extend subr2)
(entry #:display:windows:make-transparent-extend subr2)
(push a1)
(hpxmov a1 '8 a4)
(bfnil a4 101)
(jcall #:tclass:winwindow:transparent-window:make)
(mov a1 a4)
101
(hpmovx '0 a4 '4)
(hpmovx '0 a4 '5)
(hpmovx a4 (& 0) '8)
(mov a4 a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:windows-create-transparent-window subr2)
(entry #:display:windows:windows-create-transparent-window subr2)
(push a2)
(push a1)
(hpxmov a2 '7 a4)
(bfnil a4 102)
(push a2)
(jcall #:graph-env:make)
(pop a4)
(hpmovx a1 a4 '7)
102
(hpmovx 'transparent (& 1) '15)
(hpxmov (& 0) '31 a4)
(hpxmov (& 1) '11 a3)
(bfnil a3 103)
(hpxmov (& 1) '9 a3)
(hpxmov a3 '11 a3)
(hpmovx a3 (& 1) '11)
103
(hpxmov a4 a3 a4)
(push a4)
(hpxmov (& 2) '8 a3)
(bfnil a3 104)
(mov (& 1) a2)
(mov (& 2) a1)
(jcall #:display:windows:make-transparent-extend)
(mov a1 a3)
104
(hpxmov (& 2) '0 a4)
(push a4)
(hpxmov (& 3) '1 a2)
(push a2)
(hpxmov (& 4) '2 a1)
(push a1)
(hpxmov (& 5) '3 a4)
(push a4)
(hpxmov (& 6) '6 a4)
(push a4)
(hpxmov (& 7) '9 a4)
(push a4)
(push a3)
(mov (& 9) a1)
(jcall #:display:windows:calculate-top-opaque-father)
(pop a4)
(hpmovx a1 a4 '6)
(hpxmov (& 8) '8 a4)
(push a4)
(push (@ 105))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 12))
(push (& 8))
(hpxmov (& 8) '8 a3)
(hpxmov a3 '0 a3)
(push a3)
(push (& 17))
(mov '8 a4)
(jmp windows_create_transwindow)
105
(eval ())
(pop a4)
(hpmovx a1 a4 '0)
(hpxmov (& 8) '8 a4)
(hpxmov a4 '0 a4)
(cabeq a4 '0 106)
(mov (& 8) a2)
(mov (& 7) a1)
(jcall #:display:windows:windows-create-graph-env-for-transparent)
(bra 107)
106
(mov (& 8) a3)
(mov '"Insufficient Memory" a2)
(mov '#:display:windows:create-transparent-window a1)
(jcall error)
107
(hpxmov (& 8) '14 a4)
(bfnil a4 109)
(hpxmov (& 7) '43 a4)
(hpmovx a4 (& 8) '14)
109
(mov (& 8) a1)
(adjstk '9)
(return)
))
(loader'((fentry #:display:windows:calculate-top-opaque-father subr1)
(entry #:display:windows:calculate-top-opaque-father subr1)
(push a1)
101
(btnil (& 0) 102)
(hpxmov (& 0) '15 a4)
(cabne a4 'transparent 102)
(hpxmov (& 0) '9 a4)
(mov a4 (& 0))
(bra 101)
102
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:current-window subr2)
(entry #:display:windows:current-window subr2)
(push a2)
(push a1)
(btnil a2 101)
(push a1)
(push (@ 103))
(push 'is-visible)
(hpxmov a2 '8 a4)
(push a4)
(push a2)
(mov '3 a4)
(jmp send)
103
(eval ())
(pop a4)
(hpmovx a1 a4 '27)
(hpxmov (& 1) '7 a4)
(push a4)
(hpxmov (& 2) '8 a3)
(hpxmov a3 '1 a3)
(push a3)
(hpxmov (& 2) '35 a2)
(push a2)
(push nil)
(hpxmov a4 '16 a1)
(push nil)
(hpxmov (& 5) '29 a4)
(hpxmov (& 4) '1 a3)
(hpxmov a4 a3 a4)
(push a4)
(hpxmov (& 6) '33 a3)
(hpxmov (& 5) '3 a4)
(hpxmov a3 a4 a3)
(hpmovx a3 a2 '0)
(hpxmov (& 5) '4 a4)
(hpxmov a4 '6 a4)
(hpmovx a4 a2 '1)
(hpxmov (& 5) '5 a4)
(hpxmov a4 '6 a4)
(hpmovx a4 a2 '2)
(hpxmov (& 6) '32 a4)
(hpxmov (& 5) '0 a3)
(hpxmov a4 a3 a4)
(hpmovx a4 a2 '3)
(hpxmov (& 0) '0 a4)
(hpmovx a4 a2 '4)
(hpxmov (& 0) '1 a4)
(hpmovx a4 a2 '5)
(cabne a1 'foreground 105)
(mov '0 (& 1))
(mov '0 (& 2))
(bra 104)
105
(cabne a1 'pattern 106)
(mov '1 (& 1))
(hpxmov (& 6) '30 a4)
(hpxmov (& 5) '2 a3)
(hpxmov a4 a3 a4)
(hpxmov a4 '2 a4)
(hpxmov a4 '1 a4)
(mov a4 (& 2))
(bra 104)
106
(cabeq a1 'transparentstipple 108)
(cabne a1 'opaquestipple 104)
108
(mov '2 (& 1))
(hpxmov (& 5) '15 a4)
(hpxmov a4 '2 a4)
(hpxmov a4 '1 a4)
(mov a4 (& 2))
104
(hpmovx (& 2) a2 '6)
(hpxmov (& 5) '2 a4)
(hpmovx a4 a2 '11)
(hpmovx (& 1) a2 '12)
(hpxmov (& 7) '15 a4)
(cabne a4 'opaque 109)
(hpxmov (& 5) '6 a4)
(hpmovx a4 a2 '7)
(hpxmov (& 5) '7 a4)
(hpmovx a4 a2 '8)
(hpxmov (& 5) '8 a4)
(hpmovx a4 a2 '9)
(hpxmov (& 5) '9 a4)
(hpmovx a4 a2 '10)
(hpxmov (& 7) '8 a2)
(hpxmov a2 '0 a2)
(mov (& 3) a3)
(mov (& 4) a1)
(adjstk '8)
(jmp windows_current_window)
109
(hpxmov (& 5) '12 a4)
(hpxmov a4 '3 a4)
(push a4)
(hpxmov a4 '0 a3)
(hpxmov (& 8) '8 a4)
(hpxmov a4 '4 a4)
(plus a4 a3)
(hpmovx a3 a2 '7)
(hpxmov (& 0) '1 a4)
(hpxmov (& 8) '8 a3)
(hpxmov a3 '5 a3)
(plus a3 a4)
(hpmovx a4 a2 '8)
(hpxmov (& 0) '2 a4)
(hpmovx a4 a2 '9)
(hpxmov (& 0) '3 a4)
(hpmovx a4 a2 '10)
(hpxmov (& 8) '8 a2)
(hpxmov a2 '6 a2)
(hpxmov a2 '8 a2)
(hpxmov a2 '0 a2)
(mov (& 4) a3)
(mov (& 5) a1)
(adjstk '9)
(jmp windows_current_window)
101
(mov nil a1)
(adjstk '2)
(return)
))
(loader'((fentry #:tclass:winwindow:transparent-window:is-visible subr2)
(entry #:tclass:winwindow:transparent-window:is-visible subr2)
(hpxmov a2 '8 a1)
(hpxmov a1 '2 a1)
(return)
))
(loader'((fentry #:tclass:winwindow:is-visible subr2)
(entry #:tclass:winwindow:is-visible subr2)
(hpxmov a2 '6 a4)
(cabne '1 a4 101)
(mov 't a1)
(return)
101
(mov nil a1)
(return)
))
(loader'((fentry #:display:windows:uncurrent-window subr2)
(entry #:display:windows:uncurrent-window subr2)
(hpmovx nil a1 '27)
(mov nil a1)
(return)
))
(loader'((fentry #:display:windows:windows-create-graph-env subr2)
(entry #:display:windows:windows-create-graph-env subr2)
(push a2)
(push a1)
(hpxmov a2 '7 a4)
(bfnil a4 101)
(jcall #:graph-env:make)
(mov a1 a4)
101
(push a4)
(hpmovx a4 (& 2) '7)
(hpmovx '1 a4 '2)
(hpmovx '0 a4 '6)
(hpmovx '0 a4 '7)
(hpxmov (& 2) '2 a3)
(hpmovx a3 a4 '8)
(hpxmov (& 2) '3 a3)
(hpmovx a3 a4 '9)
(hpxmov a4 '4 a3)
(bfnil a3 103)
(hpxmov (& 1) '11 a3)
(btnil a3 105)
(hpxmov (& 1) '11 a3)
(hpxmov a3 '4 a3)
(bra 106)
105
(mov nil a3)
106
(bfnil a3 104)
(hpxmov (& 1) '13 a3)
104
(hpmovx a3 a4 '4)
103
(hpxmov a4 '5 a3)
(bfnil a3 108)
(hpxmov a4 '5 a3)
(bfnil a3 109)
(hpxmov (& 1) '11 a3)
(btnil a3 110)
(hpxmov (& 1) '11 a3)
(hpxmov a3 '5 a3)
(bra 111)
110
(mov nil a3)
111
(bfnil a3 109)
(hpxmov (& 1) '12 a3)
109
(hpmovx a3 a4 '5)
108
(hpmovx (& 1) a4 '11)
(hpxmov (& 2) '8 a3)
(hpmovx a3 a4 '12)
(hpxmov (& 1) '32 a3)
(hpxmov a4 '0 a2)
(hpxmov a3 a2 a3)
(push a3)
(hpxmov (& 2) '29 a2)
(hpxmov a4 '1 a1)
(hpxmov a2 a1 a2)
(hpxmov (& 2) '30 a1)
(hpxmov a4 '2 a4)
(hpxmov a1 a4 a1)
(hpxmov (& 1) '16 a4)
(push a4)
(hpxmov (& 3) '33 a4)
(hpxmov (& 2) '3 a3)
(hpxmov a4 a3 a4)
(push nil)
(push nil)
(push a4)
(push a2)
(mov (& 4) a1)
(cabne a1 'foreground 113)
(mov '0 (& 3))
(mov '0 (& 2))
(bra 112)
113
(cabne a1 'pattern 114)
(mov '1 (& 3))
(hpxmov (& 7) '30 a3)
(hpxmov (& 6) '2 a4)
(hpxmov a3 a4 a3)
(hpxmov a3 '2 a3)
(hpxmov a3 '1 a3)
(mov a3 (& 2))
(bra 112)
114
(cabeq a1 'transparentstipple 116)
(cabne a1 'opaquestipple 115)
116
(mov '2 (& 3))
(hpxmov (& 6) '15 a3)
(hpxmov a3 '2 a3)
(hpxmov a3 '1 a3)
(mov a3 (& 2))
(bra 112)
115
(mov a1 a3)
(mov '"invalid mode" a2)
(mov '#:display:windows:current-fill-mode a1)
(jcall error)
112
(hpxmov (& 8) '8 a4)
(push a4)
(push (@ 118))
(hpxmov (& 10) '8 a3)
(hpxmov a3 '0 a3)
(push a3)
(push (& 8))
(hpxmov (& 4) '0 a3)
(push a3)
(hpxmov (& 5) '1 a3)
(push a3)
(push (& 8))
(hpxmov (& 13) '2 a3)
(push a3)
(push (& 11))
(push (& 10))
(hpxmov (& 16) '4 a3)
(hpxmov a3 '6 a3)
(push a3)
(hpxmov (& 17) '5 a3)
(hpxmov a3 '6 a3)
(push a3)
(mov '10 a4)
(jmp windows_new_create_graph_env)
118
(eval ())
(pop a4)
(hpmovx a1 a4 '1)
(hpxmov (& 8) '8 a4)
(hpxmov a4 '1 a4)
(cabne a4 '0 120)
(hpxmov (& 7) '10 a4)
(cabeq a4 (& 8) 120)
(mov (& 8) a3)
(mov '"Insufficient Memory" a2)
(mov '#:display:windows:create-graph-env a1)
(jcall error)
120
(mov (& 5) a1)
(jcall windows_font_ascent)
(hpmovx a1 (& 6) '13)
(mov (& 5) a1)
(jcall windows_font_height)
(hpmovx a1 (& 6) '14)
(push (@ 123))
(hpxmov (& 9) '8 a4)
(hpxmov a4 '1 a4)
(push a4)
(push '0)
(push '0)
(hpxmov (& 12) '2 a4)
(push a4)
(hpxmov (& 13) '3 a4)
(push a4)
(mov '5 a4)
(jmp windows_set_clip)
123
(eval ())
(adjstk '9)
(return)
))
(loader'((fentry #:display:windows:windows-create-graph-env-for-transparent subr2)
(entry #:display:windows:windows-create-graph-env-for-transparent subr2)
(push a2)
(push a1)
(hpxmov a2 '7 a4)
(bfnil a4 101)
(jcall #:graph-env:make)
(mov a1 a4)
101
(push a4)
(hpmovx a4 (& 2) '7)
(hpmovx '1 a4 '2)
(hpmovx '0 a4 '6)
(hpmovx '0 a4 '7)
(hpxmov (& 2) '2 a3)
(hpmovx a3 a4 '8)
(hpxmov (& 2) '3 a3)
(hpmovx a3 a4 '9)
(hpxmov a4 '4 a3)
(bfnil a3 103)
(hpxmov (& 1) '11 a3)
(btnil a3 105)
(hpxmov (& 1) '11 a3)
(hpxmov a3 '4 a3)
(bra 106)
105
(mov nil a3)
106
(bfnil a3 104)
(hpxmov (& 1) '13 a3)
104
(hpmovx a3 a4 '4)
103
(hpxmov a4 '5 a3)
(bfnil a3 108)
(hpxmov a4 '5 a3)
(bfnil a3 109)
(hpxmov (& 1) '11 a3)
(btnil a3 110)
(hpxmov (& 1) '11 a3)
(hpxmov a3 '5 a3)
(bra 111)
110
(mov nil a3)
111
(bfnil a3 109)
(hpxmov (& 1) '12 a3)
109
(hpmovx a3 a4 '5)
108
(hpmovx (& 1) a4 '11)
(hpxmov (& 2) '8 a3)
(hpmovx a3 a4 '12)
(hpxmov (& 1) '32 a3)
(hpxmov a4 '0 a2)
(hpxmov a3 a2 a3)
(push a3)
(hpxmov (& 2) '29 a2)
(hpxmov a4 '1 a1)
(hpxmov a2 a1 a2)
(hpxmov (& 2) '30 a1)
(hpxmov a4 '2 a4)
(hpxmov a1 a4 a1)
(hpxmov (& 2) '33 a4)
(hpxmov (& 1) '3 a3)
(hpxmov a4 a3 a4)
(hpxmov (& 3) '8 a3)
(hpxmov (& 3) '8 a4)
(hpxmov a4 '6 a4)
(hpxmov a4 '8 a4)
(hpxmov a4 '1 a4)
(hpmovx a4 a3 '1)
(mov (& 0) a1)
(jcall windows_font_ascent)
(hpmovx a1 (& 1) '13)
(mov (& 0) a1)
(jcall windows_font_height)
(hpmovx a1 (& 1) '14)
(hpxmov (& 1) '12 a4)
(push a4)
(jcall #:image:rectangle:make)
(pop a4)
(hpmovx a1 a4 '3)
(mov (& 3) a2)
(mov (& 2) a1)
(jcall #:display:windows:transparent-set-clip-for-window)
(mov (& 1) a1)
(adjstk '4)
(return)
))
(loader'((fentry #:image:rectangle:window:woffset-x subr1)
(entry #:image:rectangle:window:woffset-x subr1)
(push (@ 101))
(push 'woffset-x)
(hpxmov a1 '8 a4)
(push a4)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:woffset-y subr1)
(entry #:image:rectangle:window:woffset-y subr1)
(push (@ 101))
(push 'woffset-y)
(hpxmov a1 '8 a4)
(push a4)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:tclass:winwindow:woffset-x subr2)
(entry #:tclass:winwindow:woffset-x subr2)
(mov '0 a1)
(return)
))
(loader'((fentry #:tclass:winwindow:woffset-y subr2)
(entry #:tclass:winwindow:woffset-y subr2)
(mov '0 a1)
(return)
))
(loader'((fentry #:tclass:winwindow:transparent-window:woffset-x subr2)
(entry #:tclass:winwindow:transparent-window:woffset-x subr2)
(hpxmov a2 '8 a1)
(hpxmov a1 '4 a1)
(return)
))
(loader'((fentry #:tclass:winwindow:transparent-window:woffset-y subr2)
(entry #:tclass:winwindow:transparent-window:woffset-y subr2)
(hpxmov a2 '8 a1)
(hpxmov a1 '5 a1)
(return)
))
(loader'((fentry #:display:windows:transparent-set-clip-for-window subr2)
(entry #:display:windows:transparent-set-clip-for-window subr2)
(push a2)
(hpxmov a2 '9 a4)
(push a4)
(hpxmov a2 '7 a3)
(push a3)
(hpxmov a3 '12 a4)
(hpxmov a4 '3 a4)
(push a4)
(hpxmov a2 '8 a4)
(push a4)
(hpxmov a2 '0 a3)
(push a3)
(push (@ 101))
(push 'woffset-x)
(push (& 6))
(mov '2 a4)
(jmp send)
101
(eval ())
(pop a4)
(plus a1 a4)
(pop a3)
(hpmovx a4 a3 '4)
(hpxmov (& 3) '8 a4)
(push a4)
(hpxmov (& 4) '1 a3)
(push a3)
(push (@ 102))
(push 'woffset-y)
(push (& 6))
(mov '2 a4)
(jmp send)
102
(eval ())
(pop a4)
(plus a1 a4)
(pop a3)
(hpmovx a4 a3 '5)
(hpmovx '0 (& 0) '0)
(hpmovx '0 (& 0) '1)
(hpxmov (& 3) '2 a4)
(hpmovx a4 (& 0) '2)
(hpxmov (& 3) '3 a4)
(hpmovx a4 (& 0) '3)
(hpxmov (& 1) '12 a4)
(push a4)
(push (@ 103))
(push (& 2))
(hpxmov (& 4) '6 a3)
(push a3)
(hpxmov (& 5) '7 a3)
(push a3)
(hpxmov (& 6) '8 a3)
(push a3)
(hpxmov (& 7) '9 a3)
(push a3)
(mov '5 a4)
(jmp #:display:windows:intersect)
103
(eval ())
(pop a4)
(hpmovx a1 a4 '3)
(btnil (& 2) 105)
(hpxmov (& 2) '15 a4)
(cabne a4 'transparent 106)
(hpxmov (& 2) '7 a4)
(hpxmov a4 '12 a4)
(hpxmov a4 '3 a4)
(hpxmov (& 1) '12 a3)
(push a3)
(push (@ 108))
(push (& 2))
(hpxmov a4 '0 a2)
(hpxmov (& 6) '0 a1)
(diff a1 a2)
(push a2)
(hpxmov a4 '1 a2)
(hpxmov (& 7) '1 a1)
(diff a1 a2)
(push a2)
(hpxmov a4 '2 a2)
(push a2)
(hpxmov a4 '3 a2)
(push a2)
(mov '5 a4)
(jmp #:display:windows:intersect)
108
(eval ())
(pop a4)
(hpmovx a1 a4 '3)
(bra 105)
106
(hpxmov (& 2) '7 a4)
(hpxmov (& 1) '12 a3)
(push a3)
(push (@ 109))
(push (& 2))
(hpxmov a4 '6 a2)
(hpxmov (& 6) '0 a1)
(diff a1 a2)
(push a2)
(hpxmov a4 '7 a2)
(hpxmov (& 7) '1 a1)
(diff a1 a2)
(push a2)
(hpxmov a4 '8 a2)
(push a2)
(hpxmov a4 '9 a2)
(push a2)
(mov '5 a4)
(jmp #:display:windows:intersect)
109
(eval ())
(pop a4)
(hpmovx a1 a4 '3)
105
(hpxmov (& 3) '8 a4)
(push a4)
(hpxmov (& 4) '6 a2)
(mov '1 a1)
(jcall eq)
(mov a1 a3)
(btnil a3 110)
(btnil (& 3) 112)
(mov nil a3)
(bra 113)
112
(mov 't a3)
113
(bfnil a3 110)
(hpxmov (& 3) '15 a1)
(mov 'opaque a2)
(jcall eq)
(mov a1 a3)
(bfnil a3 115)
(hpxmov (& 3) '8 a3)
(hpxmov a3 '2 a3)
115
(btnil a3 110)
(hpxmov (& 1) '2 a1)
(mov '0 a2)
(jcall gt)
(mov a1 a3)
(btnil a3 110)
(hpxmov (& 1) '3 a1)
(mov '0 a2)
(jcall gt)
(mov a1 a3)
110
(pop a4)
(hpmovx a3 a4 '2)
(mov a3 a1)
(adjstk '4)
(return)
))
(loader'((fentry #:display:windows:clear-graph-env subr2)
(entry #:display:windows:clear-graph-env subr2)
(hpxmov a1 '8 a4)
(push a4)
(hpxmov a4 '15 a3)
(cabne a3 'opaque 101)
(mov a2 a3)
(mov a1 a2)
(mov a4 a1)
(jcall #:display:windows:opaque-clear-graph-env)
(bra 102)
101
(mov a2 a3)
(mov a1 a2)
(mov a4 a1)
(jcall #:display:windows:transparent-clear-graph-env)
102
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:transparent-clear-graph-env subr3)
(entry #:display:windows:transparent-clear-graph-env subr3)
(hpxmov a2 '27 a4)
(btnil a4 101)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(hpxmov a3 '12 a4)
(hpxmov a4 '3 a4)
(mov a4 (& 0))
(push (@ 103))
(hpxmov a1 '8 a4)
(hpxmov a4 '6 a4)
(hpxmov a4 '8 a4)
(hpxmov a4 '0 a4)
(push a4)
(hpxmov a1 '8 a4)
(hpxmov a4 '6 a4)
(hpxmov a4 '8 a4)
(hpxmov a4 '1 a4)
(push a4)
(hpxmov a1 '8 a4)
(hpxmov a4 '4 a4)
(hpxmov (& 3) '0 a3)
(plus a3 a4)
(push a4)
(hpxmov a1 '8 a4)
(hpxmov a4 '5 a4)
(hpxmov (& 4) '1 a3)
(plus a3 a4)
(push a4)
(hpxmov (& 5) '2 a4)
(push a4)
(hpxmov (& 6) '3 a4)
(push a4)
(mov '6 a4)
(jmp windows_clear_window)
103
(eval ())
(adjstk '5)
(return)
101
(mov nil a1)
(return)
))
(loader'((fentry #:display:windows:opaque-clear-graph-env subr3)
(entry #:display:windows:opaque-clear-graph-env subr3)
(push (@ 101))
(hpxmov a1 '8 a4)
(hpxmov a4 '0 a4)
(push a4)
(hpxmov a1 '8 a4)
(hpxmov a4 '1 a4)
(push a4)
(hpxmov a3 '6 a4)
(push a4)
(hpxmov a3 '7 a4)
(push a4)
(hpxmov a3 '8 a4)
(push a4)
(hpxmov a3 '9 a4)
(push a4)
(mov '6 a4)
(jmp windows_clear_window)
101
(eval ())
(return)
))
(loader'((fentry #:display:windows:transparent-set-clip-for-subwindows subr2)
(entry #:display:windows:transparent-set-clip-for-subwindows subr2)
(push a2)
(push a1)
(push a2)
(mov a1 a2)
(pop a1)
(jcall #:display:windows:transparent-set-clip-for-window)
(hpxmov (& 0) '13 a4)
(push a4)
101
(bfcons (& 0) 102)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(mov (& 3) a2)
(mov (& 0) a1)
(jcall #:display:windows:transparent-set-clip-for-subwindows)
(adjstk '1)
(bra 101)
102
(mov nil a1)
(adjstk '3)
(return)
))
(loader'((entry #:display:windows:transparent-set-current-clip subr2)
(hpxmov a2 '7 a4)
(push nil)
(hpxmov a4 '12 a3)
(hpxmov a3 '3 a3)
(mov a3 (& 0))
(push (@ 101))
(hpxmov a4 '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(hpxmov a3 '0 a4)
(hpxmov a2 '8 a3)
(hpxmov a3 '4 a3)
(plus a3 a4)
(push a4)
(hpxmov (& 3) '1 a4)
(hpxmov a2 '8 a3)
(hpxmov a3 '5 a3)
(plus a3 a4)
(push a4)
(hpxmov (& 4) '2 a1)
(mov '0 a2)
(jcall gt)
(mov a1 a4)
(bfnil a4 102)
(mov '0 a4)
102
(push a4)
(hpxmov (& 5) '3 a1)
(mov '0 a2)
(jcall gt)
(mov a1 a4)
(bfnil a4 103)
(mov '0 a4)
103
(push a4)
(mov '5 a4)
(jmp windows_set_clip)
101
(eval ())
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:opaque-set-clip-for-subwindows nsubr)
(entry #:display:windows:opaque-set-clip-for-subwindows nsubr)
(cnbeq a4 '7 101)
(mov '#:display:windows:opaque-set-clip-for-subwindows a1)
(mov '7 a2)
(jmp #:llcp:errwna)
101
(hpxmov (& 6) '13 a4)
(push a4)
102
(bfcons (& 0) 103)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(push (@ 104))
(push (& 1))
(push (& 9))
(hpxmov (& 3) '7 a4)
(push a4)
(push nil)
(push nil)
(push nil)
(push nil)
(mov '7 a4)
(jmp #:display:windows:set-clip-for-subwindows)
104
(eval ())
(adjstk '1)
(bra 102)
103
(adjstk '1)
(push (@ 105))
(hpxmov (& 5) '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(mov (& 5) a4)
(bfnil a4 106)
(mov '0 a4)
106
(push a4)
(mov (& 5) a4)
(bfnil a4 107)
(mov '0 a4)
107
(push a4)
(mov (& 5) a4)
(bfnil a4 108)
(hpxmov (& 10) '2 a4)
108
(push a4)
(mov (& 5) a4)
(bfnil a4 109)
(hpxmov (& 11) '3 a4)
109
(push a4)
(mov '5 a4)
(jmp windows_set_clip)
105
(eval ())
(adjstk '7)
(return)
))
(loader'((fentry #:display:windows:current-clip nsubr)
(entry #:display:windows:current-clip nsubr)
(cnbeq a4 '6 101)
(mov '#:display:windows:current-clip a1)
(mov '6 a2)
(jmp #:llcp:errwna)
101
(hpxmov (& 5) '8 a4)
(push a4)
(btnil a4 102)
(push (@ 104))
(push a4)
(push (& 8))
(push (& 8))
(push (& 8))
(push (& 8))
(push (& 8))
(push (& 8))
(mov '7 a4)
(jmp #:display:windows:set-clip-for-subwindows)
104
(eval ())
(hpxmov (& 0) '15 a4)
(cabne a4 'transparent 106)
(mov (& 0) a2)
(mov (& 6) a1)
(call #:display:windows:transparent-set-current-clip)
106
(mov (& 0) a1)
(adjstk '7)
(return)
102
(mov nil a1)
(adjstk '7)
(return)
))
(loader'((fentry #:display:windows:set-clip-for-subwindows nsubr)
(entry #:display:windows:set-clip-for-subwindows nsubr)
(cnbeq a4 '7 101)
(mov '#:display:windows:set-clip-for-subwindows a1)
(mov '7 a2)
(jmp #:llcp:errwna)
101
(hpxmov (& 6) '15 a4)
(cabne a4 'opaque 102)
(push (@ 104))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(mov '7 a4)
(jmp #:display:windows:opaque-set-clip-for-subwindows)
104
(eval ())
(adjstk '7)
(return)
102
(mov (& 5) a2)
(mov (& 6) a1)
(adjstk '7)
(jmp #:display:windows:transparent-set-clip-for-subwindows)
))
(loader'((fentry #:display:windows:intersect nsubr)
(entry #:display:windows:intersect nsubr)
(cnbeq a4 '5 101)
(mov '#:display:windows:intersect a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(hpxmov (& 4) '0 a4)
(push a4)
(hpxmov (& 5) '1 a3)
(hpxmov (& 5) '2 a2)
(hpxmov (& 5) '3 a1)
(mov (& 4) a4)
(plus (& 2) a4)
(push a4)
(mov (& 4) a4)
(plus (& 2) a4)
(push a4)
(push a1)
(push a2)
(push a3)
(mov (& 9) a2)
(mov (& 5) a1)
(jcall gt)
(mov a1 a4)
(bfnil a4 102)
(mov (& 9) a4)
102
(hpmovx a4 (& 10) '0)
(mov (& 8) a2)
(mov (& 0) a1)
(jcall gt)
(mov a1 a4)
(bfnil a4 103)
(mov (& 8) a4)
103
(hpmovx a4 (& 10) '1)
(mov (& 5) a4)
(plus (& 1) a4)
(mov (& 4) a2)
(mov a4 a1)
(jcall lt)
(mov a1 a4)
(bfnil a4 104)
(mov (& 4) a4)
104
(hpxmov (& 10) '0 a3)
(diff a3 a4)
(hpmovx a4 (& 10) '2)
(mov (& 0) a4)
(plus (& 2) a4)
(mov (& 3) a2)
(mov a4 a1)
(jcall lt)
(mov a1 a4)
(bfnil a4 105)
(mov (& 3) a4)
105
(hpxmov (& 10) '1 a3)
(diff a3 a4)
(hpmovx a4 (& 10) '3)
(mov (& 10) a1)
(adjstk '11)
(return)
))
(loader'((fentry #:display:windows:modify-window nsubr)
(entry #:display:windows:modify-window nsubr)
(cnbeq a4 '9 101)
(mov '#:display:windows:modify-window a1)
(mov '9 a2)
(jmp #:llcp:errwna)
101
(hpxmov (& 7) '8 a4)
(btnil (& 2) 103)
(hpmovx (& 2) (& 7) '4)
103
(btnil (& 1) 105)
(hpmovx (& 1) (& 7) '5)
105
(btnil (& 0) 107)
(hpmovx (& 0) (& 7) '6)
107
(bfnil (& 6) 110)
(bfnil (& 5) 110)
(bfnil (& 4) 110)
(btnil (& 3) 109)
110
(btnil (& 6) 111)
(btnil (& 5) 111)
(btnil (& 4) 111)
(btnil (& 3) 111)
(push (@ 113))
(push (& 9))
(push (& 9))
(push (& 9))
(push (& 9))
(push (& 9))
(push (& 9))
(mov '6 a4)
(jmp #:display:windows:move-resize-window)
113
(eval ())
(bra 109)
111
(bfnil (& 6) 116)
(btnil (& 5) 115)
116
(push (@ 117))
(push (& 9))
(push (& 9))
(push (& 9))
(push (& 9))
(mov '4 a4)
(jmp #:display:windows:move-window)
117
(eval ())
115
(bfnil (& 4) 120)
(btnil (& 3) 109)
120
(push (@ 121))
(push (& 9))
(push (& 9))
(push (& 7))
(push (& 7))
(mov '4 a4)
(jmp #:display:windows:resize-window)
121
(eval ())
109
(btnil (& 2) 123)
(hpxmov (& 7) '15 a4)
(cabne a4 'opaque 123)
(hpxmov (& 7) '8 a1)
(hpxmov a1 '0 a1)
(mov (& 2) a2)
(jcall windows_change_title)
123
(btnil (& 0) 127)
(hpxmov (& 7) '6 a4)
(cabne a4 '1 128)
(hpxmov (& 7) '8 a1)
(hpxmov a1 '0 a1)
(jcall windows_window_map)
(bra 127)
128
(hpxmov (& 7) '8 a1)
(hpxmov a1 '0 a1)
(jcall windows_window_unmap)
127
(btnil (& 1) 131)
(hpxmov (& 7) '15 a4)
(cabne a4 'opaque 131)
(mov (& 1) a3)
(mov (& 7) a2)
(mov (& 8) a1)
(jcall #:display:windows:window-border)
131
(mov (& 7) a1)
(adjstk '9)
(return)
))
(loader'((fentry #:display:windows:window-map subr2)
(entry #:display:windows:window-map subr2)
(push a2)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(jcall windows_window_map)
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:window-unmap subr2)
(entry #:display:windows:window-unmap subr2)
(push a2)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(jcall windows_window_unmap)
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:set-foreground-window subr2)
(entry #:display:windows:set-foreground-window subr2)
(push a2)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(jcall windows_set_foreground_window)
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:window-transient subr2)
(entry #:display:windows:window-transient subr2)
(push a2)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(mov '1 a2)
(jcall windows_window_transient)
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:window-toplevel subr2)
(entry #:display:windows:window-toplevel subr2)
(push a2)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(mov '0 a2)
(jcall windows_window_transient)
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:update-window nsubr)
(entry #:display:windows:update-window nsubr)
(cnbeq a4 '6 101)
(mov '#:display:windows:update-window a1)
(mov '6 a2)
(jmp #:llcp:errwna)
101
(btnil (& 3) 103)
(hpmovx (& 3) (& 4) '0)
103
(btnil (& 2) 105)
(hpmovx (& 2) (& 4) '1)
105
(btnil (& 1) 107)
(hpmovx (& 1) (& 4) '2)
107
(btnil (& 0) 109)
(hpmovx (& 0) (& 4) '3)
(mov (& 4) a2)
(mov (& 5) a1)
(call #:display:windows:update-subwindows)
109
(push (@ 110))
(push (& 5))
(push (& 7))
(hpxmov (& 7) '7 a4)
(push a4)
(push '0)
(push '0)
(hpxmov (& 10) '2 a4)
(push a4)
(hpxmov (& 11) '3 a4)
(push a4)
(mov '7 a4)
(jmp #:display:windows:set-clip-for-subwindows)
110
(eval ())
(hpxmov (& 5) '8 a4)
(btnil a4 112)
(hpxmov (& 5) '8 a2)
(mov (& 5) a1)
(jcall #:display:windows:current-window)
112
(mov (& 4) a1)
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:window-clear-region nsubr)
(entry #:display:windows:window-clear-region nsubr)
(cnbeq a4 '6 101)
(mov '#:display:windows:window-clear-region a1)
(mov '6 a2)
(jmp #:llcp:errwna)
101
(hpxmov (& 5) '8 a4)
(cabeq (& 4) a4 103)
(mov (& 4) a2)
(mov (& 5) a1)
(jcall #:display:windows:current-window)
103
(bfnil (& 3) 105)
(mov '0 (& 3))
105
(bfnil (& 2) 107)
(mov '0 (& 2))
107
(bfnil (& 1) 109)
(hpxmov (& 4) '2 a4)
(mov a4 (& 1))
109
(bfnil (& 0) 111)
(hpxmov (& 4) '3 a4)
(mov a4 (& 0))
111
(hpxmov (& 4) '15 a4)
(cabne a4 'opaque 112)
(push (@ 114))
(hpxmov (& 5) '8 a4)
(hpxmov a4 '0 a4)
(push a4)
(hpxmov (& 6) '8 a4)
(hpxmov a4 '1 a4)
(push a4)
(push (& 6))
(push (& 6))
(push (& 6))
(push (& 6))
(mov '6 a4)
(jmp windows_clear_window)
114
(eval ())
(bra 113)
112
(hpxmov (& 4) '7 a4)
(hpxmov a4 '12 a4)
(hpxmov a4 '3 a4)
(cnbge (& 3) '0 116)
(mov (& 1) a3)
(plus (& 3) a3)
(mov a3 (& 1))
(mov '0 (& 3))
116
(cnbge (& 2) '0 118)
(mov (& 0) a3)
(plus (& 2) a3)
(mov a3 (& 0))
(mov '0 (& 2))
118
(mov (& 3) a3)
(plus (& 1) a3)
(hpxmov a4 '2 a2)
(cnble a3 a2 120)
(hpxmov a4 '2 a3)
(diff (& 3) a3)
(mov a3 (& 1))
120
(mov (& 2) a3)
(plus (& 0) a3)
(hpxmov a4 '3 a2)
(cnble a3 a2 122)
(hpxmov a4 '3 a3)
(diff (& 2) a3)
(mov a3 (& 0))
122
(push (@ 123))
(hpxmov (& 5) '8 a3)
(hpxmov a3 '6 a3)
(hpxmov a3 '8 a3)
(hpxmov a3 '0 a3)
(push a3)
(hpxmov (& 6) '8 a3)
(hpxmov a3 '6 a3)
(hpxmov a3 '8 a3)
(hpxmov a3 '1 a3)
(push a3)
(hpxmov (& 7) '8 a3)
(hpxmov a3 '4 a3)
(hpxmov a4 '0 a2)
(plus a2 a3)
(mov (& 6) a2)
(plus a3 a2)
(push a2)
(hpxmov (& 8) '8 a3)
(hpxmov a3 '5 a3)
(hpxmov a4 '1 a2)
(plus a2 a3)
(mov (& 6) a2)
(plus a3 a2)
(push a2)
(push (& 6))
(push (& 6))
(mov '6 a4)
(jmp windows_clear_window)
123
(eval ())
113
(hpxmov (& 5) '8 a4)
(btnil a4 125)
(hpxmov (& 5) '8 a2)
(mov (& 5) a1)
(jcall #:display:windows:current-window)
125
(mov (& 4) a1)
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:window-background subr3)
(entry #:display:windows:window-background subr3)
(hpxmov a2 '7 a4)
(btnil a4 101)
(hpxmov a2 '7 a4)
(hpmovx a3 a4 '5)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(hpxmov a3 '6 a2)
(jmp windows_set_window_background)
101
(mov nil a1)
(return)
))
(loader'((fentry #:display:windows:window-border subr3)
(entry #:display:windows:window-border subr3)
(push a3)
(push a2)
(hpxmov a2 '9 a4)
(bfnil a4 102)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(mov a3 a2)
(jcall windows_topchangewindow_border)
102
(hpmovx (& 1) (& 0) '5)
(mov (& 1) a1)
(adjstk '2)
(return)
))
(loader'((fentry #:display:windows:activate-window subr2)
(entry #:display:windows:activate-window subr2)
(hpxmov a2 '9 a4)
(bfnil a4 101)
(push (@ 103))
(hpxmov a2 '8 a4)
(hpxmov a4 '0 a4)
(push a4)
(hpxmov a2 '0 a4)
(push a4)
(hpxmov a2 '1 a4)
(push a4)
(push '1)
(mov '4 a4)
(jmp windows_topmove_window)
103
(eval ())
(return)
101
(mov nil a1)
(return)
))
(loader'((fentry #:display:windows:move-window nsubr)
(entry #:display:windows:move-window nsubr)
(cnbeq a4 '4 101)
(mov '#:display:windows:move-window a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(btnil (& 1) 103)
(hpmovx (& 1) (& 2) '0)
103
(btnil (& 0) 105)
(hpmovx (& 0) (& 2) '1)
105
(hpxmov (& 2) '9 a4)
(btnil a4 106)
(hpxmov (& 2) '8 a1)
(hpxmov a1 '0 a1)
(hpxmov (& 2) '0 a2)
(hpxmov (& 2) '1 a3)
(jcall windows_move_window)
(bra 107)
106
(push (@ 108))
(hpxmov (& 3) '8 a4)
(hpxmov a4 '0 a4)
(push a4)
(hpxmov (& 4) '0 a4)
(push a4)
(hpxmov (& 5) '1 a4)
(push a4)
(push '0)
(mov '4 a4)
(jmp windows_topmove_window)
108
(eval ())
107
(push (@ 109))
(push (& 3))
(push (& 5))
(hpxmov (& 5) '7 a4)
(push a4)
(push (& 5))
(push (& 5))
(hpxmov (& 8) '2 a4)
(push a4)
(hpxmov (& 9) '3 a4)
(push a4)
(mov '7 a4)
(jmp #:display:windows:set-clip-for-subwindows)
109
(eval ())
(hpxmov (& 3) '8 a4)
(btnil a4 110)
(hpxmov (& 3) '8 a2)
(mov (& 3) a1)
(adjstk '4)
(jmp #:display:windows:current-window)
110
(mov nil a1)
(adjstk '4)
(return)
))
(loader'((fentry #:display:windows:resize-window nsubr)
(entry #:display:windows:resize-window nsubr)
(cnbeq a4 '4 101)
(mov '#:display:windows:resize-window a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(btnil (& 1) 103)
(hpmovx (& 1) (& 2) '2)
103
(btnil (& 0) 105)
(hpmovx (& 0) (& 2) '3)
105
(hpxmov (& 2) '9 a4)
(btnil a4 106)
(hpxmov (& 2) '8 a1)
(hpxmov a1 '0 a1)
(hpxmov (& 2) '2 a2)
(hpxmov (& 2) '3 a3)
(jcall windows_resize_window)
(bra 107)
106
(hpxmov (& 2) '8 a1)
(hpxmov a1 '0 a1)
(hpxmov (& 2) '2 a2)
(hpxmov (& 2) '3 a3)
(jcall windows_topresize_window)
107
(btnil (& 0) 109)
(mov (& 2) a2)
(mov (& 3) a1)
(call #:display:windows:update-subwindows)
109
(push (@ 110))
(push (& 3))
(push (& 5))
(hpxmov (& 5) '7 a4)
(push a4)
(hpxmov (& 6) '0 a4)
(push a4)
(hpxmov (& 7) '1 a4)
(push a4)
(push (& 7))
(push (& 7))
(mov '7 a4)
(jmp #:display:windows:set-clip-for-subwindows)
110
(eval ())
(hpxmov (& 3) '8 a4)
(btnil a4 111)
(hpxmov (& 3) '8 a2)
(mov (& 3) a1)
(adjstk '4)
(jmp #:display:windows:current-window)
111
(mov nil a1)
(adjstk '4)
(return)
))
(loader'((fentry #:display:windows:move-resize-window nsubr)
(entry #:display:windows:move-resize-window nsubr)
(cnbeq a4 '6 101)
(mov '#:display:windows:move-resize-window a1)
(mov '6 a2)
(jmp #:llcp:errwna)
101
(btnil (& 3) 103)
(hpmovx (& 3) (& 4) '0)
103
(btnil (& 2) 105)
(hpmovx (& 2) (& 4) '1)
105
(btnil (& 1) 107)
(hpmovx (& 1) (& 4) '2)
107
(btnil (& 0) 109)
(hpmovx (& 0) (& 4) '3)
109
(hpxmov (& 4) '9 a4)
(btnil a4 110)
(push (@ 112))
(hpxmov (& 5) '8 a4)
(hpxmov a4 '0 a4)
(push a4)
(hpxmov (& 6) '0 a4)
(push a4)
(hpxmov (& 7) '1 a4)
(push a4)
(hpxmov (& 8) '2 a4)
(push a4)
(hpxmov (& 9) '3 a4)
(push a4)
(mov '5 a4)
(jmp windows_moveresize_window)
112
(eval ())
(bra 111)
110
(push (@ 113))
(hpxmov (& 5) '8 a4)
(hpxmov a4 '0 a4)
(push a4)
(hpxmov (& 6) '0 a4)
(push a4)
(hpxmov (& 7) '1 a4)
(push a4)
(hpxmov (& 8) '2 a4)
(push a4)
(hpxmov (& 9) '3 a4)
(push a4)
(mov '5 a4)
(jmp windows_topmoveresize_window)
113
(eval ())
111
(btnil (& 0) 115)
(mov (& 4) a2)
(mov (& 5) a1)
(call #:display:windows:update-subwindows)
115
(push (@ 116))
(push (& 5))
(push (& 7))
(hpxmov (& 7) '7 a4)
(push a4)
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(mov '7 a4)
(jmp #:display:windows:set-clip-for-subwindows)
116
(eval ())
(hpxmov (& 5) '8 a4)
(btnil a4 117)
(hpxmov (& 5) '8 a2)
(mov (& 5) a1)
(adjstk '6)
(jmp #:display:windows:current-window)
117
(mov nil a1)
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:window-events-list subr3)
(entry #:display:windows:window-events-list subr3)
(hpmovx a3 a2 '14)
(mov a3 a1)
(return)
))
(loader'((fentry #:display:windows:window-title subr3)
(entry #:display:windows:window-title subr3)
(push a3)
(push a2)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(mov a3 a2)
(jcall windows_change_title)
(hpmovx (& 1) (& 0) '4)
(mov (& 1) a1)
(adjstk '2)
(return)
))
(loader'((fentry #:display:windows:window-state subr3)
(entry #:display:windows:window-state subr3)
(push a3)
(push a2)
(push a1)
(mov a3 a1)
(cabne a1 'iconify 102)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(mov '1 a2)
(jcall windows_set_window_state)
(bra 101)
102
(cabne a1 'map 103)
(mov (& 0) a1)
(jcall #:display:windows:window-map)
(hpxmov (& 1) '8 a1)
(hpxmov a1 '0 a1)
(mov '0 a2)
(jcall windows_set_window_state)
(bra 101)
103
(cabne a1 'unmap 104)
(mov (& 0) a1)
(jcall #:display:windows:window-unmap)
(bra 101)
104
(cabne a1 'raise 105)
(mov (& 0) a1)
(jcall #:display:windows:window-raise)
(bra 101)
105
(cabne a1 'lower 106)
(mov (& 0) a1)
(jcall #:display:windows:window-lower)
(bra 101)
106
(cabne a1 'transient 107)
(mov (& 0) a1)
(jcall #:display:windows:window-transient)
(bra 101)
107
(cabne a1 'toplevel 108)
(mov (& 0) a1)
(jcall #:display:windows:window-toplevel)
(bra 101)
108
(cabne a1 'activate 109)
(mov (& 0) a1)
(jcall #:display:windows:activate-window)
(mov 'raise (& 2))
(bra 101)
109
(mov a1 a3)
(mov '#:display:windows:not-a-valid-argument a2)
(mov 'window-state a1)
(jcall error)
101
(hpmovx (& 2) (& 1) '17)
(mov (& 2) a1)
(adjstk '3)
(return)
))
(loader'((fentry #:display:windows:window-raise subr2)
(entry #:display:windows:window-raise subr2)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(jmp windows_pop_window)
))
(loader'((fentry #:display:windows:window-lower subr2)
(entry #:display:windows:window-lower subr2)
(hpxmov a2 '8 a1)
(hpxmov a1 '0 a1)
(jmp windows_push_window)
))
(loader'((fentry #:display:windows:window-change-attributes nsubr)
(entry #:display:windows:window-change-attributes nsubr)
(cnbeq a4 '4 102)
(mov '#:display:windows:window-change-attributes a1)
(mov '4 a2)
(jmp #:llcp:errwna)
102
(btnil (& 1) 106)
(mov (& 1) a1)
(mov (cdr a1) (& 1))
(mov (car a1) a1)
(cabne a1 'transient 102)
(mov (& 2) a2)
(mov (& 3) a1)
(jcall #:display:windows:window-transient)
(bra 102)
106
(btnil (& 0) 107)
(mov (& 0) a1)
(mov (cdr a1) (& 0))
(mov (car a1) a1)
(cabne a1 'transient 106)
(mov (& 2) a2)
(mov (& 3) a1)
(jcall #:display:windows:window-toplevel)
(bra 106)
107
(mov nil a1)
(adjstk '4)
(return)
))
(loader'((entry #:display:windows:update-subwindows subr2)
(hpxmov a2 '13 a4)
(push a4)
101
(bfcons (& 0) 102)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(hpxmov (& 0) '8 a1)
(hpxmov a1 '0 a1)
(hpxmov (& 0) '0 a2)
(hpxmov (& 0) '1 a3)
(jcall windows_move_window)
(adjstk '1)
(bra 101)
102
(mov nil a1)
(adjstk '1)
(return)
))
(loader '((end)))
