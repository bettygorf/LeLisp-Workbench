(loader '((title |wingraph.lo|)))
(defvar #:sys-package:colon '#:display:windows)
(loader'((fentry #:display:windows:current-font subr3)
(entry #:display:windows:current-font subr3)
(push a2)
(hpxmov a1 '32 a4)
(hpxmov a4 a3 a4)
(push a4)
(hpxmov a2 '12 a1)
(hpxmov a1 '1 a1)
(mov a4 a2)
(jcall windows_set_font)
(mov (& 0) a1)
(jcall windows_font_ascent)
(hpmovx a1 (& 1) '13)
(mov (& 0) a1)
(jcall windows_font_height)
(hpmovx a1 (& 1) '14)
(adjstk '2)
(return)
))
(loader'((fentry #:display:windows:current-line-style subr3)
(entry #:display:windows:current-line-style subr3)
(hpxmov a1 '29 a4)
(hpxmov a4 a3 a4)
(push a4)
(push (@ 101))
(hpxmov a2 '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(hpxmov (& 2) '0 a4)
(push a4)
(hpxmov (& 3) '1 a4)
(push a4)
(hpxmov a2 '4 a4)
(hpxmov a4 '6 a4)
(push a4)
(mov '4 a4)
(jmp windows_set_line_style)
101
(eval ())
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:current-pattern subr3)
(entry #:display:windows:current-pattern subr3)
(push a3)
(push a2)
(hpxmov a2 '16 a4)
(cabne a4 'pattern 102)
(push (@ 103))
(hpxmov a2 '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(hpxmov a1 '30 a4)
(hpxmov a4 a3 a4)
(hpxmov a4 '2 a4)
(hpxmov a4 '1 a4)
(push a4)
(push a3)
(push '1)
(mov '4 a4)
(jmp windows_set_fill_mode)
103
(eval ())
102
(hpxmov (& 0) '16 a4)
(cabne a4 'foreground 104)
(push (@ 106))
(hpxmov (& 1) '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(push '0)
(push (& 4))
(push '0)
(mov '4 a4)
(jmp windows_set_fill_mode)
106
(eval ())
(adjstk '2)
(return)
104
(mov nil a1)
(adjstk '2)
(return)
))
(loader'((fentry #:display:windows:current-mode subr3)
(entry #:display:windows:current-mode subr3)
(push a1)
(hpxmov a2 '12 a1)
(hpxmov a1 '1 a1)
(hpxmov (& 0) '33 a2)
(hpxmov a2 a3 a2)
(adjstk '1)
(jmp windows_set_mode)
))
(loader'((fentry #:display:windows:current-foreground subr3)
(entry #:display:windows:current-foreground subr3)
(push a3)
(push a2)
(push a1)
(hpxmov a1 '29 a4)
(hpxmov a2 '1 a3)
(hpxmov a4 a3 a4)
(push (@ 101))
(hpxmov a2 '12 a3)
(hpxmov a3 '1 a3)
(push a3)
(hpxmov (& 4) '6 a3)
(push a3)
(hpxmov a4 '0 a3)
(push a3)
(hpxmov a4 '1 a3)
(push a3)
(mov '4 a4)
(jmp windows_set_foreground)
101
(eval ())
(hpxmov (& 1) '15 a4)
(btnil a4 103)
(hpxmov (& 1) '15 a3)
(mov (& 1) a2)
(mov (& 0) a1)
(jcall #:display:windows:current-stipple)
103
(hpxmov (& 1) '2 a3)
(mov (& 1) a2)
(mov (& 0) a1)
(adjstk '3)
(jmp #:display:windows:current-pattern)
))
(loader'((fentry #:display:windows:current-background subr3)
(entry #:display:windows:current-background subr3)
(push a3)
(push a2)
(push a1)
(hpxmov a2 '12 a1)
(hpxmov a1 '1 a1)
(hpxmov a3 '6 a2)
(jcall windows_set_background)
(hpxmov (& 0) '11 a1)
(hpxmov a1 '12 a1)
(hpxmov a1 '1 a1)
(hpxmov (& 2) '6 a2)
(jcall windows_set_background)
(hpxmov (& 1) '15 a4)
(btnil a4 102)
(hpxmov (& 1) '15 a3)
(mov (& 1) a2)
(mov (& 0) a1)
(jcall #:display:windows:current-stipple)
102
(hpxmov (& 1) '2 a3)
(mov (& 1) a2)
(mov (& 0) a1)
(jcall #:display:windows:current-pattern)
(hpxmov (& 0) '8 a4)
(btnil a4 103)
(hpxmov a4 '7 a3)
(cabne a3 (& 1) 103)
(hpxmov (& 0) '10 a3)
(cabeq a4 a3 103)
(hpxmov a4 '15 a3)
(cabne a3 'opaque 103)
(hpxmov a4 '8 a1)
(hpxmov a1 '0 a1)
(hpxmov (& 2) '6 a2)
(adjstk '3)
(jmp windows_set_window_background)
103
(mov nil a1)
(adjstk '3)
(return)
))
(loader'((fentry #:display:windows:current-arc-mode subr3)
(entry #:display:windows:current-arc-mode subr3)
(hpmovx a3 a2 '17)
(mov a3 a1)
(return)
))
(loader'((fentry #:display:windows:line-style-max subr1)
(entry #:display:windows:line-style-max subr1)
(hpxmov a1 '29 a1)
(hgsize a1 a1)
(diff '1 a1)
(return)
))
(loader'((fentry #:display:windows:pattern-max subr1)
(entry #:display:windows:pattern-max subr1)
(hpxmov a1 '30 a1)
(hgsize a1 a1)
(diff '1 a1)
(return)
))
(loader'((fentry #:display:windows:make-pattern subr2)
(entry #:display:windows:make-pattern subr2)
(push a2)
(push a1)
(hpxmov a1 '30 a4)
(hgsize a4 a4)
(push a4)
(push a1)
(push (@ 101))
(plus '1 a4)
(mov '0 a2)
(mov a4 a1)
(jcall makevector)
(push a1)
(push '0)
(hpxmov (& 5) '30 a3)
(push a3)
(push '0)
(push (& 6))
(mov '5 a4)
(jmp bltvector)
101
(eval ())
(pop a4)
(hpmovx a1 a4 '30)
(hpxmov (& 1) '30 a4)
(hpmovx (& 2) a4 (& 0))
(mov (& 0) a1)
(adjstk '3)
(return)
))
(loader'((fentry #:display:windows:make-line-style subr3)
(entry #:display:windows:make-line-style subr3)
(push a3)
(push a2)
(push a1)
(mov '0 a2)
(mov '2 a1)
(jcall makevector)
(hpxmov (& 0) '29 a4)
(hgsize a4 a4)
(push a4)
(push a1)
(push (@ 101))
(plus '1 a4)
(mov '0 a2)
(mov a4 a1)
(jcall makevector)
(push a1)
(push '0)
(hpxmov (& 5) '29 a3)
(push a3)
(push '0)
(push (& 6))
(mov '5 a4)
(jmp bltvector)
101
(eval ())
(hpmovx a1 (& 2) '29)
(hpmovx (& 3) (& 0) '0)
(hpmovx (& 4) (& 0) '1)
(hpxmov (& 2) '29 a4)
(hpmovx (& 0) a4 (& 1))
(mov (& 1) a1)
(adjstk '5)
(return)
))
(loader'((fentry #:display:windows:width-substring nsubr)
(entry #:display:windows:width-substring nsubr)
(cnbeq a4 '5 101)
(mov '#:display:windows:width-substring a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(hgsize (& 2) a4)
(push a4)
(diff (& 2) a4)
(cnble (& 2) (& 0) 102)
(mov '0 a1)
(adjstk '6)
(return)
102
(cnble (& 1) a4 105)
(mov a4 (& 1))
105
(push (@ 106))
(hpxmov (& 5) '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(push (& 5))
(push (& 5))
(push (& 5))
(mov '4 a4)
(jmp windows_width_string)
106
(eval ())
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:height-substring nsubr)
(entry #:display:windows:height-substring nsubr)
(cnbeq a4 '5 101)
(mov '#:display:windows:height-substring a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(hgsize (& 2) a4)
(push a4)
(diff (& 2) a4)
(cnblt (& 2) (& 0) 102)
(mov (cvalq #:display:space) (& 3))
(mov '0 (& 2))
(mov '1 (& 1))
(bra 103)
102
(cnble (& 1) a4 103)
(mov a4 (& 1))
103
(push (@ 106))
(hpxmov (& 5) '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(push (& 5))
(push (& 5))
(push (& 5))
(mov '4 a4)
(jmp windows_height_string)
106
(eval ())
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:x-base-substring nsubr)
(entry #:display:windows:x-base-substring nsubr)
(cnbeq a4 '5 101)
(mov '#:display:windows:x-base-substring a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(hgsize (& 2) a4)
(push a4)
(diff (& 2) a4)
(cnblt (& 2) (& 0) 102)
(mov (cvalq #:display:space) (& 3))
(mov '0 (& 2))
(mov '1 (& 1))
(bra 103)
102
(cnble (& 1) a4 103)
(mov a4 (& 1))
103
(mov '0 a1)
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:y-base-substring nsubr)
(entry #:display:windows:y-base-substring nsubr)
(cnbeq a4 '5 101)
(mov '#:display:windows:y-base-substring a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(hgsize (& 2) a4)
(push a4)
(diff (& 2) a4)
(cnblt (& 2) (& 0) 102)
(mov (cvalq #:display:space) (& 3))
(mov '0 (& 2))
(mov '1 (& 1))
(bra 103)
102
(cnble (& 1) a4 103)
(mov a4 (& 1))
103
(push (@ 106))
(hpxmov (& 5) '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(push (& 5))
(push (& 5))
(push (& 5))
(mov '4 a4)
(jmp windows_height_string)
106
(eval ())
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:x-inc-substring nsubr)
(entry #:display:windows:x-inc-substring nsubr)
(cnbeq a4 '5 101)
(mov '#:display:windows:x-inc-substring a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(mov '5 a4)
(jmp #:display:windows:width-substring)
102
(eval ())
(adjstk '5)
(return)
))
(loader'((fentry #:display:windows:y-inc-substring nsubr)
(entry #:display:windows:y-inc-substring nsubr)
(cnbeq a4 '5 101)
(mov '#:display:windows:y-inc-substring a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(mov '0 a1)
(adjstk '5)
(return)
))
(loader'((fentry #:display:windows:cursor-max subr1)
(entry #:display:windows:cursor-max subr1)
(hpxmov a1 '31 a1)
(hgsize a1 a1)
(diff '1 a1)
(return)
))
(loader'((fentry #:display:windows:make-cursor nsubr)
(entry #:display:windows:make-cursor nsubr)
(cnbeq a4 '5 101)
(mov '#:display:windows:make-cursor a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(hpxmov (& 4) '0 a4)
(push a4)
(hpxmov (& 4) '0 a4)
(push a4)
(mov '2 a4)
(jmp min)
102
(eval ())
(push a1)
(push (@ 103))
(hpxmov (& 5) '1 a4)
(push a4)
(hpxmov (& 5) '1 a4)
(push a4)
(mov '2 a4)
(jmp min)
103
(eval ())
(hpxmov (& 4) '2 a4)
(hpxmov a4 '1 a4)
(hpxmov (& 3) '2 a3)
(hpxmov a3 '1 a3)
(push '"")
(push '"")
(push nil)
(push nil)
(push '0)
(push a3)
(push a4)
(push a1)
(mov '32 a2)
(mov (& 8) a1)
(jcall makestring)
(mov a1 (& 5))
(push '0)
(mov (& 1) a1)
(jcall numberp)
(bfnil a1 106)
(mov (& 1) a3)
(mov 'errnna a2)
(mov 'for a1)
(jcall error)
106
(push (@ 108))
(push (& 1))
(push (& 3))
(mov '2 a4)
(jmp >)
108
(eval ())
(bfnil a1 107)
(push (@ 109))
(push (& 3))
(push '0)
(push (& 3))
(push (& 10))
(push (& 14))
(push (& 7))
(push '1)
(mov '7 a4)
(jmp windows_get_byte_line)
109
(eval ())
(push (@ 110))
(push (& 9))
(push (& 8))
(mov '2 a4)
(jmp catenate)
110
(eval ())
(mov a1 (& 8))
(push (@ 111))
(push (& 4))
(push '0)
(push (& 3))
(push (& 10))
(push (& 14))
(push (& 7))
(push '1)
(mov '7 a4)
(jmp windows_get_byte_line)
111
(eval ())
(push (@ 112))
(push (& 8))
(push (& 8))
(mov '2 a4)
(jmp catenate)
112
(eval ())
(mov a1 (& 7))
(push (@ 113))
(push (& 1))
(push '1)
(mov '2 a4)
(jmp |+|)
113
(eval ())
(mov a1 (& 0))
(bra 106)
107
(adjstk '1)
(mov (& 8) a3)
(mov (& 6) a2)
(mov (& 7) a1)
(jcall windows_create_cursor)
(mov a1 (& 4))
(cabeq a1 '0 115)
(mov a1 a2)
(mov (& 13) a1)
(call #:display:windows:add-cursor)
(mov a1 (& 3))
115
(mov (& 3) a1)
(adjstk '14)
(return)
))
(loader'((fentry #:display:windows:make-named-cursor subr2)
(entry #:display:windows:make-named-cursor subr2)
(push a2)
(push a1)
(hpxmov (cvalq #:display:cursor-names) a2 a4)
(hpxmov a1 '34 a3)
(push '0)
(push nil)
(push a3)
(push a4)
(push a2)
(mov a3 a2)
(pop a1)
(jcall cassq)
(bfnil a1 101)
(mov (& 0) a1)
(jcall windows_named_cursor)
(cabeq a1 '0 102)
(mov a1 a2)
(mov (& 4) a1)
(call #:display:windows:add-cursor)
(mov a1 (& 3))
(mov (& 1) a3)
(mov a1 a2)
(mov (& 5) a1)
(jcall acons)
(hpmovx a1 (& 4) '34)
(mov (& 3) a1)
(adjstk '6)
(return)
102
(mov nil a1)
(adjstk '6)
(return)
101
(adjstk '6)
(return)
))
(loader'((entry #:display:windows:add-cursor subr2)
(push a2)
(push a1)
(hpxmov a1 '31 a4)
(hgsize a4 a4)
(push a4)
(push a1)
(push (@ 101))
(plus '1 a4)
(mov '0 a2)
(mov a4 a1)
(jcall makevector)
(push a1)
(push '0)
(hpxmov (& 5) '31 a3)
(push a3)
(push '0)
(push (& 6))
(mov '5 a4)
(jmp bltvector)
101
(eval ())
(pop a4)
(hpmovx a1 a4 '31)
(hpxmov (& 1) '31 a4)
(hpmovx (& 2) a4 (& 0))
(mov (& 0) a1)
(adjstk '3)
(return)
))
(loader'((fentry #:display:windows:cursor-name subr2)
(entry #:display:windows:cursor-name subr2)
(push a2)
(hpxmov a1 '34 a2)
(pop a1)
(jcall rassq)
(push (car a1))
(btnil (& 0) 101)
(hpxmov (cvalq #:display:cursor-names) (& 0) a1)
(adjstk '1)
(return)
101
(mov nil a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:current-cursor subr2)
(entry #:display:windows:current-cursor subr2)
(push a2)
(push a1)
(hpxmov a1 '8 a4)
(btnil a4 101)
(hpxmov a1 '8 a1)
(hpxmov a1 '8 a1)
(hpxmov a1 '0 a1)
(hpxmov (& 0) '31 a2)
(hpxmov a2 (& 1) a2)
(adjstk '2)
(jmp windows_set_cursor)
101
(mov nil a1)
(adjstk '2)
(return)
))
(loader'((fentry #:display:windows:move-cursor subr3)
(entry #:display:windows:move-cursor subr3)
(push a2)
(mov a3 a2)
(pop a1)
(jmp windows_move_cursor)
))
(loader'((fentry #:display:windows:font-ascent subr2)
(entry #:display:windows:font-ascent subr2)
(hpxmov a2 '13 a1)
(return)
))
(loader'((fentry #:display:windows:font-height subr2)
(entry #:display:windows:font-height subr2)
(hpxmov a2 '14 a1)
(return)
))
(loader'((fentry #:display:windows:make-graph-env nsubr)
(entry #:display:windows:make-graph-env nsubr)
(cnbge a4 '2 101)
(mov '#:display:windows:make-graph-env a1)
(mov '2 a2)
(jmp #:llcp:errwna)
101
(diff '2 a4)
(jcall #:llcp:nlist)
(mov (car a1) a4)
(bfnil a4 102)
(hpxmov (& 1) '10 a4)
102
(hpxmov a4 '8 a4)
(hpxmov a4 '0 a4)
(push a4)
(hpmovx (& 2) (& 1) '11)
(jcall #:tclass:winwindow:make)
(hpmovx a1 (& 1) '12)
(hpxmov (& 2) '32 a4)
(hpxmov (& 1) '0 a3)
(hpxmov a4 a3 a4)
(push a4)
(hpxmov (& 3) '29 a3)
(hpxmov (& 2) '1 a2)
(hpxmov a3 a2 a3)
(hpxmov (& 2) '16 a2)
(hpxmov (& 3) '33 a1)
(hpxmov (& 2) '3 a4)
(hpxmov a1 a4 a1)
(push nil)
(push nil)
(push a1)
(push a3)
(mov a2 a1)
(cabne a1 'foreground 104)
(mov '0 (& 3))
(mov '0 (& 2))
(bra 103)
104
(cabne a1 'pattern 105)
(mov '1 (& 3))
(hpxmov (& 7) '30 a4)
(hpxmov (& 6) '2 a3)
(hpxmov a4 a3 a4)
(hpxmov a4 '2 a4)
(hpxmov a4 '1 a4)
(mov a4 (& 2))
(bra 103)
105
(cabeq a1 'transparentstipple 107)
(cabne a1 'opaquestipple 106)
107
(mov '2 (& 3))
(hpxmov (& 6) '15 a4)
(hpxmov a4 '2 a4)
(hpxmov a4 '1 a4)
(mov a4 (& 2))
(bra 103)
106
(mov a1 a3)
(mov '"invalid mode" a2)
(mov '#:display:windows:current-fill-mode a1)
(jcall error)
103
(hpxmov (& 6) '12 a4)
(push a4)
(push (@ 109))
(push (& 7))
(push (& 7))
(hpxmov (& 4) '0 a3)
(push a3)
(hpxmov (& 5) '1 a3)
(push a3)
(push (& 8))
(hpxmov (& 13) '2 a3)
(push a3)
(push (& 11))
(push (& 10))
(hpxmov (& 16) '4 a3)
(hpxmov a3 '6 a3)
(push a3)
(hpxmov (& 17) '5 a3)
(hpxmov a3 '6 a3)
(push a3)
(mov '10 a4)
(jmp windows_new_create_graph_env)
109
(eval ())
(pop a4)
(hpmovx a1 a4 '1)
(hpxmov (& 6) '12 a4)
(mov (& 4) a1)
(jcall windows_font_ascent)
(hpmovx a1 (& 6) '13)
(mov (& 4) a1)
(jcall windows_font_height)
(hpmovx a1 (& 6) '14)
(mov (& 6) a1)
(adjstk '8)
(return)
))
(loader'((fentry #:display:windows:kill-graph-env subr2)
(entry #:display:windows:kill-graph-env subr2)
(push a2)
(hpxmov a2 '12 a1)
(hpxmov a1 '1 a1)
(jcall windows_free_graph_env)
(hpxmov (& 0) '12 a4)
(hpmovx nil a4 '1)
(mov nil a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:graph-env-set-clip nsubr)
(entry #:display:windows:graph-env-set-clip nsubr)
(cnbeq a4 '6 101)
(mov '#:display:windows:graph-env-set-clip a1)
(mov '6 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(hpxmov (& 5) '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(mov '5 a4)
(jmp windows_set_clip)
102
(eval ())
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:graph-env-set-clips nsubr)
(entry #:display:windows:graph-env-set-clips nsubr)
(cnbeq a4 '7 101)
(mov '#:display:windows:graph-env-set-clips a1)
(mov '7 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(hpxmov (& 6) '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 5))
(push (& 10))
(mov '6 a4)
(jmp windows_set_clips)
102
(eval ())
(adjstk '7)
(return)
))
(loader'((fentry #:display:windows:graph-env-change-values nsubr)
(entry #:display:windows:graph-env-change-values nsubr)
(cnbeq a4 '8 101)
(mov '#:display:windows:graph-env-change-values a1)
(mov '8 a2)
(jmp #:llcp:errwna)
101
(btnil (& 5) 103)
(hpmovx (& 5) (& 6) '0)
(mov (& 5) a3)
(mov (& 6) a2)
(mov (& 7) a1)
(jcall #:display:windows:current-font)
103
(btnil (& 4) 105)
(hpmovx (& 4) (& 6) '3)
(mov (& 4) a3)
(mov (& 6) a2)
(mov (& 7) a1)
(jcall #:display:windows:current-mode)
105
(btnil (& 3) 107)
(hpmovx (& 3) (& 6) '2)
(mov (& 3) a3)
(mov (& 6) a2)
(mov (& 7) a1)
(jcall #:display:windows:current-pattern)
107
(btnil (& 2) 109)
(hpmovx (& 2) (& 6) '1)
(mov (& 2) a3)
(mov (& 6) a2)
(mov (& 7) a1)
(jcall #:display:windows:current-line-style)
109
(btnil (& 1) 111)
(hpmovx (& 1) (& 6) '4)
(mov (& 1) a3)
(mov (& 6) a2)
(mov (& 7) a1)
(jcall #:display:windows:current-foreground)
111
(btnil (& 0) 112)
(hpmovx (& 0) (& 6) '5)
(mov (& 0) a3)
(mov (& 6) a2)
(mov (& 7) a1)
(adjstk '8)
(jmp #:display:windows:current-background)
112
(mov nil a1)
(adjstk '8)
(return)
))
(loader'((fentry #:display:windows:graph-env-subwindow-mode subr3)
(entry #:display:windows:graph-env-subwindow-mode subr3)
(mov a3 a1)
(return)
))
(loader'((fentry #:display:windows:font-max subr1)
(entry #:display:windows:font-max subr1)
(hpxmov a1 '32 a1)
(hgsize a1 a1)
(diff '1 a1)
(return)
))
(loader'((fentry #:display:windows:load-font subr2)
(entry #:display:windows:load-font subr2)
(push a2)
(push a1)
(push a2)
(hpxmov a1 '56 a2)
(pop a1)
(jcall cassoc)
(hpxmov (& 0) '32 a4)
(hgsize a4 a4)
(push a4)
(push a1)
(bfnil a1 102)
(mov (& 3) a3)
(mov '#:display:err-not-a-font-name a2)
(mov 'load-font a1)
(jcall error)
102
(push (@ 103))
(mov (& 2) a4)
(plus '1 a4)
(mov '0 a2)
(mov a4 a1)
(jcall makevector)
(push a1)
(push '0)
(hpxmov (& 5) '32 a4)
(push a4)
(push '0)
(push (& 6))
(mov '5 a4)
(jmp bltvector)
103
(eval ())
(hpmovx a1 (& 2) '32)
(hpxmov (& 2) '32 a4)
(hpmovx (& 0) a4 (& 1))
(mov (& 0) a1)
(jcall windows_load_font)
(mov (& 1) a1)
(adjstk '4)
(return)
))
(loader'((fentry #:display:windows:system-font-name subr0)
(entry #:display:windows:system-font-name subr0)
(push (@ 103))
(jcall winversion)
(push a1)
(push '5.)
(mov '2 a4)
(jmp >=)
103
(eval ())
(btnil a1 101)
(push (@ 104))
(mov '0 a4)
(jmp current-display)
104
(eval ())
(mov '"Tahoma-8-TT" a3)
(mov '1 a2)
(jcall #:display:windows:get-font-names)
(bfcons a1 105)
(mov (car a1) a1)
(return)
105
(push (@ 107))
(push '"Arial-")
(jcall windows_system_font_size)
(push a1)
(push '"-TT-Bold")
(mov '3 a4)
(jmp catenate)
107
(eval ())
(return)
101
(push (@ 108))
(push '"Arial-")
(jcall windows_system_font_size)
(push a1)
(push '"-TT-Bold")
(mov '3 a4)
(jmp catenate)
108
(eval ())
(return)
))
(loader'((fentry #:display:windows:get-font-info subr3)
(entry #:display:windows:get-font-info subr3)
(push a3)
(push a2)
(hpxmov a1 '56 a2)
(pop a1)
(jcall cassoc)
(btnil a1 101)
(mov (& 0) a2)
(jcall windows_font_info)
(mov (& 0) a1)
(adjstk '1)
(return)
101
(mov nil a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:windows:get-font-names subr3)
(entry #:display:windows:get-font-names subr3)
(push a2)
(push a1)
(hpxmov a1 '56 a4)
(push '0)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push a3)
(push a4)
101
(push (@ 103))
(hgsize (& 2) a4)
(push a4)
(push '0)
(mov '2 a4)
(jmp >)
103
(eval ())
(btnil a1 102)
(push (@ 104))
(mov (& 1) a1)
(jcall length)
(push a1)
(push '0)
(mov '2 a4)
(jmp >)
104
(eval ())
(btnil a1 102)
(push (@ 105))
(push '42)
(push (& 3))
(mov '2 a4)
(jmp chrpos)
105
(eval ())
(mov a1 (& 4))
(cabne a1 '0 106)
(push (@ 108))
(push (& 2))
(push '1)
(mov '2 a4)
(jmp substring)
108
(eval ())
(mov a1 (& 1))
(bra 101)
106
(push (@ 109))
(push '63)
(push (& 3))
(mov '2 a4)
(jmp chrpos)
109
(eval ())
(mov a1 (& 3))
(cabne a1 '0 110)
(push (@ 112))
(push (& 2))
(push '1)
(mov '2 a4)
(jmp substring)
112
(eval ())
(mov a1 (& 1))
(mov nil (& 6))
(push (& 0))
113
(bfcons (& 0) 114)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(push (@ 117))
(mov (& 1) a4)
(push (car a4))
(push '1)
(mov '2 a4)
(jmp substring)
117
(eval ())
(mov a1 (& 7))
(btnil a1 116)
(mov (& 0) a2)
(mov (& 8) a3)
(mov (cdr a2) a2)
(jcall acons)
(mov a1 (& 8))
116
(adjstk '1)
(bra 113)
114
(adjstk '1)
(mov (& 6) (& 0))
(bra 101)
110
(btnil (& 4) 118)
(btnil a1 120)
(push (@ 122))
(push (& 5))
(push a1)
(mov '2 a4)
(jmp min)
122
(eval ())
(mov a1 (& 2))
(bra 119)
120
(mov (& 4) (& 2))
(bra 119)
118
(btnil a1 123)
(mov a1 (& 2))
(bra 119)
123
(mov '0 (& 2))
119
(mov nil (& 6))
(cabne (& 2) '0 125)
(mov (& 1) (& 5))
(mov '"" (& 1))
(push (& 0))
127
(bfcons (& 0) 128)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(mov (& 0) a4)
(btnil (car a4) 130)
(mov (car a4) a2)
(mov (& 7) a1)
(jcall eqstring)
(btnil a1 130)
(push (@ 131))
(mov (& 1) a4)
(push (car a4))
(push (& 6))
(mov '2 a4)
(jmp substring)
131
(eval ())
(mov (& 0) a2)
(mov (& 8) a3)
(mov (cdr a2) a2)
(jcall acons)
(mov a1 (& 8))
130
(adjstk '1)
(bra 127)
128
(adjstk '1)
(bra 126)
125
(push (@ 132))
(push (& 2))
(push '0)
(push (& 5))
(mov '3 a4)
(jmp substring)
132
(eval ())
(mov a1 (& 5))
(push (@ 133))
(push (& 2))
(push (& 4))
(mov '2 a4)
(jmp substring)
133
(eval ())
(mov a1 (& 1))
(push (& 0))
134
(bfcons (& 0) 135)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(push (@ 136))
(push (& 8))
(mov (& 2) a4)
(push (car a4))
(push '0)
(mov '3 a4)
(jmp index)
136
(eval ())
(mov a1 (& 4))
(btnil a1 138)
(push (@ 139))
(mov (& 1) a4)
(push (car a4))
(push a1)
(mov '2 a4)
(jmp substring)
139
(eval ())
(mov (& 0) a2)
(mov (& 8) a3)
(mov (cdr a2) a2)
(jcall acons)
(mov a1 (& 8))
138
(adjstk '1)
(bra 134)
135
(adjstk '1)
126
(mov (& 6) (& 0))
(bra 101)
102
(mov (& 0) a2)
(mov (& 9) a1)
(jcall firstn)
(mov a1 (& 6))
(btnil a1 140)
(hpxmov (& 8) '56 a4)
(mov a4 (& 0))
(push a1)
(push nil)
142
(bfcons (& 1) 143)
(mov (& 1) a4)
(mov (cdr a4) (& 1))
(push (car a4))
(mov (& 0) a1)
(mov (& 3) a2)
(mov (cdr a1) a1)
(jcall rassoc)
(mov (car a1) a1)
(adjstk '1)
(mov (& 0) a2)
(jcall cons)
(mov a1 (& 0))
(bra 142)
143
(mov (& 0) a1)
(adjstk '12)
(jmp nreverse)
140
(mov nil a1)
(adjstk '10)
(return)
))
(loader'((fentry #:display:windows:current-stipple subr3)
(entry #:display:windows:current-stipple subr3)
(btnil a3 101)
(hpxmov a2 '16 a4)
(cabeq a4 'transparentstipple 103)
(hpxmov a2 '16 a4)
(cabne a4 'opaquestipple 101)
103
(push (@ 104))
(hpxmov a2 '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(hpxmov a3 '2 a4)
(hpxmov a4 '1 a4)
(push a4)
(hpxmov a2 '2 a4)
(push a4)
(push '2)
(mov '4 a4)
(jmp windows_set_fill_mode)
104
(eval ())
(return)
101
(mov nil a1)
(return)
))
(loader'((fentry #:display:windows:current-fill-mode subr3)
(entry #:display:windows:current-fill-mode subr3)
(push a3)
(push a2)
(push a1)
(bfnil a3 102)
(mov 'foreground (& 2))
102
(hpxmov a2 '15 a4)
(bfnil a4 105)
(cabeq (& 2) 'foreground 105)
(cabne (& 2) 'pattern 103)
105
(push nil)
(push '0)
(mov (& 4) a1)
(cabne a1 'foreground 107)
(mov '0 (& 1))
(mov '0 (& 0))
(bra 106)
107
(cabne a1 'pattern 108)
(mov '1 (& 1))
(hpxmov (& 2) '30 a4)
(hpxmov a2 '2 a3)
(hpxmov a4 a3 a4)
(hpxmov a4 '2 a4)
(hpxmov a4 '1 a4)
(mov a4 (& 0))
(bra 106)
108
(cabeq a1 'transparentstipple 110)
(cabne a1 'opaquestipple 109)
110
(mov '2 (& 1))
(hpxmov a2 '15 a4)
(hpxmov a4 '2 a4)
(hpxmov a4 '1 a4)
(mov a4 (& 0))
(bra 106)
109
(mov a1 a3)
(mov '"invalid mode" a2)
(mov '#:display:windows:current-fill-mode a1)
(jcall error)
106
(push (@ 112))
(hpxmov (& 4) '12 a4)
(hpxmov a4 '1 a4)
(push a4)
(push (& 2))
(hpxmov (& 6) '2 a4)
(push a4)
(push (& 5))
(mov '4 a4)
(jmp windows_set_fill_mode)
112
(eval ())
(adjstk '5)
(return)
103
(mov a2 a3)
(mov '"no existent stipple for this graph-env" a2)
(mov '#:display:windows:current-fill-mode a1)
(adjstk '3)
(jmp error)
))
(loader'((fentry #:display:windows:mutable-flag subr1)
(entry #:display:windows:mutable-flag subr1)
(btnil a1 101)
(mov '1 a1)
(bra 102)
101
(mov '0 a1)
102
(jmp windows_mutable)
))
(loader'((fentry #:display:windows:hilight-flag subr1)
(entry #:display:windows:hilight-flag subr1)
(btnil a1 101)
(mov '1 a1)
(bra 102)
101
(mov '0 a1)
102
(jmp windows_hilight)
))
(loader'((fentry #:display:windows:set-optional-fontname subr1)
(entry #:display:windows:set-optional-fontname subr1)
(jmp windows_set_optional_fontname)
))
(putprop '#:sys-windows:windows-parameterssm_cxscreen sm_cyscreen sm_cxvscroll sm_cyhscroll sm_cycaption sm_cxborder sm_cyborder sm_cxdlgframe sm_cydlgframe sm_cyvthumb sm_cxhthumb sm_cxicon sm_cyicon sm_cxcursor sm_cycursor sm_cymenu sm_cxfullscreen sm_cyfullscreen sm_cykanjiwindow sm_mousepresent sm_cyvscroll sm_cxhscroll sm_debug sm_swapbutton sm_reserved1 sm_reserved2 sm_reserved3 sm_reserved4 sm_cxmin sm_cymin sm_cxsize sm_cysize sm_cxframe sm_cyframe sm_cxmintrack sm_cymintrack sm_cxdoubleclk sm_cydoubleclk sm_cxiconspacing sm_cyiconspacing sm_menudropalignment sm_penwindows sm_dbcsenabled sm_cmousebuttons system_fixed_width system_fixed_height horzsize vertsize horzres vertres bitspixel planes aspectx aspecty aspectxy logpixelsx logpixelsy sizepalette colorres numreserved color_scrollbar color_background color_activecaption color_inactivecaption color_menu color_window color_windowframe color_menutext color_windowtext color_captiontext color_activeborder color_inactiveborder color_appworkspace color_highlight color_highlighttext color_btnface color_btnshadow color_graytext color_btntext color_inactivecaptiontext color_btnhighlight color_3ddkshadow color_3dlight color_infotext color_infobk palette_entry_00 palette_entry_01 palette_entry_02 palette_entry_03 palette_entry_04 palette_entry_05 palette_entry_06 palette_entry_07 palette_entry_08 palette_entry_09 palette_entry_10 palette_entry_11 palette_entry_12 palette_entry_13 palette_entry_14 palette_entry_15 palette_entry_16 palette_entry_17 palette_entry_18 palette_entry_19 work_area) 'defstruct)
(loader'((fentry #:sys-windows:windows-parameters:make subr0)
(entry #:sys-windows:windows-parameters:make subr0)
(push (@ 101))
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0])
(push '#[0 0 0 0])
(mov '106 a4)
(jmp vector)
101
(eval ())
(mov '#:sys-windows:windows-parameters (cdr a1))
(return)
))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxscreen nsubr)
(entry #:sys-windows:windows-parameters:sm_cxscreen nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxscreen)
(push '0)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxscreen #:sys-windows:windows-parameters:sm_cxscreen)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxscreen (struct . valeur) (ifn valeur (list 'vref struct 0) (list 'vset struct 0 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cyscreen nsubr)
(entry #:sys-windows:windows-parameters:sm_cyscreen nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cyscreen)
(push '1)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cyscreen #:sys-windows:windows-parameters:sm_cyscreen)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cyscreen (struct . valeur) (ifn valeur (list 'vref struct 1) (list 'vset struct 1 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxvscroll nsubr)
(entry #:sys-windows:windows-parameters:sm_cxvscroll nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxvscroll)
(push '2)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxvscroll #:sys-windows:windows-parameters:sm_cxvscroll)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxvscroll (struct . valeur) (ifn valeur (list 'vref struct 2) (list 'vset struct 2 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cyhscroll nsubr)
(entry #:sys-windows:windows-parameters:sm_cyhscroll nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cyhscroll)
(push '3)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cyhscroll #:sys-windows:windows-parameters:sm_cyhscroll)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cyhscroll (struct . valeur) (ifn valeur (list 'vref struct 3) (list 'vset struct 3 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cycaption nsubr)
(entry #:sys-windows:windows-parameters:sm_cycaption nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cycaption)
(push '4)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cycaption #:sys-windows:windows-parameters:sm_cycaption)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cycaption (struct . valeur) (ifn valeur (list 'vref struct 4) (list 'vset struct 4 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxborder nsubr)
(entry #:sys-windows:windows-parameters:sm_cxborder nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxborder)
(push '5)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxborder #:sys-windows:windows-parameters:sm_cxborder)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxborder (struct . valeur) (ifn valeur (list 'vref struct 5) (list 'vset struct 5 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cyborder nsubr)
(entry #:sys-windows:windows-parameters:sm_cyborder nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cyborder)
(push '6)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cyborder #:sys-windows:windows-parameters:sm_cyborder)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cyborder (struct . valeur) (ifn valeur (list 'vref struct 6) (list 'vset struct 6 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxdlgframe nsubr)
(entry #:sys-windows:windows-parameters:sm_cxdlgframe nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxdlgframe)
(push '7)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxdlgframe #:sys-windows:windows-parameters:sm_cxdlgframe)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxdlgframe (struct . valeur) (ifn valeur (list 'vref struct 7) (list 'vset struct 7 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cydlgframe nsubr)
(entry #:sys-windows:windows-parameters:sm_cydlgframe nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cydlgframe)
(push '8)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cydlgframe #:sys-windows:windows-parameters:sm_cydlgframe)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cydlgframe (struct . valeur) (ifn valeur (list 'vref struct 8) (list 'vset struct 8 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cyvthumb nsubr)
(entry #:sys-windows:windows-parameters:sm_cyvthumb nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cyvthumb)
(push '9)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cyvthumb #:sys-windows:windows-parameters:sm_cyvthumb)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cyvthumb (struct . valeur) (ifn valeur (list 'vref struct 9) (list 'vset struct 9 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxhthumb nsubr)
(entry #:sys-windows:windows-parameters:sm_cxhthumb nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxhthumb)
(push '10)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxhthumb #:sys-windows:windows-parameters:sm_cxhthumb)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxhthumb (struct . valeur) (ifn valeur (list 'vref struct 10) (list 'vset struct 10 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxicon nsubr)
(entry #:sys-windows:windows-parameters:sm_cxicon nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxicon)
(push '11)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxicon #:sys-windows:windows-parameters:sm_cxicon)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxicon (struct . valeur) (ifn valeur (list 'vref struct 11) (list 'vset struct 11 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cyicon nsubr)
(entry #:sys-windows:windows-parameters:sm_cyicon nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cyicon)
(push '12)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cyicon #:sys-windows:windows-parameters:sm_cyicon)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cyicon (struct . valeur) (ifn valeur (list 'vref struct 12) (list 'vset struct 12 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxcursor nsubr)
(entry #:sys-windows:windows-parameters:sm_cxcursor nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxcursor)
(push '13)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxcursor #:sys-windows:windows-parameters:sm_cxcursor)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxcursor (struct . valeur) (ifn valeur (list 'vref struct 13) (list 'vset struct 13 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cycursor nsubr)
(entry #:sys-windows:windows-parameters:sm_cycursor nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cycursor)
(push '14)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cycursor #:sys-windows:windows-parameters:sm_cycursor)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cycursor (struct . valeur) (ifn valeur (list 'vref struct 14) (list 'vset struct 14 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cymenu nsubr)
(entry #:sys-windows:windows-parameters:sm_cymenu nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cymenu)
(push '15)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cymenu #:sys-windows:windows-parameters:sm_cymenu)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cymenu (struct . valeur) (ifn valeur (list 'vref struct 15) (list 'vset struct 15 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxfullscreen nsubr)
(entry #:sys-windows:windows-parameters:sm_cxfullscreen nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxfullscreen)
(push '16)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxfullscreen #:sys-windows:windows-parameters:sm_cxfullscreen)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxfullscreen (struct . valeur) (ifn valeur (list 'vref struct 16) (list 'vset struct 16 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cyfullscreen nsubr)
(entry #:sys-windows:windows-parameters:sm_cyfullscreen nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cyfullscreen)
(push '17)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cyfullscreen #:sys-windows:windows-parameters:sm_cyfullscreen)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cyfullscreen (struct . valeur) (ifn valeur (list 'vref struct 17) (list 'vset struct 17 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cykanjiwindow nsubr)
(entry #:sys-windows:windows-parameters:sm_cykanjiwindow nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cykanjiwindow)
(push '18)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cykanjiwindow #:sys-windows:windows-parameters:sm_cykanjiwindow)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cykanjiwindow (struct . valeur) (ifn valeur (list 'vref struct 18) (list 'vset struct 18 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_mousepresent nsubr)
(entry #:sys-windows:windows-parameters:sm_mousepresent nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_mousepresent)
(push '19)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_mousepresent #:sys-windows:windows-parameters:sm_mousepresent)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_mousepresent (struct . valeur) (ifn valeur (list 'vref struct 19) (list 'vset struct 19 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cyvscroll nsubr)
(entry #:sys-windows:windows-parameters:sm_cyvscroll nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cyvscroll)
(push '20)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cyvscroll #:sys-windows:windows-parameters:sm_cyvscroll)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cyvscroll (struct . valeur) (ifn valeur (list 'vref struct 20) (list 'vset struct 20 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxhscroll nsubr)
(entry #:sys-windows:windows-parameters:sm_cxhscroll nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxhscroll)
(push '21)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxhscroll #:sys-windows:windows-parameters:sm_cxhscroll)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxhscroll (struct . valeur) (ifn valeur (list 'vref struct 21) (list 'vset struct 21 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_debug nsubr)
(entry #:sys-windows:windows-parameters:sm_debug nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_debug)
(push '22)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_debug #:sys-windows:windows-parameters:sm_debug)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_debug (struct . valeur) (ifn valeur (list 'vref struct 22) (list 'vset struct 22 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_swapbutton nsubr)
(entry #:sys-windows:windows-parameters:sm_swapbutton nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_swapbutton)
(push '23)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_swapbutton #:sys-windows:windows-parameters:sm_swapbutton)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_swapbutton (struct . valeur) (ifn valeur (list 'vref struct 23) (list 'vset struct 23 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_reserved1 nsubr)
(entry #:sys-windows:windows-parameters:sm_reserved1 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_reserved1)
(push '24)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_reserved1 #:sys-windows:windows-parameters:sm_reserved1)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_reserved1 (struct . valeur) (ifn valeur (list 'vref struct 24) (list 'vset struct 24 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_reserved2 nsubr)
(entry #:sys-windows:windows-parameters:sm_reserved2 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_reserved2)
(push '25)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_reserved2 #:sys-windows:windows-parameters:sm_reserved2)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_reserved2 (struct . valeur) (ifn valeur (list 'vref struct 25) (list 'vset struct 25 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_reserved3 nsubr)
(entry #:sys-windows:windows-parameters:sm_reserved3 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_reserved3)
(push '26)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_reserved3 #:sys-windows:windows-parameters:sm_reserved3)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_reserved3 (struct . valeur) (ifn valeur (list 'vref struct 26) (list 'vset struct 26 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_reserved4 nsubr)
(entry #:sys-windows:windows-parameters:sm_reserved4 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_reserved4)
(push '27)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_reserved4 #:sys-windows:windows-parameters:sm_reserved4)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_reserved4 (struct . valeur) (ifn valeur (list 'vref struct 27) (list 'vset struct 27 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxmin nsubr)
(entry #:sys-windows:windows-parameters:sm_cxmin nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxmin)
(push '28)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxmin #:sys-windows:windows-parameters:sm_cxmin)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxmin (struct . valeur) (ifn valeur (list 'vref struct 28) (list 'vset struct 28 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cymin nsubr)
(entry #:sys-windows:windows-parameters:sm_cymin nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cymin)
(push '29)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cymin #:sys-windows:windows-parameters:sm_cymin)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cymin (struct . valeur) (ifn valeur (list 'vref struct 29) (list 'vset struct 29 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxsize nsubr)
(entry #:sys-windows:windows-parameters:sm_cxsize nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxsize)
(push '30)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxsize #:sys-windows:windows-parameters:sm_cxsize)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxsize (struct . valeur) (ifn valeur (list 'vref struct 30) (list 'vset struct 30 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cysize nsubr)
(entry #:sys-windows:windows-parameters:sm_cysize nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cysize)
(push '31)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cysize #:sys-windows:windows-parameters:sm_cysize)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cysize (struct . valeur) (ifn valeur (list 'vref struct 31) (list 'vset struct 31 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxframe nsubr)
(entry #:sys-windows:windows-parameters:sm_cxframe nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxframe)
(push '32)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxframe #:sys-windows:windows-parameters:sm_cxframe)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxframe (struct . valeur) (ifn valeur (list 'vref struct 32) (list 'vset struct 32 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cyframe nsubr)
(entry #:sys-windows:windows-parameters:sm_cyframe nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cyframe)
(push '33)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cyframe #:sys-windows:windows-parameters:sm_cyframe)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cyframe (struct . valeur) (ifn valeur (list 'vref struct 33) (list 'vset struct 33 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxmintrack nsubr)
(entry #:sys-windows:windows-parameters:sm_cxmintrack nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxmintrack)
(push '34)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxmintrack #:sys-windows:windows-parameters:sm_cxmintrack)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxmintrack (struct . valeur) (ifn valeur (list 'vref struct 34) (list 'vset struct 34 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cymintrack nsubr)
(entry #:sys-windows:windows-parameters:sm_cymintrack nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cymintrack)
(push '35)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cymintrack #:sys-windows:windows-parameters:sm_cymintrack)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cymintrack (struct . valeur) (ifn valeur (list 'vref struct 35) (list 'vset struct 35 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxdoubleclk nsubr)
(entry #:sys-windows:windows-parameters:sm_cxdoubleclk nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxdoubleclk)
(push '36)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxdoubleclk #:sys-windows:windows-parameters:sm_cxdoubleclk)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxdoubleclk (struct . valeur) (ifn valeur (list 'vref struct 36) (list 'vset struct 36 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cydoubleclk nsubr)
(entry #:sys-windows:windows-parameters:sm_cydoubleclk nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cydoubleclk)
(push '37)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cydoubleclk #:sys-windows:windows-parameters:sm_cydoubleclk)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cydoubleclk (struct . valeur) (ifn valeur (list 'vref struct 37) (list 'vset struct 37 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cxiconspacing nsubr)
(entry #:sys-windows:windows-parameters:sm_cxiconspacing nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cxiconspacing)
(push '38)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cxiconspacing #:sys-windows:windows-parameters:sm_cxiconspacing)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cxiconspacing (struct . valeur) (ifn valeur (list 'vref struct 38) (list 'vset struct 38 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cyiconspacing nsubr)
(entry #:sys-windows:windows-parameters:sm_cyiconspacing nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cyiconspacing)
(push '39)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cyiconspacing #:sys-windows:windows-parameters:sm_cyiconspacing)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cyiconspacing (struct . valeur) (ifn valeur (list 'vref struct 39) (list 'vset struct 39 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_menudropalignment nsubr)
(entry #:sys-windows:windows-parameters:sm_menudropalignment nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_menudropalignment)
(push '40)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_menudropalignment #:sys-windows:windows-parameters:sm_menudropalignment)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_menudropalignment (struct . valeur) (ifn valeur (list 'vref struct 40) (list 'vset struct 40 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_penwindows nsubr)
(entry #:sys-windows:windows-parameters:sm_penwindows nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_penwindows)
(push '41)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_penwindows #:sys-windows:windows-parameters:sm_penwindows)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_penwindows (struct . valeur) (ifn valeur (list 'vref struct 41) (list 'vset struct 41 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_dbcsenabled nsubr)
(entry #:sys-windows:windows-parameters:sm_dbcsenabled nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_dbcsenabled)
(push '42)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_dbcsenabled #:sys-windows:windows-parameters:sm_dbcsenabled)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_dbcsenabled (struct . valeur) (ifn valeur (list 'vref struct 42) (list 'vset struct 42 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sm_cmousebuttons nsubr)
(entry #:sys-windows:windows-parameters:sm_cmousebuttons nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sm_cmousebuttons)
(push '43)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sm_cmousebuttons #:sys-windows:windows-parameters:sm_cmousebuttons)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sm_cmousebuttons (struct . valeur) (ifn valeur (list 'vref struct 43) (list 'vset struct 43 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:system_fixed_width nsubr)
(entry #:sys-windows:windows-parameters:system_fixed_width nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:system_fixed_width)
(push '44)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:system_fixed_width #:sys-windows:windows-parameters:system_fixed_width)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:system_fixed_width (struct . valeur) (ifn valeur (list 'vref struct 44) (list 'vset struct 44 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:system_fixed_height nsubr)
(entry #:sys-windows:windows-parameters:system_fixed_height nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:system_fixed_height)
(push '45)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:system_fixed_height #:sys-windows:windows-parameters:system_fixed_height)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:system_fixed_height (struct . valeur) (ifn valeur (list 'vref struct 45) (list 'vset struct 45 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:horzsize nsubr)
(entry #:sys-windows:windows-parameters:horzsize nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:horzsize)
(push '46)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:horzsize #:sys-windows:windows-parameters:horzsize)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:horzsize (struct . valeur) (ifn valeur (list 'vref struct 46) (list 'vset struct 46 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:vertsize nsubr)
(entry #:sys-windows:windows-parameters:vertsize nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:vertsize)
(push '47)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:vertsize #:sys-windows:windows-parameters:vertsize)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:vertsize (struct . valeur) (ifn valeur (list 'vref struct 47) (list 'vset struct 47 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:horzres nsubr)
(entry #:sys-windows:windows-parameters:horzres nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:horzres)
(push '48)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:horzres #:sys-windows:windows-parameters:horzres)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:horzres (struct . valeur) (ifn valeur (list 'vref struct 48) (list 'vset struct 48 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:vertres nsubr)
(entry #:sys-windows:windows-parameters:vertres nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:vertres)
(push '49)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:vertres #:sys-windows:windows-parameters:vertres)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:vertres (struct . valeur) (ifn valeur (list 'vref struct 49) (list 'vset struct 49 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:bitspixel nsubr)
(entry #:sys-windows:windows-parameters:bitspixel nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:bitspixel)
(push '50)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:bitspixel #:sys-windows:windows-parameters:bitspixel)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:bitspixel (struct . valeur) (ifn valeur (list 'vref struct 50) (list 'vset struct 50 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:planes nsubr)
(entry #:sys-windows:windows-parameters:planes nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:planes)
(push '51)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:planes #:sys-windows:windows-parameters:planes)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:planes (struct . valeur) (ifn valeur (list 'vref struct 51) (list 'vset struct 51 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:aspectx nsubr)
(entry #:sys-windows:windows-parameters:aspectx nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:aspectx)
(push '52)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:aspectx #:sys-windows:windows-parameters:aspectx)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:aspectx (struct . valeur) (ifn valeur (list 'vref struct 52) (list 'vset struct 52 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:aspecty nsubr)
(entry #:sys-windows:windows-parameters:aspecty nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:aspecty)
(push '53)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:aspecty #:sys-windows:windows-parameters:aspecty)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:aspecty (struct . valeur) (ifn valeur (list 'vref struct 53) (list 'vset struct 53 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:aspectxy nsubr)
(entry #:sys-windows:windows-parameters:aspectxy nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:aspectxy)
(push '54)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:aspectxy #:sys-windows:windows-parameters:aspectxy)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:aspectxy (struct . valeur) (ifn valeur (list 'vref struct 54) (list 'vset struct 54 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:logpixelsx nsubr)
(entry #:sys-windows:windows-parameters:logpixelsx nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:logpixelsx)
(push '55)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:logpixelsx #:sys-windows:windows-parameters:logpixelsx)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:logpixelsx (struct . valeur) (ifn valeur (list 'vref struct 55) (list 'vset struct 55 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:logpixelsy nsubr)
(entry #:sys-windows:windows-parameters:logpixelsy nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:logpixelsy)
(push '56)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:logpixelsy #:sys-windows:windows-parameters:logpixelsy)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:logpixelsy (struct . valeur) (ifn valeur (list 'vref struct 56) (list 'vset struct 56 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:sizepalette nsubr)
(entry #:sys-windows:windows-parameters:sizepalette nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:sizepalette)
(push '57)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:sizepalette #:sys-windows:windows-parameters:sizepalette)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:sizepalette (struct . valeur) (ifn valeur (list 'vref struct 57) (list 'vset struct 57 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:colorres nsubr)
(entry #:sys-windows:windows-parameters:colorres nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:colorres)
(push '58)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:colorres #:sys-windows:windows-parameters:colorres)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:colorres (struct . valeur) (ifn valeur (list 'vref struct 58) (list 'vset struct 58 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:numreserved nsubr)
(entry #:sys-windows:windows-parameters:numreserved nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:numreserved)
(push '59)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:numreserved #:sys-windows:windows-parameters:numreserved)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:numreserved (struct . valeur) (ifn valeur (list 'vref struct 59) (list 'vset struct 59 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_scrollbar nsubr)
(entry #:sys-windows:windows-parameters:color_scrollbar nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_scrollbar)
(push '60)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_scrollbar #:sys-windows:windows-parameters:color_scrollbar)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_scrollbar (struct . valeur) (ifn valeur (list 'vref struct 60) (list 'vset struct 60 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_background nsubr)
(entry #:sys-windows:windows-parameters:color_background nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_background)
(push '61)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_background #:sys-windows:windows-parameters:color_background)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_background (struct . valeur) (ifn valeur (list 'vref struct 61) (list 'vset struct 61 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_activecaption nsubr)
(entry #:sys-windows:windows-parameters:color_activecaption nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_activecaption)
(push '62)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_activecaption #:sys-windows:windows-parameters:color_activecaption)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_activecaption (struct . valeur) (ifn valeur (list 'vref struct 62) (list 'vset struct 62 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_inactivecaption nsubr)
(entry #:sys-windows:windows-parameters:color_inactivecaption nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_inactivecaption)
(push '63)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_inactivecaption #:sys-windows:windows-parameters:color_inactivecaption)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_inactivecaption (struct . valeur) (ifn valeur (list 'vref struct 63) (list 'vset struct 63 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_menu nsubr)
(entry #:sys-windows:windows-parameters:color_menu nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_menu)
(push '64)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_menu #:sys-windows:windows-parameters:color_menu)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_menu (struct . valeur) (ifn valeur (list 'vref struct 64) (list 'vset struct 64 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_window nsubr)
(entry #:sys-windows:windows-parameters:color_window nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_window)
(push '65)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_window #:sys-windows:windows-parameters:color_window)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_window (struct . valeur) (ifn valeur (list 'vref struct 65) (list 'vset struct 65 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_windowframe nsubr)
(entry #:sys-windows:windows-parameters:color_windowframe nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_windowframe)
(push '66)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_windowframe #:sys-windows:windows-parameters:color_windowframe)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_windowframe (struct . valeur) (ifn valeur (list 'vref struct 66) (list 'vset struct 66 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_menutext nsubr)
(entry #:sys-windows:windows-parameters:color_menutext nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_menutext)
(push '67)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_menutext #:sys-windows:windows-parameters:color_menutext)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_menutext (struct . valeur) (ifn valeur (list 'vref struct 67) (list 'vset struct 67 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_windowtext nsubr)
(entry #:sys-windows:windows-parameters:color_windowtext nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_windowtext)
(push '68)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_windowtext #:sys-windows:windows-parameters:color_windowtext)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_windowtext (struct . valeur) (ifn valeur (list 'vref struct 68) (list 'vset struct 68 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_captiontext nsubr)
(entry #:sys-windows:windows-parameters:color_captiontext nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_captiontext)
(push '69)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_captiontext #:sys-windows:windows-parameters:color_captiontext)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_captiontext (struct . valeur) (ifn valeur (list 'vref struct 69) (list 'vset struct 69 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_activeborder nsubr)
(entry #:sys-windows:windows-parameters:color_activeborder nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_activeborder)
(push '70)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_activeborder #:sys-windows:windows-parameters:color_activeborder)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_activeborder (struct . valeur) (ifn valeur (list 'vref struct 70) (list 'vset struct 70 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_inactiveborder nsubr)
(entry #:sys-windows:windows-parameters:color_inactiveborder nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_inactiveborder)
(push '71)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_inactiveborder #:sys-windows:windows-parameters:color_inactiveborder)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_inactiveborder (struct . valeur) (ifn valeur (list 'vref struct 71) (list 'vset struct 71 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_appworkspace nsubr)
(entry #:sys-windows:windows-parameters:color_appworkspace nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_appworkspace)
(push '72)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_appworkspace #:sys-windows:windows-parameters:color_appworkspace)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_appworkspace (struct . valeur) (ifn valeur (list 'vref struct 72) (list 'vset struct 72 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_highlight nsubr)
(entry #:sys-windows:windows-parameters:color_highlight nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_highlight)
(push '73)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_highlight #:sys-windows:windows-parameters:color_highlight)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_highlight (struct . valeur) (ifn valeur (list 'vref struct 73) (list 'vset struct 73 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_highlighttext nsubr)
(entry #:sys-windows:windows-parameters:color_highlighttext nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_highlighttext)
(push '74)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_highlighttext #:sys-windows:windows-parameters:color_highlighttext)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_highlighttext (struct . valeur) (ifn valeur (list 'vref struct 74) (list 'vset struct 74 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_btnface nsubr)
(entry #:sys-windows:windows-parameters:color_btnface nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_btnface)
(push '75)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_btnface #:sys-windows:windows-parameters:color_btnface)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_btnface (struct . valeur) (ifn valeur (list 'vref struct 75) (list 'vset struct 75 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_btnshadow nsubr)
(entry #:sys-windows:windows-parameters:color_btnshadow nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_btnshadow)
(push '76)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_btnshadow #:sys-windows:windows-parameters:color_btnshadow)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_btnshadow (struct . valeur) (ifn valeur (list 'vref struct 76) (list 'vset struct 76 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_graytext nsubr)
(entry #:sys-windows:windows-parameters:color_graytext nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_graytext)
(push '77)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_graytext #:sys-windows:windows-parameters:color_graytext)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_graytext (struct . valeur) (ifn valeur (list 'vref struct 77) (list 'vset struct 77 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_btntext nsubr)
(entry #:sys-windows:windows-parameters:color_btntext nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_btntext)
(push '78)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_btntext #:sys-windows:windows-parameters:color_btntext)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_btntext (struct . valeur) (ifn valeur (list 'vref struct 78) (list 'vset struct 78 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_inactivecaptiontext nsubr)
(entry #:sys-windows:windows-parameters:color_inactivecaptiontext nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_inactivecaptiontext)
(push '79)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_inactivecaptiontext #:sys-windows:windows-parameters:color_inactivecaptiontext)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_inactivecaptiontext (struct . valeur) (ifn valeur (list 'vref struct 79) (list 'vset struct 79 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_btnhighlight nsubr)
(entry #:sys-windows:windows-parameters:color_btnhighlight nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_btnhighlight)
(push '80)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_btnhighlight #:sys-windows:windows-parameters:color_btnhighlight)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_btnhighlight (struct . valeur) (ifn valeur (list 'vref struct 80) (list 'vset struct 80 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_3ddkshadow nsubr)
(entry #:sys-windows:windows-parameters:color_3ddkshadow nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_3ddkshadow)
(push '81)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_3ddkshadow #:sys-windows:windows-parameters:color_3ddkshadow)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_3ddkshadow (struct . valeur) (ifn valeur (list 'vref struct 81) (list 'vset struct 81 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_3dlight nsubr)
(entry #:sys-windows:windows-parameters:color_3dlight nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_3dlight)
(push '82)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_3dlight #:sys-windows:windows-parameters:color_3dlight)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_3dlight (struct . valeur) (ifn valeur (list 'vref struct 82) (list 'vset struct 82 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_infotext nsubr)
(entry #:sys-windows:windows-parameters:color_infotext nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_infotext)
(push '83)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_infotext #:sys-windows:windows-parameters:color_infotext)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_infotext (struct . valeur) (ifn valeur (list 'vref struct 83) (list 'vset struct 83 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:color_infobk nsubr)
(entry #:sys-windows:windows-parameters:color_infobk nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:color_infobk)
(push '84)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:color_infobk #:sys-windows:windows-parameters:color_infobk)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:color_infobk (struct . valeur) (ifn valeur (list 'vref struct 84) (list 'vset struct 84 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_00 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_00 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_00)
(push '85)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_00 #:sys-windows:windows-parameters:palette_entry_00)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_00 (struct . valeur) (ifn valeur (list 'vref struct 85) (list 'vset struct 85 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_01 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_01 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_01)
(push '86)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_01 #:sys-windows:windows-parameters:palette_entry_01)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_01 (struct . valeur) (ifn valeur (list 'vref struct 86) (list 'vset struct 86 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_02 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_02 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_02)
(push '87)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_02 #:sys-windows:windows-parameters:palette_entry_02)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_02 (struct . valeur) (ifn valeur (list 'vref struct 87) (list 'vset struct 87 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_03 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_03 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_03)
(push '88)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_03 #:sys-windows:windows-parameters:palette_entry_03)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_03 (struct . valeur) (ifn valeur (list 'vref struct 88) (list 'vset struct 88 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_04 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_04 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_04)
(push '89)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_04 #:sys-windows:windows-parameters:palette_entry_04)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_04 (struct . valeur) (ifn valeur (list 'vref struct 89) (list 'vset struct 89 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_05 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_05 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_05)
(push '90)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_05 #:sys-windows:windows-parameters:palette_entry_05)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_05 (struct . valeur) (ifn valeur (list 'vref struct 90) (list 'vset struct 90 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_06 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_06 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_06)
(push '91)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_06 #:sys-windows:windows-parameters:palette_entry_06)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_06 (struct . valeur) (ifn valeur (list 'vref struct 91) (list 'vset struct 91 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_07 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_07 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_07)
(push '92)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_07 #:sys-windows:windows-parameters:palette_entry_07)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_07 (struct . valeur) (ifn valeur (list 'vref struct 92) (list 'vset struct 92 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_08 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_08 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_08)
(push '93)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_08 #:sys-windows:windows-parameters:palette_entry_08)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_08 (struct . valeur) (ifn valeur (list 'vref struct 93) (list 'vset struct 93 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_09 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_09 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_09)
(push '94)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_09 #:sys-windows:windows-parameters:palette_entry_09)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_09 (struct . valeur) (ifn valeur (list 'vref struct 94) (list 'vset struct 94 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_10 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_10 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_10)
(push '95)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_10 #:sys-windows:windows-parameters:palette_entry_10)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_10 (struct . valeur) (ifn valeur (list 'vref struct 95) (list 'vset struct 95 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_11 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_11 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_11)
(push '96)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_11 #:sys-windows:windows-parameters:palette_entry_11)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_11 (struct . valeur) (ifn valeur (list 'vref struct 96) (list 'vset struct 96 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_12 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_12 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_12)
(push '97)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_12 #:sys-windows:windows-parameters:palette_entry_12)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_12 (struct . valeur) (ifn valeur (list 'vref struct 97) (list 'vset struct 97 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_13 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_13 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_13)
(push '98)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_13 #:sys-windows:windows-parameters:palette_entry_13)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_13 (struct . valeur) (ifn valeur (list 'vref struct 98) (list 'vset struct 98 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_14 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_14 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_14)
(push '99)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_14 #:sys-windows:windows-parameters:palette_entry_14)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_14 (struct . valeur) (ifn valeur (list 'vref struct 99) (list 'vset struct 99 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_15 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_15 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_15)
(push '100)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_15 #:sys-windows:windows-parameters:palette_entry_15)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_15 (struct . valeur) (ifn valeur (list 'vref struct 100) (list 'vset struct 100 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_16 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_16 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_16)
(push '101)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_16 #:sys-windows:windows-parameters:palette_entry_16)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_16 (struct . valeur) (ifn valeur (list 'vref struct 101) (list 'vset struct 101 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_17 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_17 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_17)
(push '102)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_17 #:sys-windows:windows-parameters:palette_entry_17)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_17 (struct . valeur) (ifn valeur (list 'vref struct 102) (list 'vset struct 102 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_18 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_18 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_18)
(push '103)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_18 #:sys-windows:windows-parameters:palette_entry_18)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_18 (struct . valeur) (ifn valeur (list 'vref struct 103) (list 'vset struct 103 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:palette_entry_19 nsubr)
(entry #:sys-windows:windows-parameters:palette_entry_19 nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:palette_entry_19)
(push '104)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:palette_entry_19 #:sys-windows:windows-parameters:palette_entry_19)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:palette_entry_19 (struct . valeur) (ifn valeur (list 'vref struct 104) (list 'vset struct 104 (car valeur))))))
(loader'((fentry #:sys-windows:windows-parameters:work_area nsubr)
(entry #:sys-windows:windows-parameters:work_area nsubr)
(push a4)
(push (@ 101))
(push '#:sys-windows:windows-parameters:work_area)
(push '105)
(mov (& 3) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(mov (& 4) a4)
(plus '3 a4)
(xspmov a4 a4)
(push a4)
(push (& 5))
(mov '5 a4)
(jmp #:system:structaccess)
101
(eval ())
(pop a4)
(adjstk a4)
(return)
))
(if (featurep 'setf) (progn (defsetf #:sys-windows:windows-parameters:work_area #:sys-windows:windows-parameters:work_area)))
(if (featurep 'compiler) (progn (defmacro-open #:sys-windows:windows-parameters:work_area (struct . valeur) (ifn valeur (list 'vref struct 105) (list 'vset struct 105 (car valeur))))))
(loader'((entry #:display:windows:get-sys-color subr3)
(push a2)
(push a1)
(mov a3 a2)
(mov '#:sys-windows:windows-parameters a1)
(jcall symbol)
(push (@ 101))
(push a1)
(push (& 2))
(mov '2 a4)
(jmp funcall)
101
(eval ())
(mov a1 a2)
(mov (& 1) a1)
(adjstk '2)
(jmp windows_system_color)
))
(loader'((entry #:display:windows:get-pal-color subr3)
(push a2)
(push a1)
(mov a3 a2)
(mov '#:sys-windows:windows-parameters a1)
(jcall symbol)
(push (@ 101))
(push a1)
(push (& 2))
(mov '2 a4)
(jmp funcall)
101
(eval ())
(mov a1 a2)
(mov (& 1) a1)
(adjstk '2)
(jmp windows_palette_color)
))
(loader'((entry #:display:windows:get-work-area subr2)
(push a1)
(mov 'work_area a2)
(mov '#:sys-windows:windows-parameters a1)
(jcall symbol)
(push (@ 101))
(push a1)
(push (& 2))
(mov '2 a4)
(jmp funcall)
101
(eval ())
(adjstk '1)
(jmp windows_system_work_area)
))
(defvar #:display:windows:system-parameters (#:sys-windows:windows-parameters:make))
(loader'((fentry #:display:windows:system-parameters subr0)
(entry #:display:windows:system-parameters subr0)
(push (cvalq #:display:windows:system-parameters))
(push '-1)
(hgsize (& 1) a1)
(mov (& 1) a2)
(jcall windows_system_parameters)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_scrollbar a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_background a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_activecaption a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_inactivecaption a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_menu a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_window a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_windowframe a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_menutext a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_windowtext a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_captiontext a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_activeborder a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_inactiveborder a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_appworkspace a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_highlight a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_highlighttext a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_btnface a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_btnshadow a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_graytext a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_btntext a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_inactivecaptiontext a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_btnhighlight a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_3ddkshadow a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_3dlight a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_infotext a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'color_infobk a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-sys-color)
(mov '-1 (& 0))
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_00 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_01 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_02 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_03 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_04 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_05 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_06 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_07 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_08 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_09 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_10 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_11 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_12 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_13 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_14 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_15 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_16 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_17 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_18 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov (& 0) a1)
(jcall |1+|)
(mov a1 (& 0))
(mov 'palette_entry_19 a3)
(mov a1 a2)
(mov (& 1) a1)
(call #:display:windows:get-pal-color)
(mov 'work_area a2)
(mov (& 1) a1)
(call #:display:windows:get-work-area)
(mov (& 1) a1)
(adjstk '2)
(return)
))
(loader '((end)))
