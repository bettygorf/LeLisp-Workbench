(loader '((title |wincolor.lo|)))
(defvar #:sys-package:colon '#:display:windows)
(#:messages:put-message 'errnomorecolors 'french '"plus de couleurs disponibles" 'defmessage)
(#:messages:put-message 'errnomorecolors 'english '"no more colors available" 'defmessage)
'errnomorecolors
(if (not (boundp '#:display:windows:default-colors)) (progn (defvar #:display:windows:default-colors '(("black" 0 0 0) ("white" 32767 32767 32767) ("red" 32767 0 0) ("green" 0 32767 0) ("blue" 0 0 32767) ("yellow" 32767 32767 0) ("cyan" 0 32767 32767) ("magenta" 32767 0 32767) ("grey" 16384 16384 16384) ("lightgrey" 24576 24576 24576) ("wheat" 32767 32767 26112)))))
(loader'((fentry #:display:windows:make-color nsubr)
(entry #:display:windows:make-color nsubr)
(cnbeq a4 '5 101)
(mov '#:display:windows:make-color a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(mov (& 3) a4)
(lshift '-7 a4)
(push a4)
(mov (& 3) a4)
(lshift '-7 a4)
(push a4)
(mov (& 3) a4)
(lshift '-7 a4)
(push a4)
(push '0)
(mov '4 a4)
(jmp windows_make_color)
102
(eval ())
(push a1)
(cabne a1 '-1 104)
(push (@ 105))
(push (& 4))
(push (& 4))
(push (& 4))
(mov '3 a4)
(jmp list)
105
(eval ())
(mov a1 a3)
(mov 'errnomorecolors a2)
(mov '#:display:windows:make-color a1)
(jcall error)
104
(push (@ 106))
(push (& 6))
(push (& 6))
(push (& 3))
(push (& 7))
(push (& 7))
(push (& 7))
(mov '6 a4)
(bra #:display:windows:do-color)
106
(eval ())
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:make-mutable-color nsubr)
(entry #:display:windows:make-mutable-color nsubr)
(cnbeq a4 '5 101)
(mov '#:display:windows:make-mutable-color a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(mov (& 3) a4)
(lshift '-7 a4)
(push a4)
(mov (& 3) a4)
(lshift '-7 a4)
(push a4)
(mov (& 3) a4)
(lshift '-7 a4)
(push a4)
(push '1)
(mov '4 a4)
(jmp windows_make_color)
102
(eval ())
(push a1)
(cabne a1 '-1 104)
(push (@ 105))
(push (& 4))
(push (& 4))
(push (& 4))
(mov '3 a4)
(jmp list)
105
(eval ())
(mov a1 a3)
(mov 'errnomorecolors a2)
(mov '#:display:windows:make-mutable-color a1)
(jcall error)
104
(push (@ 106))
(push (& 6))
(push (& 6))
(push (& 3))
(push (& 7))
(push (& 7))
(push (& 7))
(mov '6 a4)
(bra #:display:windows:do-color)
106
(eval ())
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:make-named-color subr3)
(entry #:display:windows:make-named-color subr3)
(push a3)
(push a2)
(push a1)
(push nil)
(push nil)
(push nil)
(push (cvalq #:display:windows:default-colors))
(push nil)
103
(bfcons (& 1) 104)
(mov (& 1) a4)
(mov (cdr a4) (& 1))
(push (car a4))
(mov (& 0) a1)
(mov (& 8) a2)
(mov (car a1) a1)
(jcall equal)
(btnil a1 105)
(mov (& 0) a4)
(mov (cdr a4) a4)
(mov (car a4) (& 5))
(mov (& 0) a3)
(mov (cdr a3) a3)
(mov (cdr a3) a3)
(mov (car a3) (& 4))
(mov (& 0) a2)
(mov (cdr a2) a2)
(mov (cdr a2) a2)
(mov (cdr a2) a2)
(mov (car a2) (& 3))
(mov (car a2) a4)
(bra 106)
105
(mov nil a4)
106
(adjstk '1)
(mov a4 (& 0))
(bfnil a4 104)
(bra 103)
104
(mov (& 0) a4)
(adjstk '2)
(btnil a4 101)
(push (@ 107))
(push (& 4))
(push (& 6))
(push (& 5))
(push (& 5))
(push (& 5))
(mov '5 a4)
(jmp #:display:windows:make-color)
107
(eval ())
(adjstk '6)
(return)
101
(mov (& 5) a3)
(mov '"not named-color" a2)
(mov '#:display:windows:make-named-color a1)
(adjstk '6)
(jmp error)
))
(loader'((entry #:display:windows:do-color nsubr)
(hpxmov (& 5) '8 a4)
(btnil a4 102)
(hpxmov (& 5) '8 a1)
(hpxmov a1 '8 a1)
(hpxmov a1 '1 a1)
(jcall windows_select_palette)
102
(hpxmov (& 5) '17 a4)
(push a4)
(push nil)
104
(bfcons (& 1) 105)
(mov (& 1) a4)
(mov (cdr a4) (& 1))
(push (car a4))
(hpxmov (& 0) '6 a4)
(cabne a4 (& 6) 106)
(mov (& 0) a4)
(bra 107)
106
(mov nil a4)
107
(adjstk '1)
(mov a4 (& 0))
(bfnil a4 105)
(bra 104)
105
(mov (& 0) a1)
(adjstk '2)
(bfnil a1 103)
(hpmovx (& 2) (& 4) '1)
(hpmovx (& 1) (& 4) '2)
(hpmovx (& 0) (& 4) '3)
(hpmovx (& 3) (& 4) '6)
(mov (& 4) a1)
103
(adjstk '6)
(return)
))
(loader'((fentry #:display:windows:kill-color subr2)
(entry #:display:windows:kill-color subr2)
(hpxmov a1 '37 a4)
(cnble a4 '1 101)
(hpxmov a2 '6 a1)
(jmp windows_kill_color)
101
(mov nil a1)
(return)
))
(loader'((fentry #:display:windows:red-component subr3)
(entry #:display:windows:red-component subr3)
(push (@ 101))
(hpxmov a2 '6 a4)
(push a4)
(lshift '-7 a3)
(push a3)
(hpxmov a2 '2 a4)
(lshift '-7 a4)
(push a4)
(hpxmov a2 '3 a4)
(lshift '-7 a4)
(push a4)
(push '0)
(mov '5 a4)
(jmp windows_color_component)
101
(eval ())
(return)
))
(loader'((fentry #:display:windows:green-component subr3)
(entry #:display:windows:green-component subr3)
(push (@ 101))
(hpxmov a2 '6 a4)
(push a4)
(hpxmov a2 '1 a4)
(lshift '-7 a4)
(push a4)
(lshift '-7 a3)
(push a3)
(hpxmov a2 '3 a4)
(lshift '-7 a4)
(push a4)
(push '1)
(mov '5 a4)
(jmp windows_color_component)
101
(eval ())
(return)
))
(loader'((fentry #:display:windows:blue-component subr3)
(entry #:display:windows:blue-component subr3)
(push (@ 101))
(hpxmov a2 '6 a4)
(push a4)
(hpxmov a2 '1 a4)
(lshift '-7 a4)
(push a4)
(hpxmov a2 '2 a4)
(lshift '-7 a4)
(push a4)
(lshift '-7 a3)
(push a3)
(push '2)
(mov '5 a4)
(jmp windows_color_component)
101
(eval ())
(return)
))
(loader'((fentry #:display:windows:name-to-rgb subr3)
(entry #:display:windows:name-to-rgb subr3)
(push a3)
(push a2)
(push (cvalq #:display:windows:default-colors))
(push nil)
101
(bfcons (& 1) 102)
(mov (& 1) a4)
(mov (cdr a4) (& 1))
(push (car a4))
(mov (& 0) a1)
(mov (& 3) a2)
(mov (car a1) a1)
(jcall equal)
(btnil a1 103)
(mov (& 0) a4)
(mov (cdr a4) a4)
(hpmovx (car a4) (& 4) '0)
(mov (& 0) a3)
(mov (cdr a3) a3)
(mov (cdr a3) a3)
(hpmovx (car a3) (& 4) '1)
(mov (& 0) a2)
(mov (cdr a2) a2)
(mov (cdr a2) a2)
(mov (cdr a2) a2)
(hpmovx (car a2) (& 4) '2)
(mov (& 4) a4)
(bra 104)
103
(mov nil a4)
104
(adjstk '1)
(mov a4 (& 0))
(bfnil a4 102)
(bra 101)
102
(mov (& 0) a1)
(adjstk '4)
(return)
))
(loader'((fentry #:display:windows:get-rgb-values subr3)
(entry #:display:windows:get-rgb-values subr3)
(push a3)
(push a2)
(hpxmov a1 '17 a4)
(push a4)
(push nil)
101
(bfcons (& 1) 102)
(mov (& 1) a4)
(mov (cdr a4) (& 1))
(push (car a4))
(push (@ 105))
(push 'extend)
(push (& 2))
(mov '2 a4)
(jmp send)
105
(eval ())
(cabne a1 (& 3) 103)
(mov (& 0) a4)
(bra 104)
103
(mov nil a4)
104
(adjstk '1)
(mov a4 (& 0))
(bfnil a4 102)
(bra 101)
102
(mov (& 0) a4)
(adjstk '2)
(hpxmov a4 '1 a3)
(hpmovx a3 (& 1) '0)
(btnil a3 106)
(hpxmov a4 '2 a3)
(hpmovx a3 (& 1) '1)
(hpxmov a4 '3 a3)
(hpmovx a3 (& 1) '2)
(mov (& 1) a1)
(adjstk '2)
(return)
106
(mov nil a1)
(adjstk '2)
(return)
))
(loader '((end)))
