(loader '((title |testdll.lo|)))
(if (not (>= (version) 15.2)) (progn (error 'load 'erricf 'testdll)))
(defvar testdll (catenate #:system:system-directory "testdll.dll"))
(loader'((fentry dllfloat subr2)
(entry dllfloat subr2)
(push a2)
(push a1)
(btvect a1 102)
(mov a1 a3)
(mov 'errvec a2)
(mov 'dllfloat a1)
(jcall error)
102
(btfix (& 1) 104)
(mov (& 1) a3)
(mov 'errnia a2)
(mov 'dllfloat a1)
(jcall error)
104
(push (@ 105))
(push (cvalq InvokeIndirectFunction))
(push '1)
(mov (eval (kwote (getinlib 'dllfloat 'testdll '(floatvector fix)))) a1)
(jcall vag)
(push a1)
(push '0)
(push (& 5))
(push '8)
(push (& 8))
(push '1)
(mov '8 a4)
(jmp callextern)
105
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry dllstring subr2)
(entry dllstring subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov 'dllstring a1)
(jcall error)
102
(btfix (& 1) 104)
(mov (& 1) a3)
(mov 'errnia a2)
(mov 'dllstring a1)
(jcall error)
104
(push (@ 105))
(push (cvalq InvokeIndirectFunction))
(push '1)
(mov (eval (kwote (getinlib 'dllstring 'testdll '(string fix)))) a1)
(jcall vag)
(push a1)
(push '0)
(push (& 5))
(push '3)
(push (& 8))
(push '1)
(mov '8 a4)
(jmp callextern)
105
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry dllabs subr1)
(entry dllabs subr1)
(push a1)
(btfix a1 102)
(mov a1 a3)
(mov 'errnia a2)
(mov 'dllabs a1)
(jcall error)
102
(push (@ 103))
(push (cvalq InvokeIndirectFunction))
(push '1)
(mov (eval (kwote (getinlib 'dllabs 'testdll '(fix)))) a1)
(jcall vag)
(push a1)
(push '0)
(push (& 5))
(push '1)
(mov '6 a4)
(jmp callextern)
103
(eval ())
(adjstk '1)
(return)
))
(loader '((end)))
