(loader '((title |x11menu.lo|)))
(defvar #:sys-package:colon '#:display:x11)
(loader'((entry menuwindow nsubr)
(jcall #:image:rectangle:window:menu-window:make)
(hpmovx (& 4) a1 '0)
(hpmovx (& 3) a1 '1)
(hpmovx (& 2) a1 '2)
(hpmovx (& 1) a1 '3)
(hpmovx (& 0) a1 '4)
(hpmovx '2 a1 '5)
(hpmovx '1 a1 '6)
(hpmovx '(save-under override-redirect) a1 '16)
(adjstk '5)
(return)
))
(loader'((fentry #:display:x11:create-menu subr2)
(entry #:display:x11:create-menu subr2)
(push a2)
(push a2)
(jcall #:x11:menu:make)
(pop a4)
(hpmovx a1 a4 '3)
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:display:x11:kill-menu subr2)
(entry #:display:x11:kill-menu subr2)
(mov nil a1)
(return)
))
(loader'((fentry #:display:x11:activate-menu nsubr)
(entry #:display:x11:activate-menu nsubr)
(cnbeq a4 '4 101)
(mov '#:display:x11:activate-menu a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(mov '0 a4)
(jmp current-display)
102
(eval ())
(push a1)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(push (@ 105))
(push (& 8))
(mov '1 a4)
(jmp current-display)
105
(eval ())
(mov (& 4) a3)
(mov (& 5) a2)
(mov (& 6) a1)
(call #:display:x11:draw-menu)
(mov (& 6) a1)
(call #:display:x11:follow-mouse)
(push nil)
(push nil)
(push nil)
106
(jcall eventp)
(btnil a1 111)
(push (@ 108))
(mov '0 a4)
(jmp read-event)
108
(eval ())
(mov a1 (& 2))
(jcall #:event:make)
(mov a1 (& 1))
(push (@ 109))
(push a1)
(push '0)
(push (& 5))
(push '0)
(mov '4 a4)
(jmp bltvector)
109
(eval ())
(push (& 1))
(push (@ 110))
(push (& 2))
(mov (& 2) a1)
(jcall ncons)
(push a1)
(mov '2 a4)
(jmp nconc)
110
(eval ())
(adjstk '1)
(mov a1 (& 0))
(bra 106)
111
(btnil (& 0) 112)
(push (@ 113))
(mov (& 1) a4)
(mov (cdr a4) (& 1))
(push (car a4))
(mov '1 a4)
(jmp add-event)
113
(eval ())
(bra 111)
112
(adjstk '3)
(push nil)
(push nil)
(push nil)
(push nil)
(hpxmov (& 10) '3 a4)
(hpxmov a4 '0 a4)
(mov a4 (& 3))
(btnil a4 114)
(hpxmov (& 10) '3 a3)
(hpxmov a3 '1 a3)
(mov a3 (& 2))
(btnil a3 114)
(cnblt a4 '0 114)
(cnblt a3 '0 114)
(hpxmov (& 10) '1 a2)
(mov a4 a1)
(jcall nth)
(mov a1 (& 1))
(btnil a1 114)
(btnil a1 114)
(hpxmov a1 '6 a2)
(mov (& 2) a1)
(jcall nth)
(mov a1 (& 0))
(btnil a1 114)
(btnil a1 114)
(hpxmov a1 '5 a4)
(cabeq '0 a4 114)
(hpxmov (& 0) '6 a1)
(bra 115)
114
(mov nil a1)
115
(adjstk '4)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(push (@ 116))
(push (& 4))
(mov '1 a4)
(jmp current-display)
116
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(adjstk '5)
(return)
))
(loader'((fentry #:display:x11:menu-insert-item nsubr)
(entry #:display:x11:menu-insert-item nsubr)
(cnbeq a4 '7 101)
(mov '#:display:x11:menu-insert-item a1)
(mov '7 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '7)
(return)
))
(loader'((fentry #:display:x11:menu-insert-item-list nsubr)
(entry #:display:x11:menu-insert-item-list nsubr)
(cnbeq a4 '5 101)
(mov '#:display:x11:menu-insert-item-list a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '5)
(return)
))
(loader'((fentry #:display:x11:menu-delete-item-list subr3)
(entry #:display:x11:menu-delete-item-list subr3)
(mov nil a1)
(return)
))
(loader'((fentry #:display:x11:menu-delete-item nsubr)
(entry #:display:x11:menu-delete-item nsubr)
(cnbeq a4 '4 101)
(mov '#:display:x11:menu-delete-item a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '4)
(return)
))
(loader'((fentry #:display:x11:menu-modify-item-list nsubr)
(entry #:display:x11:menu-modify-item-list nsubr)
(cnbeq a4 '5 101)
(mov '#:display:x11:menu-modify-item-list a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '5)
(return)
))
(loader'((fentry #:display:x11:menu-modify-item nsubr)
(entry #:display:x11:menu-modify-item nsubr)
(cnbeq a4 '7 101)
(mov '#:display:x11:menu-modify-item a1)
(mov '7 a2)
(jmp #:llcp:errwna)
101
(mov nil a1)
(adjstk '7)
(return)
))
(loader'((entry #:display:x11:itemlist:width subr1)
(hpxmov a1 '6 a4)
(push '0)
(push nil)
(push a4)
101
(bfcons (& 0) 102)
(mov (& 0) a1)
(mov (cdr a1) (& 0))
(hpxmov (car a1) '4 a1)
(call width-string)
(mov a1 (& 1))
(cnble a1 (& 2) 101)
(mov a1 (& 2))
(bra 101)
102
(mov (& 2) a1)
(adjstk '3)
(return)
))
(loader'((entry #:display:x11:height subr1)
(push a1)
(jcall font-height)
(push a1)
(hpxmov (& 1) '1 a4)
(push '0)
(push a4)
101
(bfcons (& 0) 102)
(mov (& 0) a1)
(mov (cdr a1) (& 0))
(hpxmov (car a1) '6 a1)
(jcall length)
(mov a1 a2)
(mov (& 1) a1)
(jcall imax)
(mov a1 (& 1))
(bra 101)
102
(hpxmov (& 3) '0 a4)
(btnil a4 104)
(mov (& 1) a4)
(plus '1 a4)
(mov a4 (& 1))
104
(mov (& 1) a4)
(adjstk '2)
(pop a3)
(times a4 a3)
(mov a3 a1)
(adjstk '1)
(return)
))
(loader'((entry #:display:x11:width subr1)
(push a1)
(hpxmov a1 '0 a4)
(btnil a4 101)
(hpxmov a1 '0 a1)
(call width-string)
(mov a1 a4)
(bra 102)
101
(mov '0 a4)
102
(hpxmov (& 0) '1 a3)
(push '0)
(push a3)
(push a4)
103
(bfcons (& 1) 104)
(mov (& 1) a1)
(mov (cdr a1) (& 1))
(mov (car a1) a1)
(call #:display:x11:itemlist:width)
(mov (& 2) a4)
(plus a1 a4)
(mov a4 (& 2))
(bra 103)
104
(mov (& 0) a2)
(mov (& 2) a1)
(adjstk '4)
(jmp imax)
))
(loader'((entry width-string subr1)
(hgsize a1 a3)
(mov '0 a2)
(jmp width-substring)
))
(loader'((entry #:display:x11:redraw-menu subr2)
(push a2)
(push a1)
(jcall x-base-space)
(push a1)
(jcall font-ascent)
(push a1)
(push (@ 101))
(mov '0 a4)
(jmp current-window)
101
(eval ())
(push a1)
(push (@ 102))
(push dlink)
(push prot)
(stack dlink)
(push (@ 104))
(hpxmov (& 7) '3 a4)
(hpxmov a4 '2 a4)
(push a4)
(mov '1 a4)
(jmp current-window)
104
(eval ())
(btnil (& 7) 106)
(push (@ 107))
(hpxmov (& 8) '5 a4)
(push a4)
(hpxmov (& 9) '6 a4)
(push a4)
(hpxmov (& 10) '7 a4)
(push a4)
(hpxmov (& 11) '8 a4)
(push a4)
(mov '4 a4)
(jmp current-clip)
107
(eval ())
106
(jcall clear-graph-env)
(hpxmov (& 6) '0 a4)
(bfnil a4 108)
(bra 109)
108
(mov (& 6) a1)
(call #:display:x11:width)
(push a1)
(hpxmov (& 7) '0 a1)
(call width-string)
(pop a4)
(diff a1 a4)
(quo '2 a4)
(hpxmov (& 6) '0 a3)
(push (@ 110))
(mov (& 6) a2)
(plus a4 a2)
(push a2)
(push (& 6))
(push a3)
(push '0)
(hgsize a3 a2)
(push a2)
(mov '5 a4)
(jmp draw-substring)
110
(eval ())
(push (@ 111))
(push (& 6))
(push '0)
(mov (& 9) a1)
(call #:display:x11:width)
(push a1)
(jcall font-height)
(push a1)
(mov '4 a4)
(jmp highlight-rectangle)
111
(eval ())
(jcall font-height)
(mov (& 4) a4)
(plus a1 a4)
(mov a4 (& 4))
109
(hpxmov (& 6) '1 a4)
(push a4)
112
(bfcons (& 0) 113)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(hpxmov (& 0) '6 a4)
(push a4)
114
(bfcons (& 0) 115)
(mov (& 0) a4)
(mov (cdr a4) (& 0))
(push (car a4))
(hpxmov (& 0) '4 a4)
(push (@ 116))
(push (& 10))
(push (& 10))
(push a4)
(push '0)
(hgsize a4 a3)
(push a3)
(mov '5 a4)
(jmp draw-substring)
116
(eval ())
(jcall font-height)
(mov (& 8) a4)
(plus a1 a4)
(mov a4 (& 8))
(adjstk '1)
(bra 114)
115
(adjstk '1)
(jcall font-ascent)
(mov a1 (& 6))
(mov (& 0) a1)
(call #:display:x11:itemlist:width)
(mov (& 7) a4)
(plus a1 a4)
(mov a4 (& 7))
(adjstk '1)
(bra 112)
113
(adjstk '1)
(hpxmov (& 6) '3 a4)
(hpxmov a4 '0 a4)
(bffix a4 118)
(hpxmov (& 6) '3 a4)
(hpxmov a4 '1 a4)
(bffix a4 118)
(hpxmov (& 6) '3 a2)
(hpxmov a2 '0 a2)
(hpxmov (& 6) '3 a3)
(hpxmov a3 '1 a3)
(mov (& 6) a1)
(call #:display:x11:invert-item)
118
(btnil (& 7) 119)
(push (@ 121))
(push '0)
(push '0)
(push (@ 122))
(mov '0 a4)
(jmp current-window)
122
(eval ())
(hpxmov a1 '2 a4)
(push a4)
(push (@ 123))
(mov '0 a4)
(jmp current-window)
123
(eval ())
(hpxmov a1 '3 a4)
(push a4)
(mov '4 a4)
(jmp current-clip)
121
(eval ())
(bra 120)
119
(mov nil a1)
120
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 103) a3)
102
(push a3)
(push a2)
(push (@ 124))
(push (& 4))
(mov '1 a4)
(jmp current-window)
124
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
103
(eval ())
(adjstk '5)
(return)
))
(loader'((entry #:display:x11:find-list subr2)
(hpxmov a1 '1 a1)
(mov '0 a3)
(bra #:display:x11:find-list1)
))
(loader'((entry #:display:x11:find-list1 subr3)
(push a3)
(push a2)
(push a1)
(cnbge a2 '0 101)
(mov nil a1)
(adjstk '3)
(return)
101
(bfnil a1 103)
(mov nil a1)
(adjstk '3)
(return)
103
(push a2)
(mov (car a1) a1)
(call #:display:x11:itemlist:width)
(pop a4)
(cnbge a4 a1 105)
(mov (& 2) a1)
(adjstk '3)
(return)
105
(mov (& 0) a1)
(push (cdr a1))
(mov (car a1) a1)
(call #:display:x11:itemlist:width)
(mov (& 2) a4)
(diff a1 a4)
(mov (& 3) a3)
(plus '1 a3)
(mov a4 a2)
(pop a1)
(adjstk '3)
(bra #:display:x11:find-list1)
))
(loader'((entry #:display:x11:itemlist-x subr2)
(push a2)
(hpxmov a1 '1 a2)
(pop a1)
(bra #:display:x11:itemlist-x1)
))
(loader'((entry #:display:x11:itemlist-x1 subr2)
(push a2)
(push a1)
(cabne a1 '0 101)
(mov '0 a1)
(adjstk '2)
(return)
101
(mov (car a2) a1)
(call #:display:x11:itemlist:width)
(push a1)
(mov (& 1) a4)
(diff '1 a4)
(mov (& 2) a2)
(mov (cdr a2) a2)
(mov a4 a1)
(call #:display:x11:itemlist-x1)
(pop a4)
(plus a1 a4)
(mov a4 a1)
(adjstk '2)
(return)
))
(loader'((entry #:display:x11:invert-item subr3)
(push a3)
(push a2)
(push a1)
(btnil a3 101)
(cnblt a3 '0 101)
(push nil)
(push nil)
(btnil a2 103)
(btnil a3 103)
(push a2)
(hpxmov a1 '1 a2)
(pop a1)
(jcall nth)
(mov a1 (& 1))
(btnil a1 103)
(hpxmov a1 '5 a4)
(cabeq '0 a4 103)
(hpxmov a1 '6 a2)
(mov (& 4) a1)
(jcall nth)
(mov a1 (& 0))
(btnil a1 103)
(hpxmov a1 '5 a4)
(cabeq '0 a4 103)
(mov (& 3) a2)
(mov (& 2) a1)
(call #:display:x11:itemlist-x)
(push a1)
(hpxmov (& 3) '0 a4)
(btnil a4 105)
(mov (& 5) a4)
(plus '1 a4)
(bra 106)
105
(mov (& 5) a4)
106
(push a4)
(jcall font-height)
(pop a4)
(times a1 a4)
(push a4)
(mov (& 3) a1)
(call #:display:x11:itemlist:width)
(push a1)
(jcall font-height)
(push (@ 107))
(push (& 3))
(push (& 3))
(push (& 3))
(push a1)
(mov '4 a4)
(jmp highlight-rectangle)
107
(eval ())
(hpxmov (& 5) '3 a4)
(hpmovx (& 6) a4 '0)
(hpxmov (& 5) '3 a4)
(hpmovx (& 7) a4 '1)
(mov (& 7) a1)
(adjstk '8)
(return)
103
(mov nil a1)
(adjstk '5)
(return)
101
(mov nil a1)
(adjstk '3)
(return)
))
(loader'((entry #:display:x11:next-position subr2)
(push a2)
(push a1)
(push (@ 101))
(push 'moved)
(push dlink)
(push tag)
(stack dlink)
102
(push (@ 104))
(push (& 6))
(mov '1 a4)
(jmp read-event)
104
(eval ())
(hpxmov (& 5) '0 a1)
(cabne a1 'repaint-window-event 106)
(hpxmov (& 4) '3 a4)
(hpxmov a4 '2 a4)
(hpxmov (& 5) '1 a3)
(cabne a4 a3 102)
(mov (& 5) a2)
(mov (& 4) a1)
(call #:display:x11:redraw-menu)
(bra 102)
106
(cabne a1 'up-event 109)
(mov 't a1)
(mov 'moved a2)
(jmp #:llcp:exit)
109
(cabne a1 'drag-event 102)
(mov nil a1)
(mov 'moved a2)
(jmp #:llcp:exit)
103
(mov nil a1)
(mov (& 1) dlink)
(adjstk '4)
101
(eval ())
(adjstk '2)
(return)
))
(defvar #:display:x11:ev (#:event:make))
(loader'((entry #:display:x11:follow-mouse subr1)
(push a1)
(hpxmov a1 '3 a1)
(hpxmov a1 '2 a1)
(jcall grab-event)
(push (@ 101))
(mov '0 a4)
(jmp bitmap-sync)
101
(eval ())
(push (@ 102))
(mov '0 a4)
(jmp current-window)
102
(eval ())
(push a1)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(push (@ 105))
(hpxmov (& 5) '3 a4)
(hpxmov a4 '2 a4)
(push a4)
(mov '1 a4)
(jmp current-window)
105
(eval ())
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
(push nil)
106
(mov (cvalq #:display:x11:ev) a2)
(mov (& 10) a1)
(call #:display:x11:next-position)
(bfnil a1 107)
(hpxmov (cvalq #:display:x11:ev) '6 a4)
(cnbge a4 '0 108)
(mov '-1 a4)
(bra 109)
108
(hpxmov (cvalq #:display:x11:ev) '6 a4)
(push a4)
(jcall font-height)
(pop a4)
(quo a1 a4)
109
(mov a4 (& 2))
(hpxmov (cvalq #:display:x11:ev) '5 a2)
(mov (& 10) a1)
(call #:display:x11:find-list)
(mov a1 (& 3))
(hpxmov (& 10) '0 a4)
(btnil a4 111)
(mov (& 2) a4)
(diff '1 a4)
(mov a4 (& 2))
111
(cabne a1 (& 5) 114)
(cabeq (& 2) (& 4) 106)
114
(mov (& 4) a3)
(mov (& 5) a2)
(mov (& 10) a1)
(call #:display:x11:invert-item)
(mov (& 3) (& 5))
(mov (& 2) (& 4))
(mov (& 4) a3)
(mov (& 5) a2)
(mov (& 10) a1)
(call #:display:x11:invert-item)
(bra 106)
107
(hpxmov (& 10) '3 a4)
(hpmovx (& 5) a4 '0)
(hpxmov (& 10) '3 a4)
(hpmovx (& 4) a4 '1)
(mov (& 4) a1)
(adjstk '6)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(push (@ 115))
(push (& 4))
(mov '1 a4)
(jmp current-window)
115
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(adjstk '1)
(jcall ungrab-event)
(hpxmov (& 0) '3 a1)
(hpxmov a1 '2 a1)
(jcall kill-window)
(push (@ 116))
(mov '0 a4)
(jmp bitmap-sync)
116
(eval ())
(hpxmov (& 0) '3 a4)
(hpmovx nil a4 '2)
(mov nil a1)
(adjstk '1)
(return)
))
(loader'((entry #:display:x11:draw-menu subr3)
(push a3)
(push a2)
(push a1)
(push (@ 101))
(call #:display:x11:width)
(quo '2 a1)
(plus '1 a1)
(push a1)
(push (@ 102))
(push (& 4))
(push (@ 103))
(mov '0 a4)
(jmp bitxmax)
103
(eval ())
(diff '3 a1)
(push a1)
(mov (& 5) a1)
(call #:display:x11:width)
(quo '2 a1)
(pop a4)
(diff a1 a4)
(push a4)
(mov '2 a4)
(jmp min)
102
(eval ())
(push a1)
(mov '2 a4)
(jmp max)
101
(eval ())
(mov a1 (& 1))
(push (@ 104))
(push '1)
(push (@ 105))
(push (& 5))
(push (@ 106))
(mov '0 a4)
(jmp bitymax)
106
(eval ())
(diff '3 a1)
(push a1)
(mov (& 5) a1)
(call #:display:x11:height)
(pop a4)
(diff a1 a4)
(push a4)
(mov '2 a4)
(jmp min)
105
(eval ())
(push a1)
(mov '2 a4)
(jmp max)
104
(eval ())
(mov a1 (& 2))
(hpxmov (& 0) '3 a4)
(hpmovx nil a4 '0)
(hpxmov (& 0) '3 a4)
(hpmovx nil a4 '1)
(hpxmov (& 0) '3 a4)
(push a4)
(push (@ 107))
(mov (& 2) a1)
(call #:display:x11:width)
(quo '2 a1)
(mov (& 3) a4)
(diff a1 a4)
(push a4)
(push (& 5))
(mov (& 4) a1)
(call #:display:x11:width)
(push a1)
(mov (& 5) a1)
(call #:display:x11:height)
(push a1)
(hpxmov (& 6) '0 a3)
(push a3)
(mov '5 a4)
(bra menuwindow)
107
(eval ())
(pop a4)
(hpmovx a1 a4 '2)
(mov (& 0) a1)
(call #:display:x11:initialise-menu)
(hpxmov (& 0) '3 a1)
(hpxmov a1 '2 a1)
(jcall make-window)
(push (@ 108))
(mov '0 a4)
(jmp current-font)
108
(eval ())
(push a1)
(push (@ 109))
(mov '0 a4)
(jmp current-window)
109
(eval ())
(push a1)
(push (@ 110))
(push dlink)
(push prot)
(stack dlink)
(push (@ 112))
(hpxmov (& 6) '3 a4)
(hpxmov a4 '2 a4)
(push a4)
(mov '1 a4)
(jmp current-window)
112
(eval ())
(push (@ 115))
(mov '0 a4)
(jmp current-window)
115
(eval ())
(btnil a1 113)
(btnil (& 4) 113)
(push (@ 116))
(push (& 5))
(mov '1 a4)
(jmp current-font)
116
(eval ())
(bra 114)
113
(mov nil a1)
114
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 111) a3)
110
(push a3)
(push a2)
(push (@ 117))
(push (& 4))
(mov '1 a4)
(jmp current-window)
117
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
111
(eval ())
(adjstk '5)
(return)
))
(loader'((entry #:display:x11:initialise-menu subr1)
(mov 't a1)
(return)
))
(loader '((end)))
