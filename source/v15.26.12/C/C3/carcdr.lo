(loader '(
(listext (cddddr cdddar cddadr cddaar cdaddr cdadar cdaadr cdaaar cadddr caddar cadadr cadaar caaddr caadar caaadr caaaar cdddr cddar cdadr cdaar caddr cadar caadr caaar cddr cdar cadr ca2r fcdr fcar ini_cad errnla inisymb evalan evalt))
(entry startmodule subr0)
	(title carcdr)
	(xrefi llinit fcons)
	(xrefi llinit bvar)
	(xrefp read inisymb)
	(xrefp toperr errnla)
	(xdefp ini_cad)
	(pure)
ini_cad
	(eval ())
	(makfnt fcar '3 (strg "car"))
	(makfnt fcdr '3 (strg "cdr"))
	(makfnt ca2r '4 (strg "caar"))
	(makfnt cadr '4 (strg "cadr"))
	(makfnt cdar '4 (strg "cdar"))
	(makfnt cddr '4 (strg "cddr"))
	(makfnt caaar '5 (strg "caaar"))
	(makfnt caadr '5 (strg "caadr"))
	(makfnt cadar '5 (strg "cadar"))
	(makfnt caddr '5 (strg "caddr"))
	(makfnt cdaar '5 (strg "cdaar"))
	(makfnt cdadr '5 (strg "cdadr"))
	(makfnt cddar '5 (strg "cddar"))
	(makfnt cdddr '5 (strg "cdddr"))
	(makfnt caaaar '6 (strg "caaaar"))
	(makfnt caaadr '6 (strg "caaadr"))
	(makfnt caadar '6 (strg "caadar"))
	(makfnt caaddr '6 (strg "caaddr"))
	(makfnt cadaar '6 (strg "cadaar"))
	(makfnt cadadr '6 (strg "cadadr"))
	(makfnt caddar '6 (strg "caddar"))
	(makfnt cadddr '6 (strg "cadddr"))
	(makfnt cdaaar '6 (strg "cdaaar"))
	(makfnt cdaadr '6 (strg "cdaadr"))
	(makfnt cdadar '6 (strg "cdadar"))
	(makfnt cdaddr '6 (strg "cdaddr"))
	(makfnt cddaar '6 (strg "cddaar"))
	(makfnt cddadr '6 (strg "cddadr"))
	(makfnt cdddar '6 (strg "cdddar"))
	(makfnt cddddr '6 (strg "cddddr"))
	(return)
carerr
	(btnil a1 careret)
	(mov a3 a1)
	(bra errnla)
careret
	(return)
	(lentry fcar 2)
	(mov |.fcar| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(return)
	(lentry fcdr 2)
	(mov |.fcdr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(return)
	(lentry ca2r 2)
	(mov |.ca2r| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(return)
	(lentry cadr 2)
	(mov |.cadr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(return)
	(lentry cdar 2)
	(mov |.cdar| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(return)
	(lentry cddr 2)
	(mov |.cddr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(return)
	(lentry caaar 2)
	(mov |.caaar| a2)
	(mov a1 a3)
caaar1
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(return)
	(lentry caadr 2)
	(mov |.caadr| a2)
	(mov a1 a3)
caadr1
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(return)
	(lentry cadar 2)
	(mov |.cadar| a2)
	(mov a1 a3)
cadar1
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(return)
	(lentry caddr 2)
	(mov |.caddr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(return)
	(lentry cdaar 2)
	(mov |.cdaar| a2)
	(mov a1 a3)
cdaar1
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(return)
	(lentry cdadr 2)
	(mov |.cdadr| a2)
	(mov a1 a3)
cdadr1
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(return)
	(lentry cddar 2)
	(mov |.cddar| a2)
	(mov a1 a3)
cddar1
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(return)
	(lentry cdddr 2)
	(mov |.cdddr| a2)
	(mov a1 a3)
cdddr1
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(return)
	(lentry caaaar 2)
	(mov |.caaaar| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bra caaar1)
	(lentry caaadr 2)
	(mov |.caaadr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bra caaar1)
	(lentry caadar 2)
	(mov |.caadar| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bra caadr1)
	(lentry caaddr 2)
	(mov |.caaddr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bra caadr1)
	(lentry cadaar 2)
	(mov |.cadaar| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bra cadar1)
	(lentry cadadr 2)
	(mov |.cadadr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bra cadar1)
	(lentry caddar 2)
	(mov |.caddar| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(return)
	(lentry cadddr 2)
	(mov |.cadddr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(return)
	(lentry cdaaar 2)
	(mov |.cdaaar| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bra cdaar1)
	(lentry cdaadr 2)
	(mov |.cdaadr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bra cdaar1)
	(lentry cdadar 2)
	(mov |.cdadar| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bra cdadr1)
	(lentry cdaddr 2)
	(mov |.cdaddr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bra cdadr1)
	(lentry cddaar 2)
	(mov |.cddaar| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bra cddar1)
	(lentry cddadr 2)
	(mov |.cddadr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bra cddar1)
	(lentry cdddar 2)
	(mov |.cdddar| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (car a1) a1)
	(bra cdddr1)
	(lentry cddddr 2)
	(mov |.cddddr| a2)
	(mov a1 a3)
	(bfcons a1 carerr)
	(mov (cdr a1) a1)
	(bra cdddr1)
	(end)
))
