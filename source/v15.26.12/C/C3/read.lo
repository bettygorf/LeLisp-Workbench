(loader '(
(listext (fibase letterp digitp asciip lowercase uppercase concatpk cascii readstrg stratom readline peekcn peekch reread teread lcuread readcod readch implodech implode erlec6 base10p rdpkgc2 read2 getcv rereada4 asciii getch readi lread readdltd erlec11 crastrg trysympk trysymb trysymp tryatom inacst inasymb inicst inisymb hashint istdsym ini_read fascii makevect makestrg strgallc stringa1 gadiv gadinv gatim2i gaplus2i equal lllength nreverse getprop setfn getfns llde ffuncall apply evala1 sysprot inphy hgc gcsymb gcnumb gcfloat gccons getsetn errudv errudf erroob errsym errsxt errnsa errnla errnia evalan evalt))
(entry startmodule subr0)
	(title read)
	(xrefi llinit fsymb)
	(xrefi llinit fcons)
	(xrefi llinit bvar)
	(xrefi llinit |.void|)
	(xrefi llinit |.undef|)
	(xrefi llinit |.t|)
	(xrefi llinit |.llsystem|)
	(xrefi llinit |.syspkgc|)
	(xrefi llinit hashtab)
	(xrefi llinit fstrg)
	(xrefp toperr errnia)
	(xrefp toperr errnla)
	(xrefp toperr errnsa)
	(xrefp toperr errsxt)
	(xrefp toperr errsym)
	(xrefp toperr erroob)
	(xrefp toperr errudf)
	(xrefp toperr errudv)
	(xrefp toperr getsetn)
	(xrefi toperr |.llexpr|)
	(xrefp gc gccons)
	(xrefp gc gcfloat)
	(xrefp gc gcnumb)
	(xrefp gc gcsymb)
	(xrefp gc hgc)
	(xrefp physio inphy)
	(xrefi physio istream)
	(xrefi physio inmax)
	(xrefi physio polig)
	(xrefi macroch |.syscol|)
	(xrefp eval sysprot)
	(xrefp eval evala1)
	(xrefp eval apply)
	(xrefp eval ffuncall)
	(xrefi eval savea4)
	(xrefp cntrl llde)
	(xrefi cntrl |.quote|)
	(xrefp symbs getfns)
	(xrefp symbs setfn)
	(xrefp symbs getprop)
	(xrefi fntstd |.llcons|)
	(xrefi fntstd |.mcons|)
	(xrefp fntstd nreverse)
	(xrefp fntstd lllength)
	(xrefp fntstd equal)
	(xrefp number gaplus2i)
	(xrefp number gatim2i)
	(xrefp number gadinv)
	(xrefp number gadiv)
	(xrefp string stringa1)
	(xrefp string strgallc)
	(xrefp string makestrg)
	(xrefp string makevect)
	(xdefp fascii)
	(xdefp ini_read)
	(xdefp istdsym)
	(xdefp hashint)
	(xdefp inisymb)
	(xdefp inicst)
	(xdefp inasymb)
	(xdefp inacst)
	(xdefp tryatom)
	(xdefp trysymp)
	(xdefp trysymb)
	(xdefp trysympk)
	(xdefp crastrg)
	(xdefp erlec11)
	(xdefp readdltd)
	(xdefp lread)
	(xdefp readi)
	(xdefp getch)
	(xdefp asciii)
	(xdefp rereada4)
	(xdefp getcv)
	(xdefp read2)
	(xdefp rdpkgc2)
	(xdefp base10p)
	(xdefp erlec6)
	(xdefi |.lread|)
	(xdefi |.stinread|)
	(xdefi |.statrc|)
	(xdefi tsymb)
	(xdefi asymb)
	(xdefi ksymb)
	(xdefi hsymb)
	(xdefi count)
	(xdefi tabch)
	(xdefi cachch)
	(xdefi ibase)
	(xdefi all09)
	(xdefi negatif)
	(xdefi quotes)
	(xdefi getchfl)
	(xdefi ringur)
	(xdefi curread)
	(xdefi rdprd)
	(xdefi impli)
	(xdefi impld)
	(xdefi bufat)
	(xdefi lgbufat)
	(xdefi cpkgc)
	(impure)
	(ladr tsymb 0)
	(ladr asymb 0)
	(ladr ksymb 0)
	(ladr hsymb 0)
	(ladr count 0)
	(ladr tabch 0)
	(ladr cachch 0)
	(ladr ibase 0)
	(ladr all09 0)
	(ladr negatif 0)
	(ladr quotes 0)
	(ladr getchfl 0)
	(ladr ringur 0)
	(ladr curread 0)
	(ladr rdprd 0)
	(ladr impli 0)
	(ladr impld 0)
	(ladr bufat 0)
	(ladr lgbufat 0)
	(ladr cpkgc 0)
	(pure)
ini_read
	(eval ())
	(movnil ringur)
	(movnil curread)
	(movnil impli)
	(movnil impld)
	(mov |.llsystem| cpkgc)
	(makcst statrc '14 (strg "read-case-flag"))
	(movnil (cval a1))
	(makcst stinread '12 (strg "in-read-flag"))
	(movnil (cval a1))
	(movnil cpkgc)
	(makfnt lread '4 (strg "read"))
	(makfnt implode '7 (strg "implode"))
	(makfnt implodech '9 (strg "implodech"))
	(makfnt readch '6 (strg "readch"))
	(makfnt readcod '6 (strg "readcn"))
	(makfnt lcuread '7 (strg "curread"))
	(makfnt teread '6 (strg "teread"))
	(makfnt reread '6 (strg "reread"))
	(makfnt readline '8 (strg "readline"))
	(makfnt readstrg '10 (strg "readstring"))
	(makfnt stratom '7 (strg "stratom"))
	(makfnt readdltd '19 (strg "read-delimited-list"))
	(makfnt peekch '6 (strg "peekch"))
	(makfnt peekcn '6 (strg "peekcn"))
	(makfnt concatpk '10 (strg "concatpkgc"))
	(makfnt fascii '5 (strg "ascii"))
	(makfnt cascii '6 (strg "cascii"))
	(makfnt uppercase '9 (strg "uppercase"))
	(makfnt lowercase '9 (strg "lowercase"))
	(makfnt asciip '6 (strg "asciip"))
	(makfnt digitp '6 (strg "digitp"))
	(makfnt letterp '7 (strg "letterp"))
	(makfnt fibase '5 (strg "ibase"))
	(mov '10 ibase)
	(mov '256 a1)
	(mov '12 a2)
	(push (@ ret_call_makestrg_1))
	(bra makestrg)
ret_call_makestrg_1
	(eval ())
	(mov a1 tabch)
	(hbmovx '0 a1 '0)
	(hbmovx '7 a1 '8)
	(hbmovx '7 a1 '9)
	(hbmovx '2 a1 '10)
	(hbmovx '7 a1 '11)
	(hbmovx '7 a1 '12)
	(hbmovx '2 a1 '13)
	(hbmovx '7 a1 '32)
	(hbmovx '11 a1 '34)
	(hbmovx '9 a1 '35)
	(hbmovx '10 a1 '39)
	(hbmovx '4 a1 '40)
	(hbmovx '5 a1 '41)
	(hbmovx '10 a1 '44)
	(hbmovx '6 a1 '46)
	(hbmovx '10 a1 '58)
	(hbmovx '1 a1 '59)
	(hbmovx '10 a1 '91)
	(hbmovx '10 a1 '93)
	(hbmovx '10 a1 '94)
	(hbmovx '10 a1 '96)
	(hbmovx '13 a1 '124)
	(hbmovx '0 a1 '127)
	(mov '1024 lgbufat)
	(mov lgbufat a1)
	(mov '0 a2)
	(push (@ ret_call_makestrg_2))
	(bra makestrg)
ret_call_makestrg_2
	(eval ())
	(mov a1 bufat)
	(mov '128 a1)
	(mov '0 a2)
	(push (@ ret_call_makevect_3))
	(bra makevect)
ret_call_makevect_3
	(eval ())
	(mov a1 cachch)
	(return)
rdpopj
	(return)
hashint
	(mov a1 a2)
	(hgsize a2 a1)
hashfast
	(eval ())
	(mov a1 a3)
	(cnble a1 '6 hashcour)
	(push a3)
	(mov '5 a3)
hashf1
	(hbxmov a2 a3 a4)
	(plus a1 a1)
	(plus a4 a1)
	(sobgez a3 hashf1)
	(mov '5 a3)
hashf5
	(xtopst a3)
	(decr a3)
	(hbxmov a2 a3 a4)
	(plus a1 a1)
	(plus a4 a1)
	(xtopst a3)
	(sobgez a3 hashf5)
	(pop a3)
	(bra hashend)
hashcour
	(eval ())
	(cnbeq a1 '0 hashret)
	(bra hashcou3)
hashcou1
	(hbxmov a2 a3 a4)
	(plus a1 a1)
	(plus a4 a1)
hashcou3
	(sobgez a3 hashcou1)
hashend
	(eval ())
	(land '32767 a1)
	(hgsize hashtab a4)
	(rem a4 a1)
hashret
	(return)
inisymb
	(eval ())
	(push a4)
	(push a3)
	(push (@ ret_call_crastrg_4))
	(bra crastrg)
ret_call_crastrg_4
	(eval ())
	(mov a1 a2)
	(push (@ ret_call_crasymb_5))
	(bra crasymb)
ret_call_crasymb_5
	(eval ())
	(pop a4)
	(mov a4 (fval a1))
	(pop a4)
	(btnil a4 inisymr)
	(mov a1 (val a4))
inisymr
	(pop a3)
	(pop a4)
	(sftype a4 a1)
	(bri a3)
inicst
	(eval ())
	(push a3)
	(push (@ ret_call_crastrg_6))
	(bra crastrg)
ret_call_crastrg_6
	(eval ())
	(mov a1 a2)
	(push (@ ret_call_crasymb_7))
	(bra crasymb)
ret_call_crasymb_7
	(eval ())
	(mov a1 (cval a1))
	(pop a3)
	(btnil a3 inicstr)
	(mov a1 (val a3))
inicstr
	(return)
crasymb
	(push (@ ret_call_symballc_8))
	(bra symballc)
ret_call_symballc_8
	(eval ())
	(push a1)
	(mov cpkgc (pkgc a1))
	(mov a2 (pname a1))
	(hgsize a2 a1)
	(push (@ ret_call_trysymb0_9))
	(bra trysymb0)
ret_call_trysymb0_9
	(eval ())
	(pop a1)
	(cnbeq a2 '1 plac2d)
	(cnbeq a2 '2 plac3d12)
	(bra plac3d2n)
inasymb
	(eval ())
	(mov |.undef| (cval a1))
inasymb2
	(eval ())
	(movnil (plist a1))
	(sptype '0 a1)
	(mov cpkgc (pkgc a1))
	(movnil (oval a1))
	(push a1)
	(mov (pname a1) a2)
	(hgsize a2 a1)
	(push (@ ret_call_trysymb0_10))
	(bra trysymb0)
ret_call_trysymb0_10
	(eval ())
	(pop a1)
	(cnbeq a2 '1 plac2d)
	(cnbeq a2 '2 plac3d12)
	(bra plac3d2n)
inacst
	(eval ())
	(mov a1 (cval a1))
	(mov '0 (fval a1))
	(sftype '0 a1)
	(bra inasymb2)
makefix
	(movnil negatif)
	(mov '0 a3)
makefix0
	(mov '0 a1)
	(hbxmov a2 a3 a4)
	(cnbeq a4 '43 makefix8)
	(cnbne a4 '45 makefix1)
	(mov a4 negatif)
	(bra makefix8)
makefix1
	(hbxmov a2 a3 a4)
	(cnbeq a4 '47 makefxr1)
	(cnblt a4 '48 makefxd1)
	(cnbgt a4 '57 makefxd1)
	(diff '48 a4)
	(bra makefix2)
makefxd1
	(cnblt a4 '65 makefxd2)
	(cnbgt a4 '90 makefxd2)
	(diff '65 a4)
	(plus '10 a4)
	(bra makefix2)
makefxd2
	(cnblt a4 '97 makefix2)
	(cnbgt a4 '122 makefix2)
	(diff '97 a4)
	(plus '10 a4)
makefix2
	(cnbeq ibase '10 makefix6)
	(times ibase a1)
makefix3
	(plus a4 a1)
makefix4
	(bra makefix8)
makefix6
	(push a2)
	(push a3)
	(push a4)
	(mov ibase a2)
	(mov '2 a4)
	(push (@ ret_call_gatim2i_11))
	(bra gatim2i)
ret_call_gatim2i_11
	(eval ())
	(pop a2)
	(mov '2 a4)
	(push (@ ret_call_gaplus2i_12))
	(bra gaplus2i)
ret_call_gaplus2i_12
	(eval ())
	(pop a3)
	(pop a2)
makefix8
	(incr a3)
	(cnbne a3 tsymb makefix1)
	(btnil negatif makefixr)
	(bra gadinv)
makefixr
	(return)
makefxr1
	(btnil negatif makefixr2)
	(push a2)
	(push a3)
	(push (@ ret_call_gadinv_13))
	(bra gadinv)
ret_call_gadinv_13
	(eval ())
	(pop a3)
	(pop a2)
makefixr2
	(push a1)
	(incr a3)
	(movnil negatif)
	(push (@ ret_call_makefix0_14))
	(bra makefix0)
ret_call_makefix0_14
	(eval ())
	(push a1)
	(mov '2 a4)
	(bra gadiv)
makeflo
	(cvatof a2 tsymb trysymi a1)
	(return)
nextfix
	(cnbne a3 tsymb nextxxx)
	(adjstk '1)
	(bra makefix)
nextflo
	(cnbne a3 tsymb nextxxx)
	(adjstk '1)
	(bra makeflo)
nextsym
	(cnbne a3 tsymb nextxxx)
	(adjstk '1)
	(bra trysymi)
nextxxx
	(hbxmov a2 a3 a4)
	(incr a3)
	(return)
digitpi
	(eval ())
	(mov a4 a1)
	(cnblt a4 '48 digitpi1)
	(cnbgt a4 '57 digitpi1)
	(diff '48 a1)
	(bra digitpi9)
digitpi1
	(cnblt a4 '65 digitpi2)
	(cnbgt a4 '90 digitpi2)
	(diff '65 a1)
	(bra digitpi8)
digitpi2
	(cnblt a4 '97 digitpif)
	(cnbgt a4 '122 digitpif)
	(diff '97 a1)
digitpi8
	(plus '10 a1)
digitpi9
	(cnbge a1 ibase digitpif)
	(cnble a1 '57 digitpt)
	(movnil all09)
digitpit
	(return)
digitpif
	(movnil a1)
	(return)
base10p
	(eval ())
	(cnblt a4 '48 digitpif)
	(cnbgt a4 '57 digitpif)
	(mov a4 a1)
	(return)
tryatom
	(eval ())
	(cnbne a1 '0 trynum)
	(bfnil cpkgc trynum)
	(movnil a1)
	(return)
trynum
	(eval ())
	(mov a1 tsymb)
	(mov a2 asymb)
	(bfnil quotes trysymi)
	(mov '0 a3)
	(mov a3 all09)
	(push (@ ret_call_nextsym_15))
	(bra nextsym)
ret_call_nextsym_15
	(eval ())
	(cnbeq a4 '46 tryflo0)
	(cnbeq a4 '45 tryfix0)
	(cnbeq a4 '43 tryfix0)
	(push (@ ret_call_digitpi_16))
	(bra digitpi)
ret_call_digitpi_16
	(eval ())
	(bfnil a1 tryfix1)
	(bra trysymi)
tryfix0
	(push (@ ret_call_nextsym_17))
	(bra nextsym)
ret_call_nextsym_17
	(eval ())
	(cnbeq a4 '46 tryflo0)
	(push (@ ret_call_digitpi_18))
	(bra digitpi)
ret_call_digitpi_18
	(eval ())
	(btnil a1 trysymi)
tryfix1
	(push (@ ret_call_nextfix_19))
	(bra nextfix)
ret_call_nextfix_19
	(eval ())
	(push (@ ret_call_digitpi_20))
	(bra digitpi)
ret_call_digitpi_20
	(eval ())
	(bfnil a1 tryfix1)
	(cnbeq a4 '46 tryflo2)
	(cnbeq a4 '69 tryflo3)
	(cnbeq a4 '101 tryflo3)
	(cnbeq a4 '47 tryfix2)
	(bra trysymi)
tryfix2
	(push (@ ret_call_nextsym_21))
	(bra nextsym)
ret_call_nextsym_21
	(eval ())
	(cnbeq a4 '43 tryfix3)
	(cnbeq a4 '45 tryfix3)
	(push (@ ret_call_digitpi_22))
	(bra digitpi)
ret_call_digitpi_22
	(eval ())
	(btnil a1 trysymi)
	(bra tryfix4)
tryfix3
	(push (@ ret_call_nextsym_23))
	(bra nextsym)
ret_call_nextsym_23
	(eval ())
	(push (@ ret_call_digitpi_24))
	(bra digitpi)
ret_call_digitpi_24
	(eval ())
	(btnil a1 trysymi)
tryfix4
	(push (@ ret_call_nextfix_25))
	(bra nextfix)
ret_call_nextfix_25
	(eval ())
	(push (@ ret_call_digitpi_26))
	(bra digitpi)
ret_call_digitpi_26
	(eval ())
	(bfnil a1 tryfix4)
	(bra trysymi)
tryflo0
	(push (@ ret_call_nextsym_27))
	(bra nextsym)
ret_call_nextsym_27
	(eval ())
	(push (@ ret_call_base10p_28))
	(bra base10p)
ret_call_base10p_28
	(eval ())
	(btnil a1 trysymi)
tryflo1
	(push (@ ret_call_nextflo_29))
	(bra nextflo)
ret_call_nextflo_29
	(eval ())
	(push (@ ret_call_base10p_30))
	(bra base10p)
ret_call_base10p_30
	(eval ())
	(bfnil a1 tryflo1)
	(cnbeq a4 '69 tryflo4)
	(cnbeq a4 '101 tryflo4)
	(bra trysymi)
tryflo2
	(bfnil all09 tryflo1)
	(bra trysymi)
tryflo3
	(btnil all09 trysymi)
tryflo4
	(push (@ ret_call_nextsym_31))
	(bra nextsym)
ret_call_nextsym_31
	(eval ())
	(push (@ ret_call_base10p_32))
	(bra base10p)
ret_call_base10p_32
	(eval ())
	(bfnil a1 tryflo6)
	(cnbeq a4 '45 tryflo5)
	(cnbne a4 '43 trysymi)
tryflo5
	(push (@ ret_call_nextsym_33))
	(bra nextsym)
ret_call_nextsym_33
	(eval ())
	(push (@ ret_call_base10p_34))
	(bra base10p)
ret_call_base10p_34
	(eval ())
	(btnil a1 trysymi)
tryflo6
	(push (@ ret_call_nextflo_35))
	(bra nextflo)
ret_call_nextflo_35
	(eval ())
	(push (@ ret_call_base10p_36))
	(bra base10p)
ret_call_base10p_36
	(eval ())
	(bfnil a1 tryflo6)
	(bra trysymi)
trysymi
	(mov tsymb a1)
trysymb
	(push (@ ret_call_trysymb0_37))
	(bra trysymb0)
ret_call_trysymb0_37
	(eval ())
trysymbx
	(cnbeq a2 '0 trysymre)
	(cnbeq a2 '1 mak2d)
	(cnbeq a2 '2 mak3d12)
mak3d2n
	(eval ())
	(push (@ ret_call_symballc_38))
	(bra symballc)
ret_call_symballc_38
	(eval ())
plac3d2n
	(mov (pname a4) a3)
	(mov a3 (pname a1))
	(mov a1 (pname a4))
	(mov (alink a3) (alink a1))
trysymre
	(return)
mak3d12
	(eval ())
	(push (@ ret_call_symballc_39))
	(bra symballc)
ret_call_symballc_39
	(eval ())
plac3d12
	(mov (pname a4) (alink a1))
	(mov a1 (pname a4))
	(mov a4 (pname a1))
	(return)
mak2d
	(mov tsymb a2)
	(push (@ ret_call_strgallc_40))
	(bra strgallc)
ret_call_strgallc_40
	(eval ())
	(hbmovm a2 asymb '0 a1 '0)
	(mov a1 a2)
	(push (@ ret_call_symballc_41))
	(bra symballc)
ret_call_symballc_41
	(eval ())
	(mov a2 (pname a1))
	(mov ksymb a4)
plac2d
	(hpxmov hashtab a4 (alink a1))
	(hpmovx a1 hashtab a4)
	(return)
trysymb0
	(eval ())
	(mov a1 tsymb)
	(mov a2 asymb)
	(push (@ ret_call_hashfast_42))
	(bra hashfast)
ret_call_hashfast_42
	(eval ())
	(mov a1 ksymb)
	(hpxmov hashtab a1 a3)
	(mov a3 hsymb)
	(mov tsymb a1)
	(bra trysymb6)
trysymb1
	(eval ())
	(mov (pname a3) a4)
	(btstrg a4 trysymb2)
	(mov (alink a4) a4)
trysymb2
	(hgsize a4 a2)
	(cnbne a1 a2 trysymb5)
	(hbteq a1 asymb '0 a4 '0 trysymb8)
trysymb5
	(mov a3 hsymb)
	(mov (alink a3) a3)
trysymb6
	(bffix a3 trysymb1)
	(mov '1 a2)
	(mov ksymb a4)
	(return)
trysymb8
	(mov a3 a1)
	(mov hsymb a2)
	(cabeq a1 a2 trysy3d)
	(mov (alink a1) (alink a2))
	(mov ksymb a3)
	(hpxmov hashtab a3 (alink a1))
	(hpmovx a1 hashtab a3)
	(bra trysy3d)
trysymp
	(eval ())
	(push cpkgc)
	(mov a1 cpkgc)
	(hgsize a2 a1)
	(mov (@ trysymb) a3)
	(push (@ ret_call_sysprot_43))
	(bra sysprot)
ret_call_sysprot_43
	(eval ())
	(pop a1)
	(pop cpkgc)
	(bri a3)
trysympk
	(eval ())
	(push cpkgc)
	(mov a1 cpkgc)
	(mov a2 a1)
	(mov (@ trysymp1) a3)
	(push (@ ret_call_sysprot_44))
	(bra sysprot)
ret_call_sysprot_44
	(eval ())
	(pop a1)
	(pop cpkgc)
	(bri a3)
trysymp1
	(push (@ trysymbx))
	(bra trysy3d)
pkgcequ
	(eval ())
	(push a1)
	(mov (pkgc a1) a1)
	(mov cpkgc a2)
	(push (@ ret_call_equal_45))
	(bra equal)
ret_call_equal_45
	(eval ())
	(mov a1 a2)
	(pop a1)
	(return)
trysy3d
	(mov cpkgc a4)
	(btsymb a4 trysy3s)
trysy3c
	(push (@ ret_call_pkgcequ_46))
	(bra pkgcequ)
ret_call_pkgcequ_46
	(eval ())
	(bfnil a2 trysyr4)
	(bfstrg (pname a1) trysy3c0)
trysyr1
	(mov '2 a2)
	(mov a1 a4)
	(return)
trysy3c0
	(push a1)
	(push a1)
trysy3c1
	(mov (pname a1) a1)
	(push (@ ret_call_pkgcequ_47))
	(bra pkgcequ)
ret_call_pkgcequ_47
	(eval ())
	(bfnil a2 trysyr3)
	(btstrg (alink a1) trysy3c2)
	(mov a1 (& 1))
trysy3c2
	(cabne a1 (& 0) trysy3c1)
	(adjstk '1)
	(pop a4)
trysyr2
	(mov '3 a2)
	(return)
trysyr3
	(adjstk '2)
trysyr4
	(mov '0 a2)
	(return)
trysy3s
	(cabeq a4 (pkgc a1) trysyr4)
	(btstrg (pname a1) trysyr1)
	(mov a1 a2)
	(mov a1 a3)
trysy31
	(mov (pname a1) a1)
	(cabeq a4 (pkgc a1) trysyr4)
	(btstrg (alink a1) trysy32)
	(mov a1 a2)
trysy32
	(cabne a1 a3 trysy31)
	(mov a2 a4)
	(bra trysyr2)
istdsym
	(eval ())
	(mov |.undef| (cval a1))
	(movnil (plist a1))
	(mov '0 (fval a1))
	(sftype '0 a1)
	(sptype '0 a1)
	(movnil (oval a1))
	(return)
symballc
	(eval ())
	(mov fsymb a1)
	(cabne a1 '0 symball1)
	(push (@ ret_call_gcsymb_48))
	(bra gcsymb)
ret_call_gcsymb_48
	(eval ())
	(mov fsymb a1)
symball1
	(mov (alink a1) fsymb)
	(push (@ ret_call_istdsym_49))
	(bra istdsym)
ret_call_istdsym_49
	(eval ())
	(mov cpkgc (pkgc a1))
	(return)
crastrg
	(eval ())
	(push a2)
	(mov a1 a2)
	(push (@ ret_call_strgallc_50))
	(bra strgallc)
ret_call_strgallc_50
	(eval ())
	(pop a3)
	(movbm a2 a3 a1)
	(return)
getch
	(eval ())
	(btnil ringur getch1)
	(mov '1 getchfl)
	(mov ringur a4)
	(mov (cdr a4) ringur)
	(mov (car a4) a4)
	(bra getch2)
getch1
	(bfnil impli getch3)
	(mov '0 getchfl)
	(push (@ ret_call_inphy_51))
	(bra inphy)
ret_call_inphy_51
	(eval ())
getch2
	(mov '12 a3)
	(cnbgt a4 '255 getch21)
	(hbxmov tabch a4 a3)
getch21
	(return)
getch3
	(mov impld a4)
	(mov '2 getchfl)
	(btnil a4 getch4)
	(bfcons a4 erlec1)
	(mov (cdr a4) impld)
	(mov (car a4) a4)
	(bffix a4 erlec9)
	(bra getch2)
getch4
	(mov '0 impld)
	(mov '32 a4)
	(bra getch2)
getcv
	(push (@ ret_call_getch_52))
	(bra getch)
ret_call_getch_52
	(eval ())
	(brx ((@ getcv) (@ getcvc) (@ getcvs) (@ getcv1) (@ getcvr) (@ getcvr) (@ getcvr) (@ getcvr) (@ getcvr) (@ getcvr) (@ getcvr) (@ getcvr) (@ getcv2) (@ getcvr) (@ getcvr)) a3)
getcvr
	(return)
getcv1
	(mov a4 quotes)
	(push (@ ret_call_getch_53))
	(bra getch)
ret_call_getch_53
	(eval ())
	(mov '12 a3)
	(return)
getcv2
	(mov |.statrc| a3)
	(bfnil (cval a3) getcv3)
	(cnblt a4 '65 getcv3)
	(cnbgt a4 '90 getcv3)
	(lowerc a4)
getcv3
	(mov '12 a3)
	(return)
getcvc
	(eval ())
	(push (@ ret_call_getch_54))
	(bra getch)
ret_call_getch_54
	(eval ())
	(cnbne a3 '2 getcvc)
getcvs
	(eval ())
	(mov '7 a3)
	(return)
rd1
	(movnil quotes)
	(mov '0 a2)
rdsep
	(push (@ ret_call_getcv_55))
	(bra getcv)
ret_call_getcv_55
	(eval ())
	(brx ((@ erlec1) (@ erlec1) (@ erlec1) (@ erlec1) (@ rdparo) (@ rdparf) (@ rddot) (@ rdsep) (@ rdpkgc) (@ rdsplic) (@ rdmac) (@ rdstr) (@ rdpname) (@ rdsymb) (@ rdmsymb)) a3)
rdparo
	(eval ())
	(incr rdprd)
	(mov '0 a3)
	(return)
rdparf
	(eval ())
	(sobgez rdprd rdparfr)
	(mov '0 rdprd)
rdparfr
	(mov '1 a3)
	(return)
rddot
	(cnbne a4 '46 rddot1)
	(push (@ ret_call_getcv_56))
	(bra getcv)
ret_call_getcv_56
	(eval ())
	(cnbeq a3 '12 rddot2)
	(mov '2 a3)
	(bra rereada4)
rddot1
	(mov '2 a3)
	(return)
rddot2
	(hbmovx '46 bufat '0)
	(mov '1 a2)
	(bra rdpname)
rdpkgc
	(mov |.syscol| a1)
	(mov (cval a1) a1)
	(bra rdpkgc2)
rdpkgc1
	(mov a2 a1)
	(mov bufat a2)
	(push (@ ret_call_tryatom_57))
	(bra tryatom)
ret_call_tryatom_57
	(eval ())
	(bfsymb a1 erlec6)
rdpkgc2
	(push cpkgc)
	(mov a1 cpkgc)
	(mov (@ readi) a3)
	(push (@ ret_call_sysprot_58))
	(bra sysprot)
ret_call_sysprot_58
	(eval ())
	(pop a1)
	(pop cpkgc)
	(push a3)
	(mov '3 a3)
	(return)
rdsplic
	(eval ())
	(push (@ ret_call_asciii_59))
	(bra asciii)
ret_call_asciii_59
	(eval ())
	(movnil a2)
	(push (@ ret_call_apply_60))
	(bra apply)
ret_call_apply_60
	(eval ())
	(btnil a1 rdsplic1)
	(btcons a1 rdsplic1)
	(bra erlec10)
rdsplic1
	(mov '4 a3)
	(return)
rdmac
	(eval ())
	(push (@ ret_call_asciii_61))
	(bra asciii)
ret_call_asciii_61
	(eval ())
	(movnil a2)
	(push (@ ret_call_apply_62))
	(bra apply)
ret_call_apply_62
	(eval ())
rdretobj
	(mov '3 a3)
	(return)
rdstr0
	(hbmovx a4 bufat a2)
	(incr a2)
	(cnbge a2 lgbufat erlec2)
rdstr
	(push (@ ret_call_getch_63))
	(bra getch)
ret_call_getch_63
	(eval ())
	(cnbne a3 '11 rdstr0)
	(push (@ ret_call_getch_64))
	(bra getch)
ret_call_getch_64
	(eval ())
	(cnbeq a3 '11 rdstr0)
	(push (@ ret_call_rereada4_65))
	(bra rereada4)
ret_call_rereada4_65
	(eval ())
	(push (@ ret_call_strgallc_66))
	(bra strgallc)
ret_call_strgallc_66
	(eval ())
	(hbmovm a2 bufat '0 a1 '0)
	(btnil cpkgc rdretobj)
	(mov cpkgc (typ a1))
	(bra rdretobj)
rdpname
	(hbmovx a4 bufat a2)
	(incr a2)
	(cnbge a2 '128 erlec3)
	(push (@ ret_call_getcv_67))
	(bra getcv)
ret_call_getcv_67
	(eval ())
	(cnbeq a3 '12 rdpname)
	(cnbeq a3 '6 rdpname)
rdfinsym
	(cnbeq a3 '8 rdpkgc1)
	(push (@ ret_call_rereada4_68))
	(bra rereada4)
ret_call_rereada4_68
	(eval ())
	(mov a2 a1)
	(mov bufat a2)
	(push (@ ret_call_tryatom_69))
	(bra tryatom)
ret_call_tryatom_69
	(eval ())
	(bra rdretobj)
rdsymb
	(mov a4 quotes)
	(bra rdsymb1)
rdsymb0
	(hbmovx a4 bufat a2)
	(incr a2)
	(cnbge a2 '256 erlec5)
rdsymb1
	(push (@ ret_call_getch_70))
	(bra getch)
ret_call_getch_70
	(eval ())
	(cnbne a3 '13 rdsymb0)
	(push (@ ret_call_getch_71))
	(bra getch)
ret_call_getch_71
	(eval ())
	(cnbeq a3 '13 rdsymb0)
	(bra rdfinsym)
rdmsymb
	(mov a4 quotes)
	(hbmovx a4 bufat '0)
	(mov '1 a2)
	(push (@ ret_call_getcv_72))
	(bra getcv)
ret_call_getcv_72
	(eval ())
	(bra rdfinsym)
readi
	(eval ())
	(push (@ ret_call_rd1_73))
	(bra rd1)
ret_call_rd1_73
	(eval ())
read0
	(eval ())
	(brx ((@ read2) (@ erlec4) (@ erlec4) (@ rdpopj) (@ read1)) a3)
read1
	(bfnil (cdr a1) erlec10)
	(mov (car a1) a1)
	(return)
read2
	(eval ())
	(push curread)
	(mov |.lcuread| a1)
	(ncons a1)
	(push a1)
	(mov a1 curread)
read3
	(push a1)
	(push (@ ret_call_rd1_74))
	(bra rd1)
ret_call_rd1_74
	(eval ())
read31
	(brx ((@ read6) (@ read7) (@ read9) (@ read4) (@ read5)) a3)
read4
	(eval ())
	(ncons a1)
	(pop a2)
	(mov a1 (cdr a2))
	(bra read3)
read5
	(eval ())
	(btcons a1 read51)
	(pop a1)
	(bra read3)
read51
	(pop a2)
	(mov a1 (cdr a2))
read52
	(bfcons (cdr a1) read3)
	(mov (cdr a1) a1)
	(bra read52)
read6
	(eval ())
	(push (@ read4))
	(bra read2)
read7
	(eval ())
	(pop a1)
read71
	(pop a1)
	(mov (cdr a1) a1)
	(pop curread)
	(return)
read9
	(eval ())
	(push (@ ret_call_readi_75))
	(bra readi)
ret_call_readi_75
	(eval ())
	(push a1)
	(push (@ ret_call_rd1_76))
	(bra rd1)
ret_call_rd1_76
	(eval ())
	(pop a1)
	(pop a2)
	(brx ((@ erlec7) (@ read91) (@ erlec7) (@ erlec7) (@ erlec7)) a3)
read91
	(eval ())
	(mov a1 (cdr a2))
	(bra read71)
erlec1
	(mov '1 a1)
	(bra erlec)
erlec2
	(mov '2 a1)
	(bra erlec)
erlec3
	(mov '3 a1)
	(bra erlec)
erlec4
	(mov '4 a1)
	(bra erlec)
erlec5
	(mov '5 a1)
	(bra erlec)
erlec6
	(mov '6 a1)
	(bra erlec)
erlec7
	(mov '7 a1)
	(bra erlec)
erlec8
	(mov '8 a1)
	(bra erlec)
erlec9
	(mov '9 a1)
	(bra erlec)
erlec10
	(mov '10 a1)
	(bra erlec)
erlec11
	(mov '11 a1)
	(bra erlec)
erlec
	(eval ())
	(bfnil impli erlecc1)
	(mov |.lread| a2)
	(bra errsxt)
erlecc1
	(mov |.implode| a2)
	(movnil impli)
	(movnil impld)
	(bra errsxt)
	(lentry lread 1)
	(push (@ ret_call_getcv_77))
	(bra getcv)
ret_call_getcv_77
	(eval ())
	(cnbeq a3 '5 lread)
	(cnbeq a3 '7 lread)
	(push (@ ret_call_rereada4_78))
	(bra rereada4)
ret_call_rereada4_78
	(eval ())
	(mov |.stinread| a1)
	(push (cval a1))
	(mov |.t| (cval a1))
	(mov (@ readi) a3)
	(push (@ ret_call_sysprot_79))
	(bra sysprot)
ret_call_sysprot_79
	(eval ())
lreadend
	(eval ())
	(pop a1)
	(mov |.stinread| a4)
	(pop (cval a4))
	(bri a3)
	(lentry implode 2)
	(push impld)
	(push impli)
	(push ringur)
	(mov a1 impld)
	(mov |.t| impli)
	(movnil ringur)
	(mov (@ readi) a3)
	(push (@ ret_call_sysprot_80))
	(bra sysprot)
ret_call_sysprot_80
	(eval ())
	(pop a1)
	(pop ringur)
	(pop impli)
	(pop impld)
	(bri a3)
	(lentry implodech 2)
	(mov a1 a2)
	(movnil a3)
impldech1
	(bfcons a2 impldech2)
	(mov (car a2) a1)
	(push (@ ret_call_cascii_81))
	(bra cascii)
ret_call_cascii_81
	(eval ())
	(cons a1 a3)
	(mov (cdr a2) a2)
	(bra impldech1)
impldech2
	(mov a3 a1)
	(push (@ ret_call_nreverse_82))
	(bra nreverse)
ret_call_nreverse_82
	(eval ())
	(bra implode)
	(return)
	(lentry readch 1)
	(push (@ asciii))
	(bra getch)
	(lentry readcod 1)
	(push (@ ret_call_getch_83))
	(bra getch)
ret_call_getch_83
	(eval ())
	(mov a4 a1)
	(return)
	(lentry lcuread 1)
	(mov curread a1)
	(return)
	(lentry teread 1)
	(movnil ringur)
	(mov '0 inmax)
	(return)
	(lentry reread 2)
	(btnil a1 reread9)
	(bfcons a1 rereade)
	(movnil a2)
	(ncons a2)
	(push a2)
reread4
	(mov (car a1) a3)
	(ncons a3)
	(mov a3 (cdr a2))
	(mov a3 a2)
	(mov (cdr a1) a1)
	(btcons a1 reread4)
	(mov ringur (cdr a2))
	(pop a1)
	(mov (cdr a1) a1)
	(mov a1 ringur)
reread9
	(mov ringur a1)
	(return)
rereade
	(mov |.reread| a2)
	(bra errnla)
rereada4
	(eval ())
	(cnbne getchfl '0 rrda41)
	(decr polig)
	(return)
rrda41
	(xcons ringur a4)
	(mov a4 ringur)
	(return)
	(lentry peekch 1)
	(push (@ ret_call_getch_84))
	(bra getch)
ret_call_getch_84
	(eval ())
	(push a4)
	(push (@ ret_call_rereada4_85))
	(bra rereada4)
ret_call_rereada4_85
	(eval ())
	(pop a4)
	(bra asciii)
	(lentry peekcn 1)
	(push (@ ret_call_getch_86))
	(bra getch)
ret_call_getch_86
	(eval ())
	(mov a4 a1)
	(bra rereada4)
	(lentry readline 1)
	(push (@ ret_call_getch_87))
	(bra getch)
ret_call_getch_87
	(eval ())
	(movnil a1)
	(cnbne a4 '13 readl2)
	(push (@ ret_call_getch_88))
	(bra getch)
ret_call_getch_88
	(eval ())
	(movnil a1)
	(cnbne a4 '10 readl2)
	(return)
readl2
	(cnbeq a4 '10 readl4)
readl3
	(cnbeq a4 '10 readl5)
	(cons a4 a1)
readl4
	(push a1)
	(push (@ ret_call_getch_89))
	(bra getch)
ret_call_getch_89
	(eval ())
	(pop a1)
	(cnbne a4 '13 readl3)
readl5
	(bra nreverse)
	(lentry stratom 4)
	(bffix a1 erstrat1)
	(bfstrg a2 erstrat2)
	(mov a3 quotes)
	(bra tryatom)
erstrat1
	(mov |.stratom| a2)
	(bra errnia)
erstrat2
	(mov a2 a1)
	(mov |.stratom| a2)
	(bra errnsa)
	(lentry readstrg 1)
	(push (@ ret_call_getch_90))
	(bra getch)
ret_call_getch_90
	(eval ())
	(mov '0 a2)
	(cnbeq a4 '10 reads4)
	(cnbne a4 '13 reads3)
	(push (@ ret_call_getch_91))
	(bra getch)
ret_call_getch_91
	(eval ())
	(mov '0 a2)
reads3
	(cnbeq a4 '10 reads5)
	(hbmovx a4 bufat a2)
	(cnbeq a2 lgbufat reads5)
	(incr a2)
reads4
	(push a2)
	(push (@ ret_call_getch_92))
	(bra getch)
ret_call_getch_92
	(eval ())
	(pop a2)
	(cnbne a4 '13 reads3)
reads5
	(eval ())
	(push (@ ret_call_strgallc_93))
	(bra strgallc)
ret_call_strgallc_93
	(eval ())
	(hbmovm a2 bufat '0 a1 '0)
	(return)
	(lentry readdltd 2)
	(bffix a1 readdltr)
	(hbxmov tabch a1 a2)
	(push a1)
	(push a2)
	(hbmovx '5 tabch a1)
	(mov (@ read2) a3)
	(push (@ ret_call_sysprot_94))
	(bra sysprot)
ret_call_sysprot_94
	(eval ())
	(pop a1)
	(pop a2)
	(pop a4)
	(hbmovx a2 tabch a4)
	(bri a3)
readdltr
	(mov |.readdltd| a2)
	(bra errnia)
asciii
	(eval ())
	(mov a4 a1)
	(bffix a1 ascierr)
	(cnblt a1 '0 fascii3)
	(cnbge a1 '128 fascii3)
	(hpxmov cachch a1 a2)
	(bfsymb a2 fascii3)
	(mov a2 a1)
	(return)
fascii3
	(eval ())
	(push a1)
	(mov '0 a2)
	(hbmovx a1 bufat a2)
	(incr a2)
	(mov a2 a1)
	(mov bufat a2)
	(push cpkgc)
	(mov (@ fascii8) a3)
	(push (@ ret_call_sysprot_95))
	(bra sysprot)
ret_call_sysprot_95
	(eval ())
	(pop a1)
	(pop cpkgc)
	(pop a2)
	(bfsymb a1 fascii7)
	(cnblt a2 '0 fascii7)
	(cnbge a2 '128 fascii7)
	(hpmovx a1 cachch a2)
fascii7
	(bri a3)
fascii8
	(movnil cpkgc)
	(bra tryatom)
ascierr
	(mov |.fascii| a2)
	(bra errnia)
	(lentry fascii 2)
	(mov a1 a4)
	(bra asciii)
	(lentry cascii 2)
	(mov |.cascii| savea4)
	(push (@ ret_call_stringa1_96))
	(bra stringa1)
ret_call_stringa1_96
	(eval ())
	(hbxmov a1 '0 a1)
	(return)
	(lentry concatpk 3)
	(bfsymb a1 concpkr1)
	(bfsymb a2 concpkr2)
concpk0
	(btnil a2 concpkr)
	(push a2)
	(mov (pkgc a2) a2)
	(push (@ ret_call_concpk0_97))
	(bra concpk0)
ret_call_concpk0_97
	(eval ())
	(pop a2)
	(bra trysympk)
concpkr
	(return)
concpkr2
	(mov a2 a1)
concpkr1
	(mov |.concatpk| a2)
	(bra errsym)
	(lentry uppercase 2)
	(bffix a1 upper9)
	(cnblt a1 '97 upper8)
	(cnbgt a1 '122 upper8)
	(upperc a1)
upper8
	(return)
upper9
	(mov |.uppercase| a2)
	(bra errnia)
	(lentry lowercase 2)
	(bffix a1 lower9)
	(cnblt a1 '65 lower8)
	(cnbgt a1 '90 lower8)
	(lowerc a1)
lower8
	(return)
lower9
	(mov |.lowercase| a2)
	(bra errnia)
	(lentry asciip 2)
	(bffix a1 asciipn)
	(cnblt a1 '0 asciipn)
	(cnble a1 '255 asciipt)
asciipn
	(movnil a1)
asciipt
	(return)
	(lentry digitp 2)
	(bffix a1 digitpn)
	(cnblt a1 '48 digitpn)
	(cnble a1 '57 digitpt)
digitpn
	(movnil a1)
digitpt
	(return)
	(lentry letterp 2)
	(bffix a1 lettern)
	(cnblt a1 '65 lettere)
	(cnble a1 '90 lettert)
lettere
	(cnblt a1 '97 lettern)
	(cnble a1 '122 lettert)
lettern
	(movnil a1)
lettert
	(return)
	(lentry fibase 5)
	(mov |.fibase| a2)
	(mov ibase a3)
	(push '2)
	(push '36)
	(push (@ ret_call_getsetn_98))
	(bra getsetn)
ret_call_getsetn_98
	(eval ())
	(mov a1 ibase)
	(return)
	(end)
))
