(loader '(
(listext (lltclock mouse userit sysdebug syserror lerror llshwstk lltime withnoit withit clkalarm lldate llsleep runt llcallx llgetadr llgetenv llcline cstack toplevel getsetn llclock llmouse llmerro llpanic llbreak errxia errnab errgen errsxt errios erroob errbdf errstl errstc errnda errnva errsym errvec errnla errnsa errnfa errnia errnna errnaa errilb errwna errbal errbpa errudt errudm errudf errudv errfm errato err0dv errfh errfv errfr errfsp errff erres errfsgc errfn errfs systop ini_top vaga1 loc makevect stringa1 fldiff nreverse evprognr evprogn unbind10 unbind9 unbind8 unbind7 unbind6 unbind5 unbind4 unbind3 unbind2 unbind1 unbind0 sysprot evala1 eval findtag u_print probjt probj lread tryatom inicst inisymb gcnumb gcfloat gccons reenter itsoft llsystem evalan evalt))
(entry startmodule subr0)
	(title toperr)
	(xrefp llinit llsystem)
	(xrefi llinit fcons)
	(xrefi llinit bvar)
	(xrefi llinit |.t|)
	(xrefi llinit |.itsoft|)
	(xrefp llinit itsoft)
	(xrefi llinit |.llsystem|)
	(xrefp llinit reenter)
	(xrefi llinit itstate)
	(xrefi llinit bstack)
	(xrefi llinit mstack)
	(xrefi llinit mstack1)
	(xrefi llinit mstack2)
	(xrefp gc gccons)
	(xrefp gc gcfloat)
	(xrefp gc gcnumb)
	(xrefp read inisymb)
	(xrefp read inicst)
	(xrefi read cpkgc)
	(xrefi read bufat)
	(xrefp read tryatom)
	(xrefp read lread)
	(xrefp print probj)
	(xrefp print probjt)
	(xrefp print u_print)
	(xrefi eval dlink)
	(xrefp eval findtag)
	(xrefp eval eval)
	(xrefp eval evala1)
	(xrefp eval sysprot)
	(xrefi eval savea4)
	(xrefp eval unbind0)
	(xrefp eval unbind1)
	(xrefp eval unbind2)
	(xrefp eval unbind3)
	(xrefp eval unbind4)
	(xrefp eval unbind5)
	(xrefp eval unbind6)
	(xrefp eval unbind7)
	(xrefp eval unbind8)
	(xrefp eval unbind9)
	(xrefp eval unbind10)
	(xrefp eval evprogn)
	(xrefp eval evprognr)
	(xrefi eval |.eval|)
	(xrefp fntstd nreverse)
	(xrefp specnb fldiff)
	(xrefp string stringa1)
	(xrefp string makevect)
	(xrefp bllsht loc)
	(xrefp bllsht vaga1)
	(xdefp ini_top)
	(xdefp systop)
	(xdefi |.syserror|)
	(xdefi |.prtmsgs|)
	(xdefi |.prtfltl|)
	(xdefp errfs)
	(xdefp errfn)
	(xdefp errfsgc)
	(xdefp erres)
	(xdefp errff)
	(xdefp errfsp)
	(xdefp errfr)
	(xdefp errfv)
	(xdefp errfh)
	(xdefp err0dv)
	(xdefp errato)
	(xdefp errfm)
	(xdefp errudv)
	(xdefp errudf)
	(xdefp errudm)
	(xdefp errudt)
	(xdefp errbpa)
	(xdefp errbal)
	(xdefp errwna)
	(xdefp errilb)
	(xdefp errnaa)
	(xdefp errnna)
	(xdefp errnia)
	(xdefp errnfa)
	(xdefp errnsa)
	(xdefp errnla)
	(xdefp errvec)
	(xdefp errsym)
	(xdefp errnva)
	(xdefp errnda)
	(xdefp errstc)
	(xdefp errstl)
	(xdefp errbdf)
	(xdefp erroob)
	(xdefp errios)
	(xdefp errsxt)
	(xdefp errgen)
	(xdefp errnab)
	(xdefp errxia)
	(xdefi |.sysdebug|)
	(xdefi |.lsubr0|)
	(xdefi |.lsubr1|)
	(xdefi |.lsubr2|)
	(xdefi |.lsubr3|)
	(xdefi |.nlsubr|)
	(xdefi |.flsubr|)
	(xdefi |.llexpr|)
	(xdefi |.llfexpr|)
	(xdefi |.llmacro|)
	(xdefi |.lldmacro|)
	(xdefi |.llmsubr|)
	(xdefi |.lldmsubr|)
	(xdefi |.mouse|)
	(xdefp llbreak)
	(xdefp llpanic)
	(xdefp llmerro)
	(xdefp llmouse)
	(xdefp llclock)
	(xdefp getsetn)
	(pure)
ini_top
	(eval ())
	(makcst lsubr0 '5 (strg "subr0"))
	(makcst lsubr1 '5 (strg "subr1"))
	(makcst lsubr2 '5 (strg "subr2"))
	(makcst lsubr3 '5 (strg "subr3"))
	(makcst nlsubr '5 (strg "nsubr"))
	(makcst flsubr '5 (strg "fsubr"))
	(makcst llexpr '4 (strg "expr"))
	(makcst llfexpr '5 (strg "fexpr"))
	(makcst llmacro '5 (strg "macro"))
	(makcst lldmacro '6 (strg "dmacro"))
	(makcst llmsubr '5 (strg "msubr"))
	(makcst lldmsubr '6 (strg "dmsubr"))
	(makfnt toplevel '8 (strg "toplevel"))
	(mov |.llsystem| cpkgc)
	(makcst statoplevel '13 (strg "toplevel-flag"))
	(mov |.t| (cval a1))
	(makcst prtmsgs '10 (strg "print-msgs"))
	(mov '1 (cval a1))
	(makcst prtfltl '12 (strg "length-float"))
	(mov '3 (cval a1))
	(makcst fatalerror '9 (strg "error-tag"))
	(movnil cpkgc)
	(makfnt runt '7 (strg "runtime"))
	(makfnt llsleep '5 (strg "sleep"))
	(makfnt lldate '4 (strg "date"))
	(makfnt clkalarm '10 (strg "clockalarm"))
	(makfnt withit '15 (strg "with-interrupts"))
	(makfnt withnoit '18 (strg "without-interrupts"))
	(makfnt lltime '4 (strg "time"))
	(makfnt llshwstk '10 (strg "stack-info"))
	(makfnt llcline '7 (strg "comline"))
	(makfnt llgetenv '6 (strg "getenv"))
	(makfnt llgetadr '9 (strg "getglobal"))
	(makfnt llcallx '10 (strg "callextern"))
	(makfnt cstack '6 (strg "cstack"))
	(makfnt syserror '8 (strg "syserror"))
	(makfnt lerror '5 (strg "error"))
	(makfnt sysdebug '8 (strg "sysdebug"))
	(movnil (cval a1))
	(makcst mserror '3 (strg "** "))
	(makcst colon '3 (strg " : "))
	(makcst errfstk '7 (strg "errfstk"))
	(makcst errfsgc '7 (strg "errfsgc"))
	(makcst errfsud '7 (strg "errfsud"))
	(makcst errfpgc '7 (strg "errfpgc"))
	(makcst errfsym '7 (strg "errfsym"))
	(makcst errfcns '7 (strg "errfcns"))
	(makcst errfflt '7 (strg "errfflt"))
	(makcst errffix '7 (strg "errffix"))
	(makcst errfhep '7 (strg "errfhep"))
	(makcst errfstr '7 (strg "errfstr"))
	(makcst errfvec '7 (strg "errfvec"))
	(makcst errmac '6 (strg "errmac"))
	(makcst errudv '6 (strg "errudv"))
	(makcst errudf '6 (strg "errudf"))
	(makcst errudm '6 (strg "errudm"))
	(makcst errudt '6 (strg "errudt"))
	(makcst errbdf '6 (strg "errbdf"))
	(makcst errwna '6 (strg "errwna"))
	(makcst errbpa '6 (strg "errbpa"))
	(makcst errbal '6 (strg "errbal"))
	(makcst errilb '6 (strg "errilb"))
	(makcst errsxt '6 (strg "errsxt"))
	(makcst errios '6 (strg "errios"))
	(makcst err0dv '6 (strg "err0dv"))
	(makcst errnna '6 (strg "errnna"))
	(makcst errnia '6 (strg "errnia"))
	(makcst errnfa '6 (strg "errnfa"))
	(makcst errnsa '6 (strg "errnsa"))
	(makcst errnaa '6 (strg "errnaa"))
	(makcst errnla '6 (strg "errnla"))
	(makcst errnva '6 (strg "errnva"))
	(makcst erroob '6 (strg "erroob"))
	(makcst errstl '6 (strg "errstl"))
	(makcst errvec '6 (strg "errvec"))
	(makcst errnda '6 (strg "errnda"))
	(makcst errstc '6 (strg "errstc"))
	(makcst errsym '6 (strg "errsym"))
	(makcst errgen '6 (strg "errgen"))
	(makcst errnab '6 (strg "errnab"))
	(makcst errxia '6 (strg "errxia"))
	(makcst break '5 (strg "break"))
	(makfnt userit '14 (strg "user-interrupt"))
	(makfnt mouse '5 (strg "mouse"))
	(makfnt lltclock '5 (strg "clock"))
	(return)
systop
	(eval ())
	(movnil dlink)
	(push dlink)
	(push (@ unbind0))
	(stack dlink)
systop2
	(mov |.toplevel| a1)
	(movnil a2)
	(push (@ ret_call_itsoft_1))
	(bra itsoft)
ret_call_itsoft_1
	(eval ())
	(bra systop2)
	(lentry toplevel 1)
	(push (@ ret_call_lread_2))
	(bra lread)
ret_call_lread_2
	(eval ())
	(push (@ toplevr))
	(push a1)
	(push nil)
	(mov '2 a4)
	(bra eval)
toplevr
	(mov |.statoplevel| a2)
	(mov (cval a2) a2)
	(btnil a2 toplend)
	(ttymsg '2 (strg "= "))
	(push (@ ret_call_u_print_3))
	(bra u_print)
ret_call_u_print_3
	(eval ())
toplend
	(return)
	(lentry cstack 1)
	(movnil a1)
	(push a1)
	(stack a2)
	(mov dlink a4)
evstck0
	(cabeq a2 a4 evstck1)
	(popr a2 a1)
	(cabne a1 (@ evprognr) evstck0)
	(popr a2 a1)
	(ncons a1)
	(cons '11 a1)
	(cons a1 (& 0))
	(bra evstck0)
evstck1
	(movnil a1)
	(popr a4 a3)
	(cabeq a3 (@ unbind0) evstkf)
	(cabeq a3 (@ unbind1) evstkl)
	(cabeq a3 (@ unbind2) evstka)
	(cabeq a3 (@ unbind3) evstke)
	(cabeq a3 (@ unbind4) evstks)
	(cabeq a3 (@ unbind5) evstkb)
	(cabeq a3 (@ unbind6) evstku)
	(cabeq a3 (@ unbind7) evstky)
	(cabeq a3 (@ unbind8) evstkh)
	(cabeq a3 (@ unbind9) evstkt)
	(cabeq a3 (@ unbind10) evstkk)
	(ttymsg '14 (strg " error EVSTKF "))
evstkf
	(pop a1)
	(bra nreverse)
evstck2
	(eval ())
	(push a4)
	(push savea4)
	(push (@ ret_call_nreverse_4))
	(bra nreverse)
ret_call_nreverse_4
	(eval ())
	(pop a4)
	(pop a2)
	(cons a1 (& 0))
	(bra evstck0)
evstkl
	(eval ())
	(cons '1 a1)
	(popr a4 savea4)
	(popr a4 a3)
	(cons a3 a1)
	(popr a4 a3)
	(cons a3 a1)
	(popr a4 a3)
	(cons a3 a1)
	(popr a4 a2)
	(bra evstkl2)
evstkl1
	(eval ())
	(popr a4 a3)
	(cons a3 a1)
evstkl2
	(sobgez a2 evstkl1)
	(bra evstck2)
evstka
	(eval ())
	(cons '2 a1)
	(popr a4 a2)
	(bra evstka4)
evstka3
	(cons a3 a1)
	(popr a4 a3)
	(cons a3 a1)
	(popr a4 a3)
	(cons a3 a1)
evstka4
	(popr a4 a3)
	(cnbne a3 '0 evstka3)
	(mov a2 savea4)
	(bra evstck2)
evstke
	(eval ())
	(mov '3 a2)
	(bra evstkb1)
evstks
	(eval ())
	(cons '4 a1)
	(popr a4 savea4)
	(mov '10 a2)
	(bra evstkl2)
evstkb
	(eval ())
	(mov '5 a2)
evstkb1
	(cons a2 a1)
	(popr a4 savea4)
evstkb2
	(mov '1 a2)
	(bra evstkl2)
evstku
	(eval ())
	(mov '6 a2)
	(bra evstkb1)
evstky
	(eval ())
	(cons '7 a1)
	(topstr a4 savea4)
	(adjstkr a4 '1)
	(bra evstck2)
evstkh
	(eval ())
	(mov '8 a2)
	(bra evstkb1)
evstkt
	(eval ())
	(cons '9 a1)
	(popr a4 savea4)
	(adjstkr a4 '1)
	(popr a4 a2)
	(bra evstkl2)
evstkk
	(eval ())
	(mov '10 a2)
	(bra evstkb1)
	(lentry llcline 2)
	(mov |.llcline| savea4)
	(push (@ ret_call_stringa1_5))
	(bra stringa1)
ret_call_stringa1_5
	(eval ())
	(cabeq itstate '0 llclin2)
	(mov (@ llclin1) a3)
	(push (@ ret_call_sysprot_6))
	(bra sysprot)
ret_call_sysprot_6
	(eval ())
	(pop a1)
	(mov '1 itstate)
	(bri a3)
llclin1
	(mov '0 itstate)
llclin2
	(cline a1)
	(mov |.t| a1)
	(return)
	(lentry llgetenv 2)
	(mov |.llgetenv| savea4)
	(push (@ ret_call_stringa1_7))
	(bra stringa1)
ret_call_stringa1_7
	(eval ())
	(getenvrn a1 bufat a1)
	(cnbne a1 '0 gtenv8)
	(movnil a1)
	(return)
gtenv8
	(mov bufat a2)
	(bra tryatom)
	(lentry llgetadr 2)
	(mov |.llgetadr| savea4)
	(push (@ ret_call_stringa1_8))
	(bra stringa1)
ret_call_stringa1_8
	(eval ())
	(getglobal a1 a1)
	(bra loc)
	(lentry llcallx 5)
	(decr a4)
	(xspmov a4 a1)
	(mov |.llcallx| a2)
	(push (@ ret_call_vaga1_9))
	(bra vaga1)
ret_call_vaga1_9
	(eval ())
	(movxsp a1 a4)
	(incr a4)
	(callg a4 a1)
	(adjstk a4)
	(return)
	(lentry runt 1)
	(runtime a1)
	(return)
	(lentry llsleep 2)
	(btfloat a1 llsleep1)
	(bffix a1 llsleep2)
	(float a1)
llsleep1
	(sleep a1)
	(return)
llsleep2
	(mov |.llsleep| a2)
	(bra errnna)
	(lentry lldate 1)
	(mov '8 a1)
	(movnil a2)
	(push (@ ret_call_makevect_10))
	(bra makevect)
ret_call_makevect_10
	(eval ())
	(mov |.lldate| (typ a1))
	(date a1)
	(return)
	(lentry clkalarm 2)
	(btfloat a1 alrms1)
	(bffix a1 alrmer2)
	(float a1)
alrms1
	(setalarm a1)
	(return)
alrmer2
	(mov |.clkalarm| a2)
	(bra errnna)
	(lentry withit 6)
	(cabne itstate '0 withit2)
	(mov (@ withit1) a3)
	(push (@ ret_call_sysprot_11))
	(bra sysprot)
ret_call_sysprot_11
	(eval ())
	(pop a1)
	(mov '0 itstate)
	(bri a3)
withit1
	(mov '1 itstate)
withit2
	(bra evprogn)
	(lentry withnoit 6)
	(cabeq itstate '0 withno2)
	(mov (@ withno1) a3)
	(push (@ ret_call_sysprot_12))
	(bra sysprot)
ret_call_sysprot_12
	(eval ())
	(pop a1)
	(mov '1 itstate)
	(bri a3)
withno1
	(mov '0 itstate)
withno2
	(bra evprogn)
	(lentry lltime 2)
	(runtime a2)
	(push a2)
	(push (@ ret_call_evala1_13))
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evala1_13
	(eval ())
	(runtime a1)
	(xtopst a1)
	(push a1)
	(mov '2 a4)
	(bra fldiff)
	(lentry llshwstk 2)
	(stack a4)
	(mov bstack a2)
	(mov mstack a3)
llshwstk1
	(chkstk a3 llshwstk2)
	(push a2)
	(bra llshwstk1)
llshwstk2
	(sstack a4)
	(push (@ ret_call_evala1_14))
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evala1_14
	(eval ())
	(stack a3)
	(mov '0 a1)
	(mov '0 a2)
llshwstk3
	(adjstk '-1)
	(xspmov '0 a4)
	(cabeq bstack a4 llshwstk4)
	(incrink a1 a2)
	(bra llshwstk3)
llshwstk4
	(sstack a3)
	(cnbeq '0 a2 llshwstk5)
	(cons a2 a1)
llshwstk5
	(return)
	(lentry lerror 4)
	(ncons a3)
	(cons a2 a3)
	(cons a1 a3)
	(mov a3 a2)
	(mov |.syserror| a1)
	(bra itsoft)
serror
	(eval ())
	(ncons a1)
	(cons a3 a1)
	(xcons a1 a2)
	(mov |.syserror| a1)
	(bra itsoft)
ferror
	(eval ())
	(push a1)
	(mov (cval a1) a2)
	(btstrg a2 ferror1)
	(push (@ ret_call_stringa1_15))
	(bra stringa1)
ret_call_stringa1_15
	(eval ())
	(mov a1 a2)
ferror1
	(hgsize a2 a1)
	(ttystrg a1 a2)
	(ttycrlf)
	(pop a1)
ferror2
	(movnil a1)
	(mov |.fatalerror| a2)
	(movnil a3)
	(movnil a4)
	(bra findtag)
	(lentry syserror 4)
	(push a3)
	(push a2)
	(push a1)
	(mov |.mserror| a1)
	(push (@ ret_call_probj_16))
	(bra probj)
ret_call_probj_16
	(eval ())
	(pop a1)
	(push (@ ret_call_probj_17))
	(bra probj)
ret_call_probj_17
	(eval ())
	(mov |.colon| a1)
	(push (@ ret_call_probj_18))
	(bra probj)
ret_call_probj_18
	(eval ())
	(pop a1)
	(push (@ ret_call_probj_19))
	(bra probj)
ret_call_probj_19
	(eval ())
	(mov |.colon| a1)
	(push (@ ret_call_probj_20))
	(bra probj)
ret_call_probj_20
	(eval ())
	(pop a1)
	(push (@ ret_call_probjt_21))
	(bra probjt)
ret_call_probjt_21
	(eval ())
	(bra reenter)
	(lentry sysdebug 1)
	(return)
errfs
	(eval ())
	(mov |.errfstk| a1)
	(chkstk mstack2 ferror)
	(mov (@ errfs0) a3)
	(push (@ ret_call_sysprot_22))
	(bra sysprot)
ret_call_sysprot_22
	(eval ())
	(pop a1)
	(mov mstack1 mstack)
	(bri a3)
errfs0
	(mov mstack2 mstack)
	(mov a1 a3)
	(mov |.eval| a2)
	(movnil a1)
	(bra serror)
errfsgc
	(eval ())
	(mov |.errfsgc| a1)
	(bra ferror)
erres
	(eval ())
	(mov |.errfsud| a1)
	(mov (cval a1) a2)
	(btstrg a2 erres2)
	(push (@ ret_call_stringa1_23))
	(bra stringa1)
ret_call_stringa1_23
	(eval ())
	(mov a1 a2)
erres2
	(hgsize a2 a1)
	(ttystrg a1 a2)
	(ttycrlf)
	(bra reenter)
errfsp
	(eval ())
	(mov |.errfpgc| a1)
	(bra ferror)
errato
	(eval ())
	(mov |.errfsym| a1)
	(bra ferror)
errfm
	(eval ())
	(mov |.errfcns| a1)
	(bra ferror)
errff
	(eval ())
	(mov |.errfflt| a1)
	(bra ferror)
errfn
	(eval ())
	(mov |.errffix| a1)
	(bra ferror)
errfh
	(eval ())
	(mov |.errfhep| a1)
	(bra ferror)
errfr
	(eval ())
	(mov |.errfstr| a1)
	(bra ferror)
errfv
	(eval ())
	(mov |.errfvec| a1)
	(bra ferror)
errudv
	(eval ())
	(mov |.errudv| a3)
	(bra serror)
errudf
	(eval ())
	(mov |.errudf| a3)
	(bra serror)
errudm
	(eval ())
	(mov |.errudm| a3)
	(bra serror)
errudt
	(eval ())
	(mov |.errudt| a3)
	(bra serror)
errbdf
	(eval ())
	(mov |.errbdf| a3)
	(bra serror)
errwna
	(eval ())
	(mov |.errwna| a3)
	(bra serror)
errbpa
	(eval ())
	(mov |.errbpa| a3)
	(bra serror)
errbal
	(eval ())
	(mov |.errbal| a3)
	(bra serror)
errilb
	(eval ())
	(mov |.errilb| a3)
	(bra serror)
errsxt
	(eval ())
	(mov |.errsxt| a3)
	(bra serror)
errios
	(eval ())
	(mov |.errios| a3)
	(bra serror)
err0dv
	(eval ())
	(mov |.err0dv| a3)
	(bra serror)
errnaa
	(eval ())
	(mov |.errnaa| a3)
	(bra serror)
errnna
	(eval ())
	(mov |.errnna| a3)
	(bra serror)
errnia
	(eval ())
	(mov |.errnia| a3)
	(bra serror)
errnfa
	(eval ())
	(mov |.errnfa| a3)
	(bra serror)
errnsa
	(eval ())
	(mov |.errnsa| a3)
	(bra serror)
errnla
	(eval ())
	(mov |.errnla| a3)
	(bra serror)
errnva
	(eval ())
	(mov |.errnva| a3)
	(bra serror)
errstl
	(eval ())
	(mov |.errstl| a3)
	(bra serror)
erroob
	(eval ())
	(mov |.erroob| a3)
	(bra serror)
errvec
	(eval ())
	(mov |.errvec| a3)
	(bra serror)
errnda
	(eval ())
	(mov |.errnda| a3)
	(bra serror)
errstc
	(eval ())
	(mov |.errstc| a3)
	(bra serror)
errsym
	(eval ())
	(mov |.errsym| a3)
	(bra serror)
errgen
	(eval ())
	(mov |.errgen| a3)
	(bra serror)
errnab
	(eval ())
	(mov |.errnab| a3)
	(bra serror)
errxia
	(eval ())
	(mov |.errxia| a3)
	(bra serror)
llmerro
	(eval ())
	(push a1)
	(push a2)
	(push a3)
	(push a4)
	(push (@ ret_call_llsystem_24))
	(bra llsystem)
ret_call_llsystem_24
	(eval ())
	(ncons a2)
	(cons |.errmac| a2)
	(cons a1 a2)
	(mov |.syserror| a1)
	(push (@ ret_call_itsoft_25))
	(bra itsoft)
ret_call_itsoft_25
	(eval ())
	(pop a4)
	(pop a3)
	(pop a2)
	(pop a1)
	(return)
llbreak
	(eval ())
	(push a1)
	(push a2)
	(push a3)
	(push a4)
	(mov |.userit| a1)
	(movnil a2)
	(push (@ ret_call_itsoft_26))
	(bra itsoft)
ret_call_itsoft_26
	(eval ())
	(pop a4)
	(pop a3)
	(pop a2)
	(pop a1)
	(return)
llpanic
	(eval ())
	(push a1)
	(push a2)
	(push a3)
	(push a4)
	(movnil a2)
	(ncons a2)
	(cons |.break| a2)
	(cons |.break| a2)
	(mov |.syserror| a1)
	(push (@ ret_call_itsoft_27))
	(bra itsoft)
ret_call_itsoft_27
	(eval ())
	(pop a4)
	(pop a3)
	(pop a2)
	(pop a1)
	(return)
llmouse
	(eval ())
	(push a1)
	(push a2)
	(push a3)
	(push a4)
	(movnil a2)
	(mov |.mouse| a1)
	(push (@ ret_call_itsoft_28))
	(bra itsoft)
ret_call_itsoft_28
	(eval ())
	(pop a4)
	(pop a3)
	(pop a2)
	(pop a1)
	(return)
llclock
	(eval ())
	(push a1)
	(push a2)
	(push a3)
	(push a4)
	(mov |.lltclock| a1)
	(movnil a2)
	(push (@ ret_call_itsoft_29))
	(bra itsoft)
ret_call_itsoft_29
	(eval ())
	(pop a4)
	(pop a3)
	(pop a2)
	(pop a1)
	(return)
	(lentry userit 1)
	(cabeq itstate '1 userit2)
	(mov (@ userit1) a3)
	(push (@ ret_call_sysprot_30))
	(bra sysprot)
ret_call_sysprot_30
	(eval ())
	(pop a1)
	(mov '0 itstate)
	(bri a3)
userit1
	(mov '1 itstate)
userit2
	(movnil a2)
	(ncons a2)
	(cons |.break| a2)
	(cons |.break| a2)
	(mov |.syserror| a1)
	(bra itsoft)
	(lentry mouse 1)
	(movnil a1)
	(return)
	(lentry lltclock 1)
	(movnil a1)
	(return)
getsetn
	(eval ())
	(cnbeq a4 '0 getsetn1)
	(cnbeq a4 '1 getsetn2)
	(mov '1 a1)
	(bra errwna)
getsetn1
	(pop a4)
	(mov a3 a1)
	(adjstk '2)
	(bri a4)
getsetn2
	(eval ())
	(pop a4)
	(pop a3)
	(xspmov '1 a1)
	(bffix a1 errnia)
	(cnbgt a1 a3 erroob)
	(pop a3)
	(cnblt a1 a3 erroob)
	(pop a1)
	(bri a4)
	(end)
))
