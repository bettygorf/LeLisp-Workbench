; ;;; This module descriptor was generated by Analyser
defmodule
rtprint
files (
rtprint
)
import(
defvar
rtmsg)

export (

; ;;; Exports unless unused
#:crunch:print
#:crunch:printerror
#:crunch:pprint
#:crunch:prin
#:crunch:printf
#:crunch:prinf
#:crunch:prinflush
#:crunch:terpri
#:crunch:save-file
)

;;; Added automatically, don't type beyond this line.
cpexport (
(#:crunch:print dmsubr ())
(#:crunch:printerror dmsubr ())
(#:crunch:pprint dmsubr ())
(#:crunch:prin dmsubr ())
(#:crunch:printf dmsubr ())
(#:crunch:prinf dmsubr ())
(#:crunch:prinflush dmsubr ())
(#:crunch:terpri dmsubr ())
(#:crunch:save-file subr1 ())
)
cpfunctions
()
cpimport
()
cpenv (
files
module
defvar
format
rtmsg
((defmacro #:crunch:print args (list 'if '(ge #:crunch:verbose 2) (list 'with '((outchan ()) (rmargin (add1 (slen (outbuf))))) (cons 'print args))))
)((defmacro #:crunch:printerror (a b c) (list 'if '(ge #:crunch:verbose 2) (list 'with '((outchan ())) (list 'printerror a b c))))
)((defmacro #:crunch:pprint args (list 'if '(ge #:crunch:verbose 2) (list 'with '((outchan ())) (cons 'pprint args))))
)((defmacro #:crunch:prin args (list 'if '(ge #:crunch:verbose 2) (list 'with '((outchan ())) (cons 'prin args))))
)((defmacro #:crunch:printf args (list 'if '(ge #:crunch:verbose 2) (mcons 'with '((outchan ())) (cons 'printf args) '((terpri)))))
)((defmacro #:crunch:prinf args (list 'if '(ge #:crunch:verbose 2) (list 'with '((outchan ())) (cons 'prinf args))))
)((defmacro #:crunch:prinflush args (list 'if '(ge #:crunch:verbose 2) (list 'with '((outchan ())) (cons 'prinflush args))))
)((defmacro #:crunch:terpri args (list 'if '(ge #:crunch:verbose 2) (list 'with '((outchan ())) (cons 'terpri args))))
)((defmacro #:cruncherr:printerror (a b c) (list 'with '((outchan ())) (list 'let '((#:system:print-for-read ())) (list 'printerror a b c))))
)((defmacro #:cruncherr:print args (list 'with '((outchan ())) (list 'let '((#:system:print-for-read ())) (cons 'print args))))
)((defmacro #:cruncherr:pprint args (list 'with '((outchan ())) (list 'let '((#:system:print-for-read ())) (cons 'pprint args))))
)((defmacro #:cruncherr:terpri () '(with ((outchan ())) (let ((#:system:print-for-read ())) (terpri))))
)((defmacro #:cruncherr:warn msg (list 'with '((outchan ())) (list 'let '((#:system:print-for-read ())) (mcons 'print '"* Warning : " msg))))
)((defmacro #:cruncherr:prinflush msg (list 'with '((outchan ())) (list 'let '((#:system:print-for-read ())) (cons 'prinflush msg))))
))
