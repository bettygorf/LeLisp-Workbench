(loader '((title |rtprint.lo|)))
(loader'((fentry #:crunch:print dmsubr)
(entry #:crunch:print dmsubr)
(push (@ 101))
(push 'if)
(push '(ge #:crunch:verbose 2))
(push (@ 102))
(push 'with)
(push '((outchan ()) (rmargin (add1 (slen (outbuf))))))
(mov a1 a2)
(mov 'print a1)
(jcall cons)
(push a1)
(mov '3 a4)
(jmp list)
102
(eval ())
(push a1)
(mov '3 a4)
(jmp list)
101
(eval ())
(return)
))
(loader'((fentry #:crunch:printerror dmsubr)
(entry #:crunch:printerror dmsubr)
(mov (cdr a1) a4)
(mov (car a1) a1)
(mov (cdr a4) a3)
(mov (car a4) a4)
(mov (car a3) a3)
(push (@ 101))
(push 'if)
(push '(ge #:crunch:verbose 2))
(push (@ 102))
(push 'with)
(push '((outchan ())))
(push (@ 103))
(push 'printerror)
(push a1)
(push a4)
(push a3)
(mov '4 a4)
(jmp list)
103
(eval ())
(push a1)
(mov '3 a4)
(jmp list)
102
(eval ())
(push a1)
(mov '3 a4)
(jmp list)
101
(eval ())
(return)
))
(loader'((fentry #:crunch:pprint dmsubr)
(entry #:crunch:pprint dmsubr)
(push (@ 101))
(push 'if)
(push '(ge #:crunch:verbose 2))
(push (@ 102))
(push 'with)
(push '((outchan ())))
(mov a1 a2)
(mov 'pprint a1)
(jcall cons)
(push a1)
(mov '3 a4)
(jmp list)
102
(eval ())
(push a1)
(mov '3 a4)
(jmp list)
101
(eval ())
(return)
))
(loader'((fentry #:crunch:prin dmsubr)
(entry #:crunch:prin dmsubr)
(push (@ 101))
(push 'if)
(push '(ge #:crunch:verbose 2))
(push (@ 102))
(push 'with)
(push '((outchan ())))
(mov a1 a2)
(mov 'prin a1)
(jcall cons)
(push a1)
(mov '3 a4)
(jmp list)
102
(eval ())
(push a1)
(mov '3 a4)
(jmp list)
101
(eval ())
(return)
))
(loader'((fentry #:crunch:printf dmsubr)
(entry #:crunch:printf dmsubr)
(push (@ 101))
(push 'if)
(push '(ge #:crunch:verbose 2))
(push (@ 102))
(push 'with)
(push '((outchan ())))
(mov a1 a2)
(mov 'printf a1)
(jcall cons)
(push a1)
(push '((terpri)))
(mov '4 a4)
(jmp mcons)
102
(eval ())
(push a1)
(mov '3 a4)
(jmp list)
101
(eval ())
(return)
))
(loader'((fentry #:crunch:prinf dmsubr)
(entry #:crunch:prinf dmsubr)
(push (@ 101))
(push 'if)
(push '(ge #:crunch:verbose 2))
(push (@ 102))
(push 'with)
(push '((outchan ())))
(mov a1 a2)
(mov 'prinf a1)
(jcall cons)
(push a1)
(mov '3 a4)
(jmp list)
102
(eval ())
(push a1)
(mov '3 a4)
(jmp list)
101
(eval ())
(return)
))
(loader'((fentry #:crunch:prinflush dmsubr)
(entry #:crunch:prinflush dmsubr)
(push (@ 101))
(push 'if)
(push '(ge #:crunch:verbose 2))
(push (@ 102))
(push 'with)
(push '((outchan ())))
(mov a1 a2)
(mov 'prinflush a1)
(jcall cons)
(push a1)
(mov '3 a4)
(jmp list)
102
(eval ())
(push a1)
(mov '3 a4)
(jmp list)
101
(eval ())
(return)
))
(loader'((fentry #:crunch:terpri dmsubr)
(entry #:crunch:terpri dmsubr)
(push (@ 101))
(push 'if)
(push '(ge #:crunch:verbose 2))
(push (@ 102))
(push 'with)
(push '((outchan ())))
(mov a1 a2)
(mov 'terpri a1)
(jcall cons)
(push a1)
(mov '3 a4)
(jmp list)
102
(eval ())
(push a1)
(mov '3 a4)
(jmp list)
101
(eval ())
(return)
))
(loader'((fentry #:crunch:save-file subr1)
(entry #:crunch:save-file subr1)
(push a1)
(jcall pathname)
(mov a1 (& 0))
(jcall probefile)
(btnil a1 101)
(push (@ 102))
(mov (& 1) a1)
(jcall pathname-type)
(btnil (cvalq #:system:dosp) 103)
(hgsize a1 a4)
(cnblt a4 '3 103)
(push (@ 105))
(push a1)
(push '0)
(push '2)
(mov '3 a4)
(jmp substring)
105
(eval ())
(mov a1 a4)
(bra 104)
103
(mov a1 a4)
104
(push a4)
(btnil (cvalq #:system:unixp) 106)
(mov '"~" a4)
(bra 107)
106
(btnil (cvalq #:system:dosp) 108)
(mov '"~" a4)
(bra 107)
108
(mov '"SAV" a4)
107
(push a4)
(mov '2 a4)
(jmp catenate)
102
(eval ())
(push (@ 110))
(push nil)
(push nil)
(push nil)
(push nil)
(push a1)
(mov '5 a4)
(jmp make-pathname)
110
(eval ())
(mov (& 0) a2)
(jcall merge-pathnames)
(push a1)
(push nil)
(push '0)
(push nil)
(push (cvalq #:system:debug))
(mov (& 1) (cvalq #:system:debug))
(push (cvalq #:system:print-msgs))
(mov (& 3) (cvalq #:system:print-msgs))
(push (cvalq #:system:error-flag))
(mov (& 5) (cvalq #:system:error-flag))
(push '3)
(push '(#:system:debug #:system:print-msgs #:system:error-flag))
(push 'lambda)
(push llink)
(push dlink)
(push cbindn)
(stack dlink)
(push (@ 113))
(push '#:system:error-tag)
(push dlink)
(push tag)
(stack dlink)
(mov a1 a2)
(mov (& 17) a1)
(jcall renamefile)
(jcall ncons)
(mov (& 1) dlink)
(adjstk '4)
113
(eval ())
(mov (& 1) dlink)
(mov (& 6) (cvalq #:system:error-flag))
(mov (& 7) (cvalq #:system:print-msgs))
(mov (& 8) (cvalq #:system:debug))
(adjstk '12)
(btnil a1 111)
(cnblt (cvalq #:crunch:verbose) '1 114)
(push (@ 116))
(push (@ 117))
(push '".. ")
(push (@ 118))
(push nil)
(push '"Previous file ~A saved in")
(push (& 7))
(mov '3 a4)
(jmp format)
118
(eval ())
(push a1)
(push '" : ")
(mov '3 a4)
(jmp catenate)
117
(eval ())
(push a1)
(push (& 2))
(mov '2 a4)
(jmp print)
116
(eval ())
(adjstk '2)
(return)
114
(mov nil a1)
(adjstk '2)
(return)
111
(mov (& 0) a3)
(mov '"permission denied" a2)
(mov 'renamefile a1)
(adjstk '2)
(jmp printerror)
101
(adjstk '1)
(return)
))
(loader '((end)))
