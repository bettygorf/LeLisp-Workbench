(loader '((title |ckern.lo|)))
(defvar #:sys-package:colon 'kern)
(defvar bn_digit_size 32)
(defvar bn_word_size 15)
(defvar #:kern:no_byte_in_digit (div bn_digit_size 8))
(if (eq 0 (getglobal "_BnDivideDigit")) (progn (let ((f (search-in-path #:system:path "kern.o"))) (ifn f (error 'kern 'errfile "kern.o") (prinflush ";; Loading " f " ... ") (cload f) (print "Done!")))))
(loader'((fentry bnsettozero subr3)
(entry bnsettozero subr3)
(push a3)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov '_BnSetToZero a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (#:system:cached-getglobal '_BnSetToZero))))
(push '0)
(push (& 3))
(push '3)
(push (& 6))
(push '0)
(push (& 9))
(push '0)
(mov '8 a4)
(jmp callextern)
103
(eval ())
(adjstk '3)
(return)
))
(loader'((fentry bnassign nsubr)
(entry bnassign nsubr)
(cnbeq a4 '5 101)
(mov 'bnassign a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 4) 103)
(mov (& 4) a3)
(mov 'errnsa a2)
(mov '_BnAssign a1)
(jcall error)
103
(btstrg (& 2) 105)
(mov (& 2) a3)
(mov 'errnsa a2)
(mov '_BnAssign a1)
(jcall error)
105
(push (@ 106))
(push (eval (kwote (#:system:cached-getglobal '_BnAssign))))
(push '0)
(push (& 7))
(push '3)
(push (& 8))
(push '0)
(push (& 9))
(push '3)
(push (& 10))
(push '0)
(push (& 11))
(push '0)
(mov '12 a4)
(jmp callextern)
106
(eval ())
(adjstk '5)
(return)
))
(loader'((fentry bnsetdigit subr3)
(entry bnsetdigit subr3)
(push a3)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov '_BnSetDigit a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (#:system:cached-getglobal '_BnSetDigit))))
(push '0)
(push (& 3))
(push '3)
(push (& 6))
(push '0)
(push (& 9))
(push '0)
(mov '8 a4)
(jmp callextern)
103
(eval ())
(adjstk '3)
(return)
))
(loader'((fentry bngetdigit subr2)
(entry bngetdigit subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov '_BnGetDigit a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (#:system:cached-getglobal '_BnGetDigit))))
(push '1)
(push (& 3))
(push '3)
(push (& 6))
(push '0)
(mov '6 a4)
(jmp callextern)
103
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry bnnumdigits subr3)
(entry bnnumdigits subr3)
(push a3)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov '_BnNumDigits a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (#:system:cached-getglobal '_BnNumDigits))))
(push '0)
(push (& 3))
(push '3)
(push (& 6))
(push '0)
(push (& 9))
(push '0)
(mov '8 a4)
(jmp callextern)
103
(eval ())
(adjstk '3)
(return)
))
(loader'((fentry bnnumleadingzerobitsindigit subr2)
(entry bnnumleadingzerobitsindigit subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov '_BnNumLeadingZeroBitsInDigit a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (#:system:cached-getglobal '_BnNumLeadingZeroBitsInDigit))))
(push '1)
(push (& 3))
(push '3)
(push (& 6))
(push '0)
(mov '6 a4)
(jmp callextern)
103
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry bnisdigitzero subr2)
(entry bnisdigitzero subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov '_BnIsDigitZero a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (#:system:cached-getglobal '_BnIsDigitZero))))
(push '1)
(push (& 3))
(push '3)
(push (& 6))
(push '0)
(mov '6 a4)
(jmp callextern)
103
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry bnisdigitnormalized subr2)
(entry bnisdigitnormalized subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov '_BnIsDigitNormalized a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (#:system:cached-getglobal '_BnIsDigitNormalized))))
(push '1)
(push (& 3))
(push '3)
(push (& 6))
(push '0)
(mov '6 a4)
(jmp callextern)
103
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry bnisdigitodd subr2)
(entry bnisdigitodd subr2)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov '_BnIsDigitOdd a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (#:system:cached-getglobal '_BnIsDigitOdd))))
(push '1)
(push (& 3))
(push '3)
(push (& 6))
(push '0)
(mov '6 a4)
(jmp callextern)
103
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry bncomparedigits nsubr)
(entry bncomparedigits nsubr)
(cnbeq a4 '4 101)
(mov 'bncomparedigits a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 3) 103)
(mov (& 3) a3)
(mov 'errnsa a2)
(mov '_BnCompareDigits a1)
(jcall error)
103
(btstrg (& 1) 105)
(mov (& 1) a3)
(mov 'errnsa a2)
(mov '_BnCompareDigits a1)
(jcall error)
105
(push (@ 106))
(push (eval (kwote (#:system:cached-getglobal '_BnCompareDigits))))
(push '1)
(push (& 6))
(push '3)
(push (& 7))
(push '0)
(push (& 8))
(push '3)
(push (& 9))
(push '0)
(mov '10 a4)
(jmp callextern)
106
(eval ())
(adjstk '4)
(return)
))
(loader'((fentry bncomplement subr3)
(entry bncomplement subr3)
(push a3)
(push a2)
(push a1)
(btstrg a1 102)
(mov a1 a3)
(mov 'errnsa a2)
(mov '_BnComplement a1)
(jcall error)
102
(push (@ 103))
(push (eval (kwote (#:system:cached-getglobal '_BnComplement))))
(push '0)
(push (& 3))
(push '3)
(push (& 6))
(push '0)
(push (& 9))
(push '0)
(mov '8 a4)
(jmp callextern)
103
(eval ())
(adjstk '3)
(return)
))
(loader'((fentry bnanddigits nsubr)
(entry bnanddigits nsubr)
(cnbeq a4 '4 101)
(mov 'bnanddigits a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 3) 103)
(mov (& 3) a3)
(mov 'errnsa a2)
(mov '_BnAndDigits a1)
(jcall error)
103
(btstrg (& 1) 105)
(mov (& 1) a3)
(mov 'errnsa a2)
(mov '_BnAndDigits a1)
(jcall error)
105
(push (@ 106))
(push (eval (kwote (#:system:cached-getglobal '_BnAndDigits))))
(push '0)
(push (& 6))
(push '3)
(push (& 7))
(push '0)
(push (& 8))
(push '3)
(push (& 9))
(push '0)
(mov '10 a4)
(jmp callextern)
106
(eval ())
(adjstk '4)
(return)
))
(loader'((fentry bnordigits nsubr)
(entry bnordigits nsubr)
(cnbeq a4 '4 101)
(mov 'bnordigits a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 3) 103)
(mov (& 3) a3)
(mov 'errnsa a2)
(mov '_BnOrDigits a1)
(jcall error)
103
(btstrg (& 1) 105)
(mov (& 1) a3)
(mov 'errnsa a2)
(mov '_BnOrDigits a1)
(jcall error)
105
(push (@ 106))
(push (eval (kwote (#:system:cached-getglobal '_BnOrDigits))))
(push '0)
(push (& 6))
(push '3)
(push (& 7))
(push '0)
(push (& 8))
(push '3)
(push (& 9))
(push '0)
(mov '10 a4)
(jmp callextern)
106
(eval ())
(adjstk '4)
(return)
))
(loader'((fentry bnxordigits nsubr)
(entry bnxordigits nsubr)
(cnbeq a4 '4 101)
(mov 'bnxordigits a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 3) 103)
(mov (& 3) a3)
(mov 'errnsa a2)
(mov '_BnXorDigits a1)
(jcall error)
103
(btstrg (& 1) 105)
(mov (& 1) a3)
(mov 'errnsa a2)
(mov '_BnXorDigits a1)
(jcall error)
105
(push (@ 106))
(push (eval (kwote (#:system:cached-getglobal '_BnXorDigits))))
(push '0)
(push (& 6))
(push '3)
(push (& 7))
(push '0)
(push (& 8))
(push '3)
(push (& 9))
(push '0)
(mov '10 a4)
(jmp callextern)
106
(eval ())
(adjstk '4)
(return)
))
(loader'((fentry bnshiftleft nsubr)
(entry bnshiftleft nsubr)
(cnbeq a4 '6 101)
(mov 'bnshiftleft a1)
(mov '6 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 5) 103)
(mov (& 5) a3)
(mov 'errnsa a2)
(mov '_BnShiftLeft a1)
(jcall error)
103
(btstrg (& 2) 105)
(mov (& 2) a3)
(mov 'errnsa a2)
(mov '_BnShiftLeft a1)
(jcall error)
105
(mov (& 0) a1)
(jcall numberp)
(bfnil a1 106)
(mov (& 0) a3)
(mov 'errnna a2)
(mov '_BnShiftLeft a1)
(jcall error)
(bra 107)
106
(mov (& 0) a1)
(jcall fix)
(mov a1 (& 0))
107
(push (@ 108))
(push (eval (kwote (#:system:cached-getglobal '_BnShiftLeft))))
(push '0)
(push (& 8))
(push '3)
(push (& 9))
(push '0)
(push (& 10))
(push '0)
(push (& 11))
(push '3)
(push (& 12))
(push '0)
(push (& 13))
(push '1)
(mov '14 a4)
(jmp callextern)
108
(eval ())
(adjstk '6)
(return)
))
(loader'((fentry bnshiftright nsubr)
(entry bnshiftright nsubr)
(cnbeq a4 '6 101)
(mov 'bnshiftright a1)
(mov '6 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 5) 103)
(mov (& 5) a3)
(mov 'errnsa a2)
(mov '_BnShiftRight a1)
(jcall error)
103
(btstrg (& 2) 105)
(mov (& 2) a3)
(mov 'errnsa a2)
(mov '_BnShiftRight a1)
(jcall error)
105
(mov (& 0) a1)
(jcall numberp)
(bfnil a1 106)
(mov (& 0) a3)
(mov 'errnna a2)
(mov '_BnShiftRight a1)
(jcall error)
(bra 107)
106
(mov (& 0) a1)
(jcall fix)
(mov a1 (& 0))
107
(push (@ 108))
(push (eval (kwote (#:system:cached-getglobal '_BnShiftRight))))
(push '0)
(push (& 8))
(push '3)
(push (& 9))
(push '0)
(push (& 10))
(push '0)
(push (& 11))
(push '3)
(push (& 12))
(push '0)
(push (& 13))
(push '1)
(mov '14 a4)
(jmp callextern)
108
(eval ())
(adjstk '6)
(return)
))
(loader'((fentry bnaddcarry nsubr)
(entry bnaddcarry nsubr)
(cnbeq a4 '4 101)
(mov 'bnaddcarry a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 3) 103)
(mov (& 3) a3)
(mov 'errnsa a2)
(mov '_BnAddCarry a1)
(jcall error)
103
(mov (& 0) a1)
(jcall numberp)
(bfnil a1 104)
(mov (& 0) a3)
(mov 'errnna a2)
(mov '_BnAddCarry a1)
(jcall error)
(bra 105)
104
(mov (& 0) a1)
(jcall fix)
(mov a1 (& 0))
105
(push (@ 106))
(push (eval (kwote (#:system:cached-getglobal '_BnAddCarry))))
(push '1)
(push (& 6))
(push '3)
(push (& 7))
(push '0)
(push (& 8))
(push '0)
(push (& 9))
(push '1)
(mov '10 a4)
(jmp callextern)
106
(eval ())
(adjstk '4)
(return)
))
(loader'((fentry bnadd nsubr)
(entry bnadd nsubr)
(cnbeq a4 '7 101)
(mov 'bnadd a1)
(mov '7 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 6) 103)
(mov (& 6) a3)
(mov 'errnsa a2)
(mov '_BnAdd a1)
(jcall error)
103
(btstrg (& 3) 105)
(mov (& 3) a3)
(mov 'errnsa a2)
(mov '_BnAdd a1)
(jcall error)
105
(mov (& 0) a1)
(jcall numberp)
(bfnil a1 106)
(mov (& 0) a3)
(mov 'errnna a2)
(mov '_BnAdd a1)
(jcall error)
(bra 107)
106
(mov (& 0) a1)
(jcall fix)
(mov a1 (& 0))
107
(push (@ 108))
(push (eval (kwote (#:system:cached-getglobal '_BnAdd))))
(push '1)
(push (& 9))
(push '3)
(push (& 10))
(push '0)
(push (& 11))
(push '0)
(push (& 12))
(push '3)
(push (& 13))
(push '0)
(push (& 14))
(push '0)
(push (& 15))
(push '1)
(mov '16 a4)
(jmp callextern)
108
(eval ())
(adjstk '7)
(return)
))
(loader'((fentry bnsubtractborrow nsubr)
(entry bnsubtractborrow nsubr)
(cnbeq a4 '4 101)
(mov 'bnsubtractborrow a1)
(mov '4 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 3) 103)
(mov (& 3) a3)
(mov 'errnsa a2)
(mov '_BnSubtractBorrow a1)
(jcall error)
103
(mov (& 0) a1)
(jcall numberp)
(bfnil a1 104)
(mov (& 0) a3)
(mov 'errnna a2)
(mov '_BnSubtractBorrow a1)
(jcall error)
(bra 105)
104
(mov (& 0) a1)
(jcall fix)
(mov a1 (& 0))
105
(push (@ 106))
(push (eval (kwote (#:system:cached-getglobal '_BnSubtractBorrow))))
(push '1)
(push (& 6))
(push '3)
(push (& 7))
(push '0)
(push (& 8))
(push '0)
(push (& 9))
(push '1)
(mov '10 a4)
(jmp callextern)
106
(eval ())
(adjstk '4)
(return)
))
(loader'((fentry bnsubtract nsubr)
(entry bnsubtract nsubr)
(cnbeq a4 '7 101)
(mov 'bnsubtract a1)
(mov '7 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 6) 103)
(mov (& 6) a3)
(mov 'errnsa a2)
(mov '_BnSubtract a1)
(jcall error)
103
(btstrg (& 3) 105)
(mov (& 3) a3)
(mov 'errnsa a2)
(mov '_BnSubtract a1)
(jcall error)
105
(mov (& 0) a1)
(jcall numberp)
(bfnil a1 106)
(mov (& 0) a3)
(mov 'errnna a2)
(mov '_BnSubtract a1)
(jcall error)
(bra 107)
106
(mov (& 0) a1)
(jcall fix)
(mov a1 (& 0))
107
(push (@ 108))
(push (eval (kwote (#:system:cached-getglobal '_BnSubtract))))
(push '1)
(push (& 9))
(push '3)
(push (& 10))
(push '0)
(push (& 11))
(push '0)
(push (& 12))
(push '3)
(push (& 13))
(push '0)
(push (& 14))
(push '0)
(push (& 15))
(push '1)
(mov '16 a4)
(jmp callextern)
108
(eval ())
(adjstk '7)
(return)
))
(loader'((fentry bnmultiplydigit nsubr)
(entry bnmultiplydigit nsubr)
(cnbeq a4 '8 101)
(mov 'bnmultiplydigit a1)
(mov '8 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 7) 103)
(mov (& 7) a3)
(mov 'errnsa a2)
(mov '_BnMultiplyDigit a1)
(jcall error)
103
(btstrg (& 4) 105)
(mov (& 4) a3)
(mov 'errnsa a2)
(mov '_BnMultiplyDigit a1)
(jcall error)
105
(btstrg (& 1) 107)
(mov (& 1) a3)
(mov 'errnsa a2)
(mov '_BnMultiplyDigit a1)
(jcall error)
107
(push (@ 108))
(push (eval (kwote (#:system:cached-getglobal '_BnMultiplyDigit))))
(push '1)
(push (& 10))
(push '3)
(push (& 11))
(push '0)
(push (& 12))
(push '0)
(push (& 13))
(push '3)
(push (& 14))
(push '0)
(push (& 15))
(push '0)
(push (& 16))
(push '3)
(push (& 17))
(push '0)
(mov '18 a4)
(jmp callextern)
108
(eval ())
(adjstk '8)
(return)
))
(loader'((fentry bndividedigit nsubr)
(entry bndividedigit nsubr)
(cnbeq a4 '9 101)
(mov 'bndividedigit a1)
(mov '9 a2)
(jmp #:llcp:errwna)
101
(btstrg (& 8) 103)
(mov (& 8) a3)
(mov 'errnsa a2)
(mov '_BnDivideDigit a1)
(jcall error)
103
(btstrg (& 6) 105)
(mov (& 6) a3)
(mov 'errnsa a2)
(mov '_BnDivideDigit a1)
(jcall error)
105
(btstrg (& 4) 107)
(mov (& 4) a3)
(mov 'errnsa a2)
(mov '_BnDivideDigit a1)
(jcall error)
107
(btstrg (& 1) 109)
(mov (& 1) a3)
(mov 'errnsa a2)
(mov '_BnDivideDigit a1)
(jcall error)
109
(push (@ 110))
(push (eval (kwote (#:system:cached-getglobal '_BnDivideDigit))))
(push '0)
(push (& 11))
(push '3)
(push (& 12))
(push '0)
(push (& 13))
(push '3)
(push (& 14))
(push '0)
(push (& 15))
(push '3)
(push (& 16))
(push '0)
(push (& 17))
(push '0)
(push (& 18))
(push '3)
(push (& 19))
(push '0)
(mov '20 a4)
(jmp callextern)
110
(eval ())
(adjstk '9)
(return)
))
(loader'((fentry bnalloc subr1)
(entry bnalloc subr1)
(mov (cvalq #:kern:no_byte_in_digit) a4)
(times a1 a4)
(mov '0 a2)
(mov a4 a1)
(jmp makestring)
))
(loader'((fentry bncreate subr2)
(entry bncreate subr2)
(push a1)
(mov (cvalq #:kern:no_byte_in_digit) a4)
(times a2 a4)
(mov '0 a2)
(mov a4 a1)
(jcall makestring)
(mov (& 0) (cdr a1))
(adjstk '1)
(return)
))
(loader'((fentry bnfree subr1)
(entry bnfree subr1)
(mov '1 a1)
(return)
))
(loader'((fentry bngettype subr1)
(entry bngettype subr1)
(mov (cdr a1) a1)
(return)
))
(loader'((fentry bnsettype subr2)
(entry bnsettype subr2)
(mov a2 (cdr a1))
(mov a2 a1)
(return)
))
(loader'((fentry bngetsize subr1)
(entry bngetsize subr1)
(hgsize a1 a1)
(quo (cvalq #:kern:no_byte_in_digit) a1)
(return)
))
(defvar #:kern:tampon (bncreate 'n 2))
(loader'((fentry #:n:prin subr1)
(entry #:n:prin subr1)
(push a1)
(push nil)
(push (@ 101))
(mov '0 a4)
(jmp obase)
101
(eval ())
(push a1)
(push (@ 102))
(push dlink)
(push prot)
(stack dlink)
(push (@ 104))
(push '16)
(mov '1 a4)
(jmp obase)
104
(eval ())
(mov (& 5) a1)
(jcall bngetsize)
(diff '1 a1)
(push a1)
105
(push (@ 107))
(push (& 1))
(push '0)
(mov '2 a4)
(jmp <)
107
(eval ())
(bfnil a1 106)
(push (@ 108))
(push (cvalq #:kern:tampon))
(push '0)
(push (& 9))
(push (& 4))
(push '1)
(mov '5 a4)
(jmp bnassign)
108
(eval ())
(mov '0 (& 5))
109
(push (@ 111))
(push (& 6))
(push (cvalq bn_digit_size))
(mov '2 a4)
(jmp <)
111
(eval ())
(btnil a1 110)
(push (@ 112))
(push (cvalq #:kern:tampon))
(push '0)
(push '1)
(push (cvalq #:kern:tampon))
(push '1)
(push '4)
(mov '6 a4)
(jmp bnshiftleft)
112
(eval ())
(push (@ 113))
(mov '1 a2)
(mov (cvalq #:kern:tampon) a1)
(jcall bngetdigit)
(push a1)
(mov '1 a4)
(jmp prin)
113
(eval ())
(push (@ 114))
(push (& 6))
(push '4)
(mov '2 a4)
(jmp |+|)
114
(eval ())
(mov a1 (& 5))
(bra 109)
110
(push (@ 115))
(push (& 1))
(push '-1)
(mov '2 a4)
(jmp |+|)
115
(eval ())
(mov a1 (& 0))
(bra 105)
106
(mov nil a1)
(adjstk '1)
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 103) a3)
102
(push a3)
(push a2)
(push (@ 116))
(push (& 4))
(mov '1 a4)
(jmp obase)
116
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
103
(eval ())
(adjstk '3)
(return)
))
(defvar #:kern:hight_to_low_index ((lambda (l n) ((lambda (i) (until (> i 3) (bnsetdigit n 0 9) (bnshiftleft n 0 1 n 1 (mul 8 i)) ((lambda (j) (until (> j 3) (when (eq (sref n j) 9) (newl l j)) (setq j (|+| j 1))) (progn)) 0) (setq i (|+| i 1))) (progn)) 1) l) () (bncreate 'n 2)))
(loader'((fentry bndoesdigitfitinword subr2)
(entry bndoesdigitfitinword subr2)
(push a1)
(mov (cvalq #:kern:no_byte_in_digit) a4)
(times a2 a4)
(push (cvalq #:kern:hight_to_low_index))
(push a4)
101
(mov (& 1) a4)
(btnil (cdr a4) 102)
(mov (car a4) a3)
(plus (& 0) a3)
(hbxmov (& 2) a3 a3)
(cabne '0 a3 102)
(mov (& 1) a4)
(mov (cdr a4) (& 1))
(bra 101)
102
(mov (& 1) a4)
(btnil (cdr a4) 103)
(mov '0 a1)
(adjstk '3)
(return)
103
(mov (car a4) a3)
(plus (& 0) a3)
(hbxmov (& 2) a3 a3)
(cnbge a3 '128 105)
(mov '1 a1)
(adjstk '3)
(return)
105
(mov '0 a1)
(adjstk '3)
(return)
))
(loader '((end)))
