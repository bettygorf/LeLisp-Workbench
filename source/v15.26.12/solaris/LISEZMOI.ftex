
% Nom du produit: Le-Lisp
% Nom du repertoire: ILLPATH
% Nom de la machine: solaris

\documentstyle {ilogpaper}
\pagestyle{myheadings}
\markboth{Le-Lisp{\bf 15.26} sur Sparc - Ilog}{Le-Lisp{\bf 15.26} sur Sparc - Ilog}
\setcounter {secnumdepth}{1}
\Begin
\Title{Notice de configuration de Le-Lisp 15.26}
\SuperTitle {Pour Sparc \

\\ sous SOLARIS2.x \

\\
}

\Author {ILOG \\ 2, avenue Gallie'ni, BP 85 \\ 94253 Gentilly Cedex \\ France \\ Tel: (1) 46 63 66 66}

\Author {20 octobre 1993}

Cher client Ilog, \\
Vous venez d'installer \LeLisp
{\bf 15.26} sur vos disques.
Cette notice vous permet de (re)configurer \LeLisp\ selon vos
besoins. Il serait sans doute souhaitable de voir un exemplaire de ce
document sur le bureau de chaque utilisateur de \LeLisp . \\
Cette notice est divise'e en trois parties \ :

\begin {Itemize}

\item la premie`re partie de'crit tous les modes de reconfiguration
de \LeLisp , quant aux binaires et aux images me'moire.
Vous y trouverez la manie`re de fabriquer les binaires et images
me'moire standard mais aussi comment fabriquer vos propres binaires
et/ou images personnalise's.

\item la deuxie`me partie fournit quelques renseignements supple'mentaires
pour les plus curieux
quant a` certains traits de \LeLisp . On y explique e'galement
comment utiliser le manuel UNIX fourni avec \LeLisp , ainsi que
la fac,on de lancer les jeux de tests validant \LeLisp . Le dernier
paragraphe concerne les e'volutions du produit.

\item la troisie`me partie de'crit ce qu'il est ne'cessaire de faire
si \LeLisp\ n'est pas installe' de fac,on standard
en /usr/ilog/lelisp.

\end{Itemize}

\newpage

\Section {Configurations possibles.}

\SSection {Fabrication de binaires.}

Un certain nombre de binaires \LeLisp\
sont fournis et pre^ts
a` e^tre utilise's. Ces binaires re'sident
dans le re'pertoire
{\tt lelisp/solaris}. On trouve en standard\ :\\

\begin{tabular}{lll}
{\tt lelispbin} & : & binaire standard du noyau \LeLisp. \\
{\tt leX11bin}  & : & binaire associe' a {\tt X-windows 11}, utilise' par
{\tt Aida, Masai, Smeci}\ ... \\

\end{tabular}
\\
\\
D'autres binaires peuvent e^tre fabrique's a` l'aide du {\tt Makefile}
de \LeLisp .
Toutes les combinaisons sont ainsi possibles
entre les parame`tres suivants\ :\\

\begin {itemize}

\item choix des flottants 31 bits ou des flottants 64 bits (voir
de'tails plus loin)

\item inte'gration du code C relatif a` X11 dans le binaire

\item inte'gration du code C relatif a` Motif dans le binaire

\end{itemize}

Au total, il est possible de fabriquer en standard tous les binaires
suivants avec
le {\tt Makefile} de \LeLisp\ sur Sparc\ : \\

lelisp31bin,\

lelisp64bin,\

lelisp31X11bin,\

lelisp64X11bin,\

lelisp31M11bin,\

lelisp64M11bin,\

 \\ \\ \\

Exemple \ :\\
{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ cd /usr/ilog/lelisp/solaris \\

\$ make lelisp64bin \	{\em \#\ldots  avec flottants 64bits} \\

\end {tabbing}
}

Vous pouvez fabriquer vos propres binaires \LeLisp\ en y
inte'grant tout le code (C, FORTRAN ...) de'sire', en vue de cre'er
une interface de ce code avec \LeLisp . Pour se faire, on utilise
les entre'es dites ``ge'ne'riques'' du {\tt Makefile}. Ces entre'es
ge'ne'riques sont rede'finissables afin de prendre le nom que vous
desirez, avec les arguments que vous de'sirez. On peut ainsi
rede'finir le nom du binaire \LeLisp\ fabrique', mais aussi la liste
de fichiers compile's inte'gre's dans ce binaire, les flags de
compilation utilise's, les librairies charge'es.\\
La liste comple`te des variables de {\tt Makefile} rede'finissables,
ainsi que le mode d'emploi et des exemples
sont fournis dans le manuel UNIX de \LeLisp\ ({\em lelisp(l)}). \\ \\

N'he'sitez pas a` consulter les pages du {\bf manuel UNIX} de \LeLisp\
({\em lelisp(l)}) pour en savoir plus. \\

\\
{\it
{\bf Remarque\ :} la recompilation de binaires \LeLisp\ sur Sparc
impose l'utilisation du compilateur C  \ :
{\tt /opt/SUNWspro/SC2.0.1/cc}. \\
}

\SSection {Fabrication d'images me'moire.}

Certaines images me'moire sont fournies en standard.
Les images standard sont les suivantes\ : \\
\begin{tabular}{lcl}
{\tt lelisp}   & : & image \LeLisp\ standard. \\
{\tt cmplc++}  & : & image du compilateur modulaire,
utilise'e par la commande {\tt complice}. \\
\end{tabular}
\par
Ces images peuvent e^tre rege'ne're'es (si ne'cessaire)
a` l'aide de la commande {\tt make}\ :
{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ cd /usr/ilog/lelisp/solaris \\
\$ make \\
\end {tabbing}}

D'autres entre'es sont pre'sentes en standard dans le {\tt Makefile}
pour fabriquer des images\ :\\
\begin{tabular}{lclcl}
{\bf nom}& $\leftarrow$ &{\bf fabrication}&:&{\bf description} \\ \\

{\tt lelispX11} & $\leftarrow$ & {\tt make lelispX11} &:& image \LeLisp\
inte'grant l'incarnation du BV sur X11.\\

{\tt lelispi}  & $\leftarrow$ & {\tt make lelispi} &:& image \LeLisp\  interpre'te'. \\

{\tt lelisp64} & $\leftarrow$ & {\tt make lelisp64} &:& image \LeLisp\  avec flottants 64
bits. \\

\end{tabular}

\\
Vous pouvez fabriquer vos propres images me'moire \LeLisp ,
lesquelles utiliseront les binaires et fichiers de
configuration de votre choix et seront dimensionne'es comme vous
l'entendez. \\
Pour se faire, on utilise comme pour les binaires
les entre'es ``ge'ne'riques'' du {\tt Makefile}.  \\
La liste comple`te des variables de {\tt Makefile} rede'finissables,
ainsi que le mode d'emploi et des exemples
sont fournies dans le manuel UNIX de \LeLisp\ ({\em lelisp(l)}). \\ \\

N'he'sitez pas a` consulter les pages du {\bf manuel UNIX} de \LeLisp\
({\em lelisp(l)}) pour en savoir plus. \\

\Section {Pour ceux qui veulent en savoir plus \ldots}

\SSection {Codage des flottants sur 64bits.}

En standard, le codage des flottants \LeLisp\  est fait sur 32bits (en
re'alite' 31bits!) par souci de performances et d'e'conomie de place.
Ce codage offre une pre'cision d'environ 7 chiffres. Si votre besoin
de pre'cision est supe'rieur, il vous est possible de reconfigurer vos
binaires \LeLisp\  afin que les flottants soient code's sur 64 bits.
La pre'cision sera alors d'environ 12 chiffres. Mais
vous devez savoir que les calculs seront alors moins rapides (environ 2 fois)
et que la me'moire de votre syste`me sera alourdie d'autant
(allocation des flottants). Le {\tt Makefile} standard permet de re'aliser
une image me'moire de \LeLisp\  sur 64 bits\ : \\
{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ cd /usr/ilog/lelisp/solaris \\
\$ make lelisp64 \	{\em \#\ldots pour une image lelisp + flottants 64bits}\\
\end {tabbing}}

\SSection {Les e'ditions de liens.}
Dans le cadre d'une communication entre \LeLisp\ et un
autre langage (C, FORTRAN), l'utilisateur se doit de re'aliser
une e'dition de liens entre le binaire \LeLisp\ et son
programme externe.

Cette e'dition de liens ne peut e^tre que statique
avec le portage de \LeLisp\  sur Sparc, la fonction {\tt CLOAD}
(cf chapitre 14 du manuel de re'fe'rence \LeLisp )
n'e'tant pas imple'mente'e.
Reportez-vous au paragraphe sur la {\it fabrication des binaires},
ainsi qu'au manuel UNIX {\em lelisp(l)}
pour re'aliser de tels liens. \\
{\it
{\bf Remarque\ : } la compilation des fichiers du programme externe,
ainsi que l'e'dition de liens avec le binaire Le-Lisp ne'cessitent
la pre'sence d'une chai^ne de compilation comple`te sur votre machine

et en particulier le compilateur C \ :
{\tt /opt/SUNWspro/SC2.0.1/cc}.

}

\SSection {Les manuels UNIX pour Le-Lisp.}

Des manuels au format Unix, accessibles via la commande {\em man},
sont livre's avec la bande \LeLisp .
Ils se trouvent dans le re'pertoire {\tt
/usr/ilog/lelisp/manl}.

Il s'agit de\ :
\begin {itemize}
\item lelisp.l qui de'crit la commande {\tt lelisp} et ses consoeurs,
avec des explications quant a` la fac,on de fabriquer ces commandes,
mais aussi sur l'outil de fabrication (voir {\em make(1)}).
\item complice.l qui de'crit le compilateur modulaire {\tt complice}.
\item config.l qui de'crit la commande {\tt config} permettant d'engendrer
des images \LeLisp .
\item newdir.l qui de'crit la commande {\tt newdir} mettant les chemins
UNIX a` jour au moment de l'installation.
\end{itemize}

Vous pouvez consulter ces manuels en indiquant a` la commande {\tt
man} Unix (voir {\em man(1)}) ou` aller chercher le texte de ces
manuels, ou bien en installant de'finitivement ces manuels sur votre site.
Si vous de'sirez lire le manuel de {\em complice} par exemple,
vous pouvez soit executer la commande suivante\ : \\

{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ nroff -man /usr/ilog/lelisp/manl/complice.l \\
 ...
\end {tabbing}}

soit recopier ces fichiers dans le manuel ``local'' de votre machine\ : \\
{\tt /usr/catman/local\_man/man1}.
Si ce re'pertoire n'existe pas, le cre'er (comme super-utilisateur)\ :

{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ su\\
password: {\em $<$mot de passe du super-utilisateur$>$}\\
\# mkdir /usr/catman/local\_man/man1 \\
\# cd /usr/catman/local\_man/man1 \\
\# cp /usr/ilog/lelisp/manl/complice.txt $>$ complice.1 \\
\# cp /usr/ilog/lelisp/manl/lelisp.txt $>$ lelisp.1 \\
\# <ctrl-D>\\
\$ man complice\\
	...
\end {tabbing}}
\par

Il existe une version pre'formatte'e de ces
manuels, dans le re'pertoire {\tt
/usr/ilog/lelisp/manl}. Ils sont de la forme
{\tt <file>.txt}, et directement lisibles\ :
{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ cat /usr/ilog/lelisp/manl/complice.txt \\
\ldots\\
\end {tabbing}}
\par

\SSection {Validation de Le-Lisp.}

{\bf Note :}
{\small
	Ce paragraphe {\bf ne doit pas} e^tre syste'matiquement
suivi lors d'une installation standard. Mais ces informations peuvent
e^tre ne'cessaires dans certains cas de comportements anormaux afin
d'en de'celer l'origine.
} \\

Pour ve'rifier l'installation de \LeLisp , ou pour effectuer des mesures
de performances, vous disposez de plusieurs commandes dans le re'pertoire
 {\tt /usr/ilog/lelisp/solaris/recette}  qui permettent soit de lancer les
recettes comple`tes de \LeLisp\  sur votre machine, soit de
lancer des tests de performances de \LeLisp\  sur votre machine. \\

{\it
{\bf Remarque\ : } le lancement des recettes comple`tes forc,ant la
recompilation des fichiers C de Le-Lisp, cela ne'cessite la pre'sence
d'une chai^ne de compilation comple`te sur votre machine

et en particulier le compilateur C \ :
{\tt /opt/SUNWspro/SC2.0.1/cc}.

Les cores fournis en standard devront e^tre refaits e'galement.

}
{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ cd /usr/ilog/lelisp/solaris/recette \\
\$ sh Suites \ \ \ \ \ \ \ {\em \# pour lancer les recettes completes} \\
\ldots\\
\end {tabbing}}
 Selon la machine utilise'e, ces tests peuvent prendre de 2 a` 8 heures.
{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ sh Bench \ \ \ \ \ \ \ \ {\em \# pour lancer les mesures de performances}\\
\ldots\\
\end {tabbing}}

 Les re'sultats de ces mesures de performances ne fournissent en aucun cas
une mesure fiable de la machine. Il s'agit tout au plus de se faire
une ide'e des performances du syste`me Le-Lisp, en comparant ces
re'sultats avec leur e'quivalent sur d'autres machines. \\
Ces recettes de'truisant les binaires existants, il convient de les
refabriquer\ :

{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ cd .. \ \ \ \ \ \ \ \ {\em \# on retourne en lelisp/solaris} \\
\$ make  \ \ \ \ \ \ \ \ \ {\em \# pour tout remettre en ordre} \\
\ldots\\
\end {tabbing}}

\SSection {Informations sur les versions de Le-Lisp .}
Il existe un certain nombre de versions de \LeLisp\ marquant
l'e'volution du produit. Toutes les informations sur ces
diffe'rentes versions sont regroupe'es sous le re'pertoire {\tt
lelisp/info}. On trouvera en particulier quelques notes concernant la
version 16 de \LeLisp . \\
N'he'sitez pas a` consulter ces fichiers pour en savoir
plus. \\
Ils existent au format {\it LaTeX}({\tt .tex}), au
format {\it ascii}({\tt .txt}) directement lisibles, ou au format
{\it postcript}({\tt .dvi}) pre^ts a` e^tre imprime's si vous posse'dez
le device ade'quat sur votre imprimante.

\Section {Installation non standard.}

Vous venez de recopier \LeLisp\ du support magne'tique livre', sur vos
disques.
Mais vous ne l'avez pas installe'
en /usr/ilog/lelisp (me^me au moyen de liens symboliques).
Nous appelerons cet endroit\ : {\tt $<$repertoire-lelisp$>$}.

\SSection {Mise a` jour des {\tt paths} dans Le-Lisp.}
Cela vous oblige a`
reconfigurer partiellement \LeLisp\ afin de lui indiquer ce
re'pertoire d'installation. Pour cela  vous allez vous placer dans le
re'pertoire
{\tt solaris} de \LeLisp\ et lancer la commande {\tt newdir}
qui mettra ce chemin absolu a` jour (voir {\em newdir(l)}). \\
On suppose ici que vous avez de'ja` installer le fichier de
de've'rouillage de \LeLisp\ :
{\tt ILOGACCESS}.
Il ne vous reste plus qu'a` refabriquer les images
me'moire standard

en lanc,ant la commande {\tt make} (voir {\em lelisp(l), make(1)}).

{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ cd $<$repertoire-lelisp$>$/solaris \\
\$ sh newdir\ \ \ \ \ \ \ \ \ \ {\em \#\ldots pour actualiser les paths} \\
\$ make\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\em \#\ldots pour fabriquer les images standard} \\
\end {tabbing}}

\SSection {Accessibilite' des commandes.}
C'est fini, \LeLisp\ est installe'.
Les commandes qui permettent de lancer \LeLisp\  ({\tt lelisp}, {\tt
complice}) se trouvent dans le re'pertoire
{\tt /usr/ilog/lelisp/solaris}.
Vous pouvez les copier dans un re'pertoire
ou` elles seront accessibles par tout le monde. Par exemple dans {\tt
/usr/local/bin}\ : \\

{\tt
\begin{tabbing}
zone des tabs \= \kill \> \+
\$ cd $<$repertoire-lelisp$>$/solaris \\
\$ su\\
password: {\em $<$mot de passe du super-utilisateur$>$} \\
\# cp complice lelisp /usr/local/bin \\
\# $<$ctrl-d$>$ \\
\end {tabbing}}

\End

