;;; GELL 15.26: elaboration file for the module: gdate
;;;             translation done: "Thu Jun  24 93 15:12:17 "

(with ((outchan ()))
	(print ";Loading elaboration file: gdate.le"))
(unless (boundp '#:module:compiled-list)
	(setq #:module:compiled-list ()))
(newl #:module:compiled-list 'gdate)
(setq #:system:read-case-flag t)

(defcelaborate "GZgdate" "Thu Jun  24 93 15:12:17 "

'((|(type-of (date))| . subr0) (|(#:date:day d 1)| . subr0) (|(#:date:month d 1)| . subr0) (|(#:date:year d 0)| . subr0) (|(week-day-number d)| . subr0) (|(#:date:year d 1990)| . subr0) (|(year-day-number d)| . subr0) (|(#:date:month d 2)| . subr0) (|(#:date:month d 3)| . subr0) (|(#:date:year d 1992)| . subr0) (|(null (datep d))| . subr0) (|(datep ())| . subr0) (|(type-of (short-string-date d))| . subr0) (|(< 0 (week-day-number d) 8)| . subr0) (|(leap-year-p 1986)| . subr0) (|(leap-year-p 1988)| . subr0) (|(leap-year-p 1989)| . subr0) (|(leap-year-p 1900)| . subr0) (|(leap-year-p 2000)| . subr0) (|(leap-number 0)| . subr0) (|(leap-number 1)| . subr0) (|(leap-number 4)| . subr0) (|(leap-number 5)| . subr0) (|(sub (leap-number 2001) (leap-number 2000))| . subr0) (|(sub (leap-number 1001) (leap-number 1000))| . subr0) (|(current-language 'french)| . subr0) (|(current-language 'english)| . subr0) (|(eqstring f (short-string-date d))| . subr0) (|(progn (sleep 1) ())| . subr0) (|(type-of (long-string-date d))| . subr0) (|(eqdate d d)| . subr0) (|(eqdate d (date))| . subr0) (|(<date d (date))| . subr0) (|(<=date d d)| . subr0) (|(>date d (date))| . subr0) (|(>=date d (date))| . subr0) (|(> 1. (- (number-to-date n) dd))| . subr0) (|(date-to-number (number-to-date 0))| . subr0) (|(date-to-number (number-to-date 1))| . subr0) (|(date-to-number (number-to-date 31))| . subr0) (|(date-to-number (number-to-date 32))| . subr0) (|(date-to-number (number-to-date 365))| . subr0) (|(date-to-number (number-to-date 366))| . subr0) (|(date-to-number (number-to-date 12345))| . subr0) (|(date-to-number (number-to-date 123456.))| . subr0) (|(eqstring f (long-string-date d))| . subr0) (|(progn (setq a (temporary-file-pathname testd1)) (with ((outchan (openo a))) (print Hello) (close (outchan))) (sleep 1) ())| . subr0) (|(progn (setq b (temporary-file-pathname testd2)) (with ((outchan (openo b))) (print Hello) (close (outchan))) ())| . subr0) (|(<date d1 d2)| . subr0) (|(deletefile a)| . subr0) (|(deletefile b)| . subr0) (|(date-of-file ())| . subr0) (|(date-of-file ipar007)| . subr0))

#[type-of date d #:date:day #:date:month #:date:year week-day-number year-day-number datep t short-string-date < leap-year-p leap-number french current-language english f eqstring sleep long-string-date eqdate <date <=date >date >=date 1. n number-to-date dd |-| > date-to-number 123456. "testd1" temporary-file-pathname a outchan openo "Hello" print close "testd2" b d2 d1 deletefile date-of-file "ipar007" |(type-of (date))| #:gell-resetfn:function-name #:gell-resetfn:function-0 |(#:date:day d 1)| |(#:date:month d 1)| |(#:date:year d 0)| |(week-day-number d)| |(#:date:year d 1990)| |(year-day-number d)| |(#:date:month d 2)| |(#:date:month d 3)| |(#:date:year d 1992)| |(null (datep d))| |(datep ())| |(type-of (short-string-date d))| |(< 0 (week-day-number d) 8)| |(leap-year-p 1986)| |(leap-year-p 1988)| |(leap-year-p 1989)| |(leap-year-p 1900)| |(leap-year-p 2000)| |(leap-number 0)| |(leap-number 1)| |(leap-number 4)| |(leap-number 5)| |(sub (leap-number 2001) (leap-number 2000))| |(sub (leap-number 1001) (leap-number 1000))| |(current-language 'french)| |(current-language 'english)| |(eqstring f (short-string-date d))| |(progn (sleep 1) ())| |(type-of (long-string-date d))| |(eqdate d d)| |(eqdate d (date))| |(<date d (date))| |(<=date d d)| |(>date d (date))| |(>=date d (date))| |(> 1. (- (number-to-date n) dd))| |(date-to-number (number-to-date 0))| |(date-to-number (number-to-date 1))| |(date-to-number (number-to-date 31))| |(date-to-number (number-to-date 32))| |(date-to-number (number-to-date 365))| |(date-to-number (number-to-date 366))| |(date-to-number (number-to-date 12345))| |(date-to-number (number-to-date 123456.))| |(eqstring f (long-string-date d))| |(progn (setq a (temporary-file-pathname testd1)) (with ((outchan (openo a))) (print Hello) (close (outchan))) (sleep 1) ())| |(progn (setq b (temporary-file-pathname testd2)) (with ((outchan (openo b))) (print Hello) (close (outchan))) ())| |(<date d1 d2)| |(deletefile a)| |(deletefile b)| |(date-of-file ())| |(date-of-file ipar007)|]
)

(defcsetfn '|(type-of (date))| "GZgdate" 0)
(putprop '|(#:date:day d 1)| '(d) '#:complice:fvar)
(defcsetfn '|(#:date:day d 1)| "GZgdate" 1)
(putprop '|(#:date:month d 1)| '(d) '#:complice:fvar)
(defcsetfn '|(#:date:month d 1)| "GZgdate" 2)
(putprop '|(#:date:year d 0)| '(d) '#:complice:fvar)
(defcsetfn '|(#:date:year d 0)| "GZgdate" 3)
(putprop '|(week-day-number d)| '(d) '#:complice:fvar)
(defcsetfn '|(week-day-number d)| "GZgdate" 4)
(putprop '|(#:date:year d 1990)| '(d) '#:complice:fvar)
(defcsetfn '|(#:date:year d 1990)| "GZgdate" 5)
(putprop '|(year-day-number d)| '(d) '#:complice:fvar)
(defcsetfn '|(year-day-number d)| "GZgdate" 6)
(putprop '|(#:date:month d 2)| '(d) '#:complice:fvar)
(defcsetfn '|(#:date:month d 2)| "GZgdate" 7)
(putprop '|(#:date:month d 3)| '(d) '#:complice:fvar)
(defcsetfn '|(#:date:month d 3)| "GZgdate" 8)
(putprop '|(#:date:year d 1992)| '(d) '#:complice:fvar)
(defcsetfn '|(#:date:year d 1992)| "GZgdate" 9)
(putprop '|(null (datep d))| '(d) '#:complice:fvar)
(defcsetfn '|(null (datep d))| "GZgdate" 10)
(defcsetfn '|(datep ())| "GZgdate" 11)
(putprop '|(type-of (short-string-date d))| '(d) '#:complice:fvar)
(defcsetfn '|(type-of (short-string-date d))| "GZgdate" 12)
(putprop '|(< 0 (week-day-number d) 8)| '(d) '#:complice:fvar)
(defcsetfn '|(< 0 (week-day-number d) 8)| "GZgdate" 13)
(defcsetfn '|(leap-year-p 1986)| "GZgdate" 14)
(defcsetfn '|(leap-year-p 1988)| "GZgdate" 15)
(defcsetfn '|(leap-year-p 1989)| "GZgdate" 16)
(defcsetfn '|(leap-year-p 1900)| "GZgdate" 17)
(defcsetfn '|(leap-year-p 2000)| "GZgdate" 18)
(defcsetfn '|(leap-number 0)| "GZgdate" 19)
(defcsetfn '|(leap-number 1)| "GZgdate" 20)
(defcsetfn '|(leap-number 4)| "GZgdate" 21)
(defcsetfn '|(leap-number 5)| "GZgdate" 22)
(defcsetfn '|(sub (leap-number 2001) (leap-number 2000))| "GZgdate" 23)
(defcsetfn '|(sub (leap-number 1001) (leap-number 1000))| "GZgdate" 24)
(defcsetfn '|(current-language 'french)| "GZgdate" 25)
(defcsetfn '|(current-language 'english)| "GZgdate" 26)
(putprop '|(eqstring f (short-string-date d))| '(d f) '#:complice:fvar)
(defcsetfn '|(eqstring f (short-string-date d))| "GZgdate" 27)
(defcsetfn '|(progn (sleep 1) ())| "GZgdate" 28)
(putprop '|(type-of (long-string-date d))| '(d) '#:complice:fvar)
(defcsetfn '|(type-of (long-string-date d))| "GZgdate" 29)
(putprop '|(eqdate d d)| '(d) '#:complice:fvar)
(defcsetfn '|(eqdate d d)| "GZgdate" 30)
(putprop '|(eqdate d (date))| '(d) '#:complice:fvar)
(defcsetfn '|(eqdate d (date))| "GZgdate" 31)
(putprop '|(<date d (date))| '(d) '#:complice:fvar)
(defcsetfn '|(<date d (date))| "GZgdate" 32)
(putprop '|(<=date d d)| '(d) '#:complice:fvar)
(defcsetfn '|(<=date d d)| "GZgdate" 33)
(putprop '|(>date d (date))| '(d) '#:complice:fvar)
(defcsetfn '|(>date d (date))| "GZgdate" 34)
(putprop '|(>=date d (date))| '(d) '#:complice:fvar)
(defcsetfn '|(>=date d (date))| "GZgdate" 35)
(putprop '|(> 1. (- (number-to-date n) dd))| '(dd n) '#:complice:fvar)
(defcsetfn '|(> 1. (- (number-to-date n) dd))| "GZgdate" 36)
(defcsetfn '|(date-to-number (number-to-date 0))| "GZgdate" 37)
(defcsetfn '|(date-to-number (number-to-date 1))| "GZgdate" 38)
(defcsetfn '|(date-to-number (number-to-date 31))| "GZgdate" 39)
(defcsetfn '|(date-to-number (number-to-date 32))| "GZgdate" 40)
(defcsetfn '|(date-to-number (number-to-date 365))| "GZgdate" 41)
(defcsetfn '|(date-to-number (number-to-date 366))| "GZgdate" 42)
(defcsetfn '|(date-to-number (number-to-date 12345))| "GZgdate" 43)
(defcsetfn '|(date-to-number (number-to-date 123456.))| "GZgdate" 44)
(putprop '|(eqstring f (long-string-date d))| '(d f) '#:complice:fvar)
(defcsetfn '|(eqstring f (long-string-date d))| "GZgdate" 45)
(putprop '|(progn (setq a (temporary-file-pathname testd1)) (with ((outchan (openo a))) (print Hello) (close (outchan))) (sleep 1) ())| '(a) '#:complice:fvar)
(defcsetfn '|(progn (setq a (temporary-file-pathname testd1)) (with ((outchan (openo a))) (print Hello) (close (outchan))) (sleep 1) ())| "GZgdate" 46)
(putprop '|(progn (setq b (temporary-file-pathname testd2)) (with ((outchan (openo b))) (print Hello) (close (outchan))) ())| '(b) '#:complice:fvar)
(defcsetfn '|(progn (setq b (temporary-file-pathname testd2)) (with ((outchan (openo b))) (print Hello) (close (outchan))) ())| "GZgdate" 47)
(putprop '|(<date d1 d2)| '(d2 d1) '#:complice:fvar)
(defcsetfn '|(<date d1 d2)| "GZgdate" 48)
(putprop '|(deletefile a)| '(a) '#:complice:fvar)
(defcsetfn '|(deletefile a)| "GZgdate" 49)
(putprop '|(deletefile b)| '(b) '#:complice:fvar)
(defcsetfn '|(deletefile b)| "GZgdate" 50)
(defcsetfn '|(date-of-file ())| "GZgdate" 51)
(defcsetfn '|(date-of-file ipar007)| "GZgdate" 52)

(defccheck '(date-of-file deletefile close print openo outchan temporary-file-pathname date-to-number > |-| number-to-date >=date >date <=date <date eqdate long-string-date sleep eqstring current-language leap-number leap-year-p < short-string-date datep year-day-number week-day-number #:date:year #:date:month #:date:day date type-of))
