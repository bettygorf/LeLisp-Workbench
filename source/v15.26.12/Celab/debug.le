;;; GELL 15.26: elaboration file for the module: debug
;;;             translation done: "Wed June 16 93 18:01:21 "

(with ((outchan ()))
	(print ";Loading elaboration file: debug.le"))
(unless (boundp '#:module:compiled-list)
	(setq #:module:compiled-list ()))
(newl #:module:compiled-list 'debug)
(setq #:system:read-case-flag t)

(defcelaborate "GZdebug" "Wed June 16 93 18:01:21 "

'((printstack . nsubr) (debug . fsubr) (break . subr0) (debug-command . subr1) (#:system:debug:break-loop:g115 . subr1) (#:system:debug:toplevel . subr0) (#:system:debug:bol . subr0) (#:system:debug:printstack . nsubr) (#:system:debug:print-current-variables . subr0) (#:system:debug:print-error . subr0) (#:system:debug:print-current-function . subr0) (#:system:debug:down-stack . subr0) (#:system:debug:up-stack . subr0) (#:system:debug:continue . subr0) (#:system:debug:help . subr0) (#:system:debug:find-expr:g116 . subr1) (#:system:debug:find-expr:g117 . subr1) (#:system:debug:find-expr:g118 . subr1) (#:system:debug:find-expr:g119 . subr1) (#:system:debug:find-expr:g120 . subr1) (#:system:debug:find-expr:g121 . subr1) (#:system:debug:find-expr:g122 . subr1) (#:system:debug:find-error:g123 . subr1) (#:system:debug:find-error:g124 . subr1) (#:system:debug:find-error:g125 . subr1) (#:system:debug:find-error:g126 . subr1) (#:system:debug:hilited:prin . subr1) (#:tty:system:hilited:tyattrib . subr1) (#:system:debug:hilited:eol . subr0))

#[cstack min |1-| |1+| "   [stack " prin < princn "]   (" let flet " " tag itsoft lock symbolp "(lambda ...)" protect sys-protect schedule tagbody block #:system:debug:errnobloc printstack printerror " ...)" print t #:system:l (#:system:l) #:system:debug () (#:system:debug) lambda eval #:sys-package:itsoft remq (#:sys-package:itsoft #:system:debug) clockalarm continue inchan outchan #:with:arg1 #:with:arg0 (#:with:arg1 #:with:arg0) #:system:error-tag #:llcp:exit #:system:debug:commands eprogn #:system:debug:stack (#:system:debug:stack) valfn resetfn getprop #:system:debug:break-loop:g115 mapcoblist #:system:debug:break-number #:system:debug:resetfn-alist current-window #:system:debug:current-error-form #:system:debug:current-form #:system:debug:current-function #:system:debug:error-message (#:system:debug:break-number #:system:debug:resetfn-alist current-window #:system:debug:current-error-form #:system:debug:current-form #:system:debug:current-function #:system:debug:error-message) window featurep prompt (#:with:arg0) ">? " catenate debug-command break toplevel #:system:debug:up-stack kill-window #:system:error-flag (#:system:error-flag) "= " read bol super-itsoft inbuf inmax current-display bitprologue #:window:tty bitxmax font-height scale bitymax "Le-Lisp : Break Loop #" string create-window #:bitmap:name X11 read-event map-window syserror typefn expr loc equal (()) displace #:system:toplevel-tag (break break ()) (break) nth step (debug errerr ()) (cstep unstep step #:step:steploop #:step:stepeval) #:system:debug:s (#:system:debug:s) #:system:debug:larg (#:system:debug:larg) &nobind "=" apply errwna errbpa errilb list current-definition (current-definition) #:system:debug:next-form (#:system:debug:next-form) #:system:debug:next-function (#:system:debug:next-function) #:system:debug:previous-form (#:system:debug:previous-form) #:system:debug:rebind-frames (#:system:debug:rebind-frames) errudv "(setq " prinflush (#:with:arg0) "" setq form (form) errudf "Function " "This error can not be resumed" "; " ascii ":   " #:system:debug:frame (#:system:debug:frame) #:system:debug:lval (#:system:debug:lval) (#:system:debug:lval #:system:debug:larg) #:system:debug:v (#:system:debug:v #:system:debug:s) boundp makunbound (#:system:debug:s) _undef_ definition (definition) #:system:debug:frame-list (#:system:debug:frame-list) sexpr frame (sexpr frame) #:system:debug:find-expr:g116 (tag untilexit) #:system:debug:find-expr:g117 #:system:debug:find-expr:g118 #:system:debug:find-expr:g119 #:system:debug:find-expr:g120 found #:system:debug:find-expr:g121 #:system:debug:find-expr:g122 (expr) errbal #:system:debug:find-error:g123 #:system:debug:find-error:g124 (expr) #:system:debug:find-error:g126 #:system:debug:find-error:g125 #:system:debug:tree #:system:debug:fn (#:system:debug:tree #:system:debug:fn) (#:system:debug:tree #:system:debug:fn) funcall #:system:structaccess #:trace:trace trace getdef findfn cassoc makedef #:system:debug:hilited tcons tyattrib pprin #:system:debug:nlines outpos #:system:debug:hibegin #:system:debug:hiend outbuf substring #:system:debug:outlist fillstring lmargin (#:system:debug:outlist #:system:debug:hiend #:system:debug:hibegin #:system:debug:nlines) #:tty:system:hilited #:sys-package:tty (#:sys-package:tty #:sys-package:itsoft) pprint #:system:debug-line nthcdr " ..." "  ..." #:system:print-for-read (#:system:print-for-read) rmargin #:gell-resetfn:function-name #:gell-resetfn:function-n debug #:gell-resetfn:function-f #:gell-resetfn:function-0 #:gell-resetfn:function-1 #:system:debug:toplevel #:system:debug:bol #:system:debug:printstack #:system:debug:print-current-variables #:system:debug:print-error #:system:debug:print-current-function #:system:debug:down-stack #:system:debug:continue #:system:debug:help #:system:debug:hilited:prin #:tty:system:hilited:tyattrib #:system:debug:hilited:eol]
)

(if (not (>= (version) 15.2)) (progn (error 'load 'erricf 'debug)))
(defvar #:sys-package:colon '#:system:debug)
(if (not (featurep 'virtty)) (progn (initty)))
(defvar #:system:debug-line 5)
(defvar #:system:stack-depth 5)
(defvar #:system:debug ())
(#:messages:put-message '#:system:debug:errnobloc 'french '"bloc inconnu" 'defmessage)
(#:messages:put-message '#:system:debug:errnobloc 'english '"unknown block" 'defmessage)
'#:system:debug:errnobloc
(defcsetfn 'printstack "GZdebug" 0)
(putprop 'debug 'parano '#:complice:fvar)
(defcsetfn 'debug "GZdebug" 1)
(putprop 'break 'parano '#:complice:fvar)
(defcsetfn 'break "GZdebug" 2)
(defcsetfn 'debug-command "GZdebug" 3)
(defvar #:system:debug:current-form)
(defvar #:system:debug:current-function)
(defvar #:system:debug:current-error-form)
(defvar #:system:debug:error-message)
(defvar #:system:debug:break-number 0)
(defvar #:system:debug:resetfn-alist)
(defcsetfn '#:system:debug:break-loop:g115 "GZdebug" 4)
(putprop '#:system:debug:toplevel 'parano '#:complice:fvar)
(defcsetfn '#:system:debug:toplevel "GZdebug" 5)
(defcsetfn '#:system:debug:bol "GZdebug" 6)
(defvar #:system:debug:commands '((118 "show variables" (#:system:debug:print-current-variables)) (104 "print top of stack" (#:system:debug:printstack #:system:stack-depth)) (72 "print complete stack" (#:system:debug:printstack)) (101 "show error message" (#:system:debug:print-error)) (46 "show current stack frame" (#:system:debug:print-current-function)) (43 "down stack" (#:system:debug:down-stack) (#:system:debug:print-current-function)) (45 "up stack" (#:system:debug:up-stack) (#:system:debug:print-current-function)) (116 "back to toplevel" (exit #:system:toplevel-tag)) (113 "exit inspection loop" (exit break)) (114 "resume and correct error" (#:system:debug:continue)) (99 "continue" (exit continue)) (122 "step traced functions" (setq #:trace:step-in-trace-flag t) (#:system:debug:continue)) (63 "list commands" (#:system:debug:help))))
(defcsetfn '#:system:debug:printstack "GZdebug" 7)
(putprop '#:system:debug:print-current-variables 'parano '#:complice:fvar)
(defcsetfn '#:system:debug:print-current-variables "GZdebug" 8)
(putprop '#:system:debug:print-error 'parano '#:complice:fvar)
(defcsetfn '#:system:debug:print-error "GZdebug" 9)
(putprop '#:system:debug:print-current-function 'parano '#:complice:fvar)
(defcsetfn '#:system:debug:print-current-function "GZdebug" 10)
(putprop '#:system:debug:down-stack 'parano '#:complice:fvar)
(defcsetfn '#:system:debug:down-stack "GZdebug" 11)
(putprop '#:system:debug:up-stack 'parano '#:complice:fvar)
(defcsetfn '#:system:debug:up-stack "GZdebug" 12)
(putprop '#:system:debug:continue 'parano '#:complice:fvar)
(defcsetfn '#:system:debug:continue "GZdebug" 13)
(defcsetfn '#:system:debug:help "GZdebug" 14)
(defvar #:system:debug:v)
(defcsetfn '#:system:debug:find-expr:g116 "GZdebug" 15)
(defcsetfn '#:system:debug:find-expr:g117 "GZdebug" 16)
(defcsetfn '#:system:debug:find-expr:g118 "GZdebug" 17)
(defcsetfn '#:system:debug:find-expr:g119 "GZdebug" 18)
(defcsetfn '#:system:debug:find-expr:g120 "GZdebug" 19)
(defcsetfn '#:system:debug:find-expr:g121 "GZdebug" 20)
(defcsetfn '#:system:debug:find-expr:g122 "GZdebug" 21)
(defcsetfn '#:system:debug:find-error:g123 "GZdebug" 22)
(defcsetfn '#:system:debug:find-error:g124 "GZdebug" 23)
(defcsetfn '#:system:debug:find-error:g125 "GZdebug" 24)
(defcsetfn '#:system:debug:find-error:g126 "GZdebug" 25)
(defcsetfn '#:system:debug:hilited:prin "GZdebug" 26)
(synonym '#:system:debug:hilited:pretty '#:system:debug:hilited:prin)
(defvar #:system:debug:outlist)
(defvar #:system:debug:hibegin)
(defvar #:system:debug:hiend)
(defvar #:system:debug:nlines)
(defvar #:tty:system:hilited:tyattrib ())
(defcsetfn '#:tty:system:hilited:tyattrib "GZdebug" 27)
(defcsetfn '#:system:debug:hilited:eol "GZdebug" 28)

(defccheck '(rmargin nthcdr pprint lmargin fillstring substring outbuf outpos pprin tyattrib tcons makedef cassoc findfn getdef funcall makunbound boundp ascii prinflush list apply printstack nth displace equal loc typefn read-event create-window string bitymax scale font-height bitxmax bitprologue current-display inmax inbuf super-itsoft read kill-window #:system:debug:up-stack itsoft debug-command catenate prompt current-window featurep mapcoblist getprop valfn eprogn #:llcp:exit outchan inchan clockalarm remq eval print printerror symbolp princn < prin |1+| |1-| min cstack))
