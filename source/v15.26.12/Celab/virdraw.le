;;; GELL 15.26: elaboration file for the module: virdraw
;;;             translation done: "Tue Aug  24 93 10:48:58 "

(with ((outchan ()))
	(print ";Loading elaboration file: virdraw.le"))
(unless (boundp '#:module:compiled-list)
	(setq #:module:compiled-list ()))
(newl #:module:compiled-list 'virdraw)
(setq #:system:read-case-flag t)

(defcelaborate "GZvirdraw" "Tue Aug  24 93 10:48:58 "

'((draw-cursor . subr3) (#:display:draw-cursor . nsubr) (draw-substring . nsubr) (#:display:draw-substring . nsubr) (draw-cn . subr3) (#:display:draw-cn . nsubr) (#:display:draw-substring-nobackground . nsubr) (draw-substring-nobackground . nsubr) (#:display:draw-cn-nobackground . subr3) (draw-cn-nobackground . subr3) (draw-point . subr2) (#:display:draw-point . nsubr) (draw-polymarker . subr3) (#:display:draw-polymarker . nsubr) (draw-line . nsubr) (#:display:draw-line . nsubr) (draw-polyline . subr3) (#:display:draw-polyline . nsubr) (draw-rectangle . nsubr) (#:display:draw-rectangle . nsubr) (fill-rectangle . nsubr) (#:display:fill-rectangle . nsubr) (highlight-rectangle . nsubr) (#:display:highlight-rectangle . nsubr) (fill-area . subr3) (#:display:fill-area . nsubr) (draw-ellipse . nsubr) (#:display:draw-ellipse . nsubr) (fill-ellipse . nsubr) (#:display:fill-ellipse . nsubr) (draw-circle . subr3) (#:display:draw-circle . nsubr) (fill-circle . subr3) (#:display:fill-circle . nsubr) (draw-arc . nsubr) (#:display:draw-arc . nsubr) (fill-arc . nsubr) (#:display:fill-arc . nsubr) (draw-segments . nsubr) (#:display:draw-segments . nsubr) (draw-string . dmsubr) (draw-rectangles . nsubr) (fill-rectangles . nsubr) (#:display:draw-rectangles . nsubr) (#:display:fill-rectangles . nsubr))

#[errnia draw-cursor #:display:current-display #:display:no-current-display #:display:dumpdevice #:display:dump getfn funcall send #:display:not-yet-inplemented draw-substring #:llcp:errwna errnsa draw-cn #:display:draw-substring-nobackground draw-substring-nobackground draw-cn-nobackground draw-point draw-polymarker errvec draw-line draw-polyline draw-rectangle fill-rectangle highlight-rectangle fill-area draw-ellipse fill-ellipse draw-circle fill-circle draw-arc fill-arc draw-segments let #:graph-env:arg0 list (#:graph-env:arg0 0 (slen #:graph-env:arg0)) mcons draw-rectangles #:display:dump:draw-rectangles fill-rectangles #:display:dump:fill-rectangles #:display:draw-rectangles <= |+| #:display:fill-rectangles #:gell-resetfn:function-name #:gell-resetfn:function-3 #:display:draw-cursor #:gell-resetfn:function-n #:display:draw-substring #:display:draw-cn #:display:draw-cn-nobackground #:gell-resetfn:function-2 #:display:draw-point #:display:draw-polymarker #:display:draw-line #:display:draw-polyline #:display:draw-rectangle #:display:fill-rectangle #:display:highlight-rectangle #:display:fill-area #:display:draw-ellipse #:display:fill-ellipse #:display:draw-circle #:display:fill-circle #:display:draw-arc #:display:fill-arc #:display:draw-segments draw-string #:gell-resetfn:function-1]
)

(defvar #:display:dumpdevice (if (boundp '#:display:dumpdevice) #:display:dumpdevice ()))
(defvar #:sys-package:colon 'display)
(defcsetfn 'draw-cursor "GZvirdraw" 0)
(defcsetfn '#:display:draw-cursor "GZvirdraw" 1)
(defcsetfn 'draw-substring "GZvirdraw" 2)
(defcsetfn '#:display:draw-substring "GZvirdraw" 3)
(defcsetfn 'draw-cn "GZvirdraw" 4)
(defcsetfn '#:display:draw-cn "GZvirdraw" 5)
(defcsetfn '#:display:draw-substring-nobackground "GZvirdraw" 6)
(defcsetfn 'draw-substring-nobackground "GZvirdraw" 7)
(defcsetfn '#:display:draw-cn-nobackground "GZvirdraw" 8)
(defcsetfn 'draw-cn-nobackground "GZvirdraw" 9)
(defcsetfn 'draw-point "GZvirdraw" 10)
(defcsetfn '#:display:draw-point "GZvirdraw" 11)
(defcsetfn 'draw-polymarker "GZvirdraw" 12)
(defcsetfn '#:display:draw-polymarker "GZvirdraw" 13)
(defcsetfn 'draw-line "GZvirdraw" 14)
(defcsetfn '#:display:draw-line "GZvirdraw" 15)
(defcsetfn 'draw-polyline "GZvirdraw" 16)
(defcsetfn '#:display:draw-polyline "GZvirdraw" 17)
(defcsetfn 'draw-rectangle "GZvirdraw" 18)
(defcsetfn '#:display:draw-rectangle "GZvirdraw" 19)
(defcsetfn 'fill-rectangle "GZvirdraw" 20)
(defcsetfn '#:display:fill-rectangle "GZvirdraw" 21)
(defcsetfn 'highlight-rectangle "GZvirdraw" 22)
(defcsetfn '#:display:highlight-rectangle "GZvirdraw" 23)
(defcsetfn 'fill-area "GZvirdraw" 24)
(defcsetfn '#:display:fill-area "GZvirdraw" 25)
(defcsetfn 'draw-ellipse "GZvirdraw" 26)
(defcsetfn '#:display:draw-ellipse "GZvirdraw" 27)
(defcsetfn 'fill-ellipse "GZvirdraw" 28)
(defcsetfn '#:display:fill-ellipse "GZvirdraw" 29)
(defcsetfn 'draw-circle "GZvirdraw" 30)
(defcsetfn '#:display:draw-circle "GZvirdraw" 31)
(defcsetfn 'fill-circle "GZvirdraw" 32)
(defcsetfn '#:display:fill-circle "GZvirdraw" 33)
(defcsetfn 'draw-arc "GZvirdraw" 34)
(defcsetfn '#:display:draw-arc "GZvirdraw" 35)
(defcsetfn 'fill-arc "GZvirdraw" 36)
(defcsetfn '#:display:fill-arc "GZvirdraw" 37)
(defcsetfn 'draw-segments "GZvirdraw" 38)
(defcsetfn '#:display:draw-segments "GZvirdraw" 39)
(defcsetfn 'draw-string "GZvirdraw" 40)
(defcsetfn 'draw-rectangles "GZvirdraw" 41)
(defcsetfn 'fill-rectangles "GZvirdraw" 42)
(defcsetfn '#:display:draw-rectangles "GZvirdraw" 43)
(defcsetfn '#:display:fill-rectangles "GZvirdraw" 44)

(defccheck '(|+| <= mcons list draw-cn draw-substring #:llcp:errwna send funcall getfn))
