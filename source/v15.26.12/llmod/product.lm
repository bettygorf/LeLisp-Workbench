defmodule product
;;; 
;;; The product info database
;;; 
;;; Initial author : A. Meller
;;; Ilog SA. All rights reserved.
;;; $Header: /usr/cvs/lelisp/llmod/product.lm,v 1.1 2006/12/09 11:22:13 jullien Exp $
;;;

files ( product.ll )
export (
	;; construct and set product info
	product-build-info
	    ;; (NAME &optionnal KEY1 VALUE1 KEY2 VALUE2...)
	    ;; NAME : product name
	    ;; KEY? : among (id date version subversion comment)
            ;; VALUE? : the value setting of corresponding key (see
	    ;; the 'set-... functions for allowed values.
            ;; ==> NAME
	;; Access and update of product info
	product-id
	    ;; (NAME)  ==> ID (product id = protection key)
	set-product-id
	    ;; (NAME ID:integer) ==> ID
	product-date
	    ;; (NAME)      ==> <#:date> (a structure 'date')
	set-product-date
	    ;; (NAME DATE:<#:date>) ==> DATE
	product-version
	    ;; (NAME) ==> VERSION
	set-product-version
            ;; (NAME VERSION:number) ==> VERSION
	product-subversion
	    ;; (NAME) ==> SUBVERSION
	set-product-subversion
            ;; (NAME SUBVERSION:number) ==> SUBVERSION
	product-comment
	    ;; (NAME) ==> COMMENT
	set-product-comment
	    ;; (NAME COMMENT:list_of_string) ==> COMMENT
	;; returns all products
	product-all-names
	    ;; () ==> list_of_NAMEs
	;; simple printing
	product-print
	    ;; (NAME) ==> t
	)

import (hash date)

;;; Added automatically, don't type beyond this line.
testfile (
|product.lt|
)
cpexport (
(product-build-info nsubr ())
(product-id subr1 ())
(set-product-id subr2 ())
(product-date subr1 ())
(set-product-date subr2 ())
(product-version subr1 ())
(set-product-version subr2 ())
(product-subversion subr1 ())
(set-product-subversion subr2 ())
(product-comment subr1 ())
(set-product-comment subr2 ())
(product-all-names subr0 ())
(product-print subr1 ())
)
cpfunctions (
(#:product:gethash subr2)
)
cpimport (
(date
(datep . subr1)
)(hash
(make-hash-table-eq . nsubr)
(puthash . subr3)
(gethash . nsubr)
))
cpenv (
setf
cpmac
hash
messages
date
((putprop '#:product:*product-database-holder* 't '#:complice:globalvar)
))
