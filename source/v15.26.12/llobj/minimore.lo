(loader '((title |minimore.lo|)))
(if (not (>= (version) 15.2)) (progn (error 'load 'erricf 'minimore)))
(defvar #:sys-package:colon 'minimore)
(defvar #:minimore:count (tyymax))
(defvar #:minimore:string "--More--")
(loader'((fentry more subr0)
(entry more subr0)
(mov (cvalq #:sys-package:itsoft) a2)
(mov 'minimore a1)
(jcall memq)
(bfnil a1 101)
(mov (cvalq #:sys-package:itsoft) a2)
(mov 'minimore a1)
(jcall cons)
(mov a1 (cvalq #:sys-package:itsoft))
(return)
101
(mov nil a1)
(return)
))
(loader'((fentry morend subr0)
(entry morend subr0)
(mov (cvalq #:sys-package:itsoft) a2)
(mov 'minimore a1)
(jcall delq)
(mov a1 (cvalq #:sys-package:itsoft))
(return)
))
(loader'((fentry #:minimore:bol subr0)
(entry #:minimore:bol subr0)
(push (@ 103))
(mov '0 a4)
(jmp inchan)
103
(eval ())
(bfnil a1 102)
(jcall tyymax)
(mov a1 (cvalq #:minimore:count))
102
(mov nil a3)
(mov 'bol a2)
(mov 'minimore a1)
(jmp super-itsoft)
))
(loader'((fentry #:minimore:eol subr0)
(entry #:minimore:eol subr0)
(push (@ 103))
(mov '0 a4)
(jmp outchan)
103
(eval ())
(bfnil a1 102)
(cabne (cvalq #:minimore:count) '0 105)
(hgsize (cvalq #:minimore:string) a2)
(mov (cvalq #:minimore:string) a1)
(jcall tystring)
(jcall tyi)
(cabeq a1 '13 108)
(cabne a1 '10 107)
108
(mov '1 (cvalq #:minimore:count))
(bra 106)
107
(cabne a1 '4 109)
(jcall tyymax)
(quo '2 a1)
(mov a1 (cvalq #:minimore:count))
(bra 106)
109
(cabne a1 '32 110)
(jcall tyymax)
(mov a1 (cvalq #:minimore:count))
(bra 106)
110
(cabne a1 '113 111)
(jcall tyymax)
(mov a1 (cvalq #:minimore:count))
(mov (cvalq #:minimore:string) a1)
(jcall slength)
(diff '1 a1)
(push a1)
112
(push (@ 114))
(push (& 1))
(push '0)
(mov '2 a4)
(jmp <)
114
(eval ())
(bfnil a1 113)
(mov (cvalq #:minimore:string) a2)
(mov (& 0) a1)
(jcall chrnth)
(jcall tyback)
(push (@ 115))
(push (& 1))
(push '-1)
(mov '2 a4)
(jmp |+|)
115
(eval ())
(mov a1 (& 0))
(bra 112)
113
(adjstk '1)
(push (@ 116))
(push (@ 117))
(mov '0 a4)
(jmp outbuf)
117
(eval ())
(push a1)
(push '0)
(push '32)
(push (@ 118))
(mov '0 a4)
(jmp outpos)
118
(eval ())
(push a1)
(mov '4 a4)
(jmp fillstring)
116
(eval ())
(push (@ 119))
(push '0)
(mov '1 a4)
(jmp outpos)
119
(eval ())
(mov nil a1)
(mov '#:system:toplevel-tag a2)
(jmp #:llcp:exit)
111
(mov '1 (cvalq #:minimore:count))
106
(mov (cvalq #:minimore:string) a1)
(jcall slength)
(diff '1 a1)
(push a1)
121
(push (@ 123))
(push (& 1))
(push '0)
(mov '2 a4)
(jmp <)
123
(eval ())
(bfnil a1 122)
(mov (cvalq #:minimore:string) a2)
(mov (& 0) a1)
(jcall chrnth)
(jcall tyback)
(push (@ 124))
(push (& 1))
(push '-1)
(mov '2 a4)
(jmp |+|)
124
(eval ())
(mov a1 (& 0))
(bra 121)
122
(adjstk '1)
105
(mov (cvalq #:minimore:count) a4)
(diff '1 a4)
(mov a4 (cvalq #:minimore:count))
102
(mov nil a3)
(mov 'eol a2)
(mov 'minimore a1)
(jmp super-itsoft)
))
(loader '((end)))
