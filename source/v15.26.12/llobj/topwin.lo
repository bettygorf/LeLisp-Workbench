(loader '((title |topwin.lo|)))
(if (not (>= (version) 15.2)) (progn (error 'load 'erricf 'topwin)))
(defvar #:sys-package:colon 'topwindow)
(add-feature 'window)
(if (not (getprop '#:image:rectangle:window:tty 'defstruct)) (progn (libload #:pathname:#[ () () () "ttywindow" () () ])))
(defvar topwindow)
(loader'((fentry topwindow nsubr)
(entry topwindow nsubr)
(jcall #:llcp:nlist)
(bfnil a1 101)
(btnil (cvalq topwindow) 105)
(mov nil a1)
(bra 106)
105
(mov 't a1)
106
(btnil a1 103)
(mov nil a1)
(return)
103
(mov 't a1)
(return)
101
(btnil (car a1) 107)
(bfnil (cvalq topwindow) 109)
(push (@ 111))
(mov '0 a4)
(jmp bitprologue)
111
(eval ())
(push (@ 112))
(push '#:window:tty)
(cabne (cvalq #:bitmap:name) 'bvtty 113)
(mov '0 a4)
(bra 114)
113
(mov '50 a4)
114
(push a4)
(cabne (cvalq #:bitmap:name) 'bvtty 115)
(mov '0 a4)
(bra 116)
115
(mov '50 a4)
116
(push a4)
(push (@ 117))
(mov '0 a4)
(jmp bitxmax)
117
(eval ())
(quo '2 a1)
(push a1)
(push (@ 118))
(mov '0 a4)
(jmp bitymax)
118
(eval ())
(quo '2 a1)
(push a1)
(push '"Le-Lisp : Toplevel")
(push '1)
(push '1)
(mov '8 a4)
(jmp create-window)
112
(eval ())
(mov a1 (cvalq topwindow))
(mov (cvalq #:sys-package:itsoft) a2)
(mov 'topwindow a1)
(jcall cons)
(mov a1 (cvalq #:sys-package:itsoft))
(push (@ 119))
(mov '0 a4)
(jmp bitmap-flush)
119
(eval ())
(push (@ 120))
(mov '0 a4)
(jmp bitmap-sync)
120
(eval ())
(mov (cvalq #:bitmap:name) a1)
(cabne a1 'X11 122)
(push nil)
123
(push (@ 126))
(mov '0 a4)
(jmp read-event)
126
(eval ())
(mov a1 (& 0))
(hpxmov a1 '0 a4)
(cabne a4 'map-window 123)
(hpxmov a1 '1 a4)
(cabeq a4 (cvalq topwindow) 124)
(bra 123)
124
(adjstk '1)
(bra 121)
122
(cabeq a1 'windows 128)
(cabne a1 'pm 121)
128
(push nil)
129
(push (@ 132))
(mov '0 a4)
(jmp read-event)
132
(eval ())
(mov a1 (& 0))
(hpxmov a1 '0 a4)
(cabne a4 'repaint-window-event 129)
(hpxmov a1 '1 a4)
(cabeq a4 (cvalq topwindow) 130)
(bra 129)
130
(adjstk '1)
121
(push (@ 133))
(push (cvalq topwindow))
(mov '1 a4)
(jmp current-window)
133
(eval ())
(return)
109
(mov nil a1)
(return)
107
(btnil (cvalq topwindow) 134)
(jcall tyflush)
(push (@ 136))
(push nil)
(mov '1 a4)
(jmp current-window)
136
(eval ())
(mov (cvalq topwindow) a1)
(jcall kill-window)
(mov nil (cvalq topwindow))
(mov (cvalq #:sys-package:itsoft) a2)
(mov 'topwindow a1)
(jcall delq)
(mov a1 (cvalq #:sys-package:itsoft))
(push (@ 137))
(mov '0 a4)
(jmp bitepilogue)
137
(eval ())
(return)
134
(mov nil a1)
(return)
))
(if (featurep 'pepe) (progn (setq #:sys-package:colon 'pepe) (newl #:pepe:commands (cons 22 '((#:topwindow:nextscreen)))) (defesckey 86 (#:topwindow:prevscreen)) (defesckey 60 (setq #:topwindow:ydisplay 0 #:topwindow:xcursor 0 #:topwindow:ycursor 0 #:topwindow:column 0)) (defesckey 62 (setq #:topwindow:ycursor (length #:topwindow:buffer) #:topwindow:ydisplay (max 0 (|-| #:topwindow:ycursor (div #:tty:ymax 2))) #:topwindow:ycursor (|-| #:topwindow:ycursor #:topwindow:ydisplay 1)) (#:topwindow:endline))))
(loader '((end)))
