(loader '((title |virwindow.lo|)))
(if (not (>= (version) 15.2)) (progn (error 'load 'erricf 'virbitmap)))
(setq #:sys-package:colon 'window)
(if (not (boundp '#:window:all-windows)) (progn (defvar #:window:all-windows)))
(defvar #:window:current-window)
(defvar #:window:current-keyboard-focus-window)
(if (not (boundp '#:graph-env:current-graph-env)) (progn (defvar #:graph-env:current-graph-env)))
(defvar #:check-window:x)
(defvar #:check-window:y)
(loader'((fentry create-window nsubr)
(entry create-window nsubr)
(cnbeq a4 '8 101)
(mov 'create-window a1)
(mov '8 a2)
(jmp #:llcp:errwna)
101
(btsymb (& 7) 103)
(mov (& 7) a3)
(mov 'errsym a2)
(mov 'create-window a1)
(jcall error)
103
(btfix (& 6) 105)
(mov (& 6) a3)
(mov 'errnia a2)
(mov 'create-window a1)
(jcall error)
105
(btfix (& 5) 107)
(mov (& 5) a3)
(mov 'errnia a2)
(mov 'create-window a1)
(jcall error)
107
(btfix (& 4) 109)
(mov (& 4) a3)
(mov 'errnia a2)
(mov 'create-window a1)
(jcall error)
109
(btfix (& 3) 111)
(mov (& 3) a3)
(mov 'errnia a2)
(mov 'create-window a1)
(jcall error)
111
(btfix (& 1) 113)
(mov (& 1) a3)
(mov 'errnia a2)
(mov 'create-window a1)
(jcall error)
113
(btfix (& 0) 115)
(mov (& 0) a3)
(mov 'errnia a2)
(mov 'create-window a1)
(jcall error)
115
(mov (& 7) a1)
(call compat-type)
(mov a1 (& 7))
(mov 'create a2)
(jcall getfn1)
(push a1)
(bfnil a1 117)
(mov (& 8) a3)
(mov '#:display:errnotawindowtype a2)
(mov 'create-window a1)
(jcall error)
117
(push (@ 118))
(push (& 1))
(push (& 9))
(push (& 9))
(push (& 9))
(push (& 9))
(push (& 9))
(push (& 9))
(push (& 9))
(mov '8 a4)
(jmp funcall)
118
(eval ())
(adjstk '9)
(return)
))
(loader'((fentry create-subwindow nsubr)
(entry create-subwindow nsubr)
(cnbeq a4 '9 101)
(mov 'create-subwindow a1)
(mov '9 a2)
(jmp #:llcp:errwna)
101
(btsymb (& 8) 103)
(mov (& 8) a3)
(mov 'errsym a2)
(mov 'create-subwindow a1)
(jcall error)
103
(btfix (& 7) 105)
(mov (& 7) a3)
(mov 'errnia a2)
(mov 'create-subwindow a1)
(jcall error)
105
(btfix (& 6) 107)
(mov (& 6) a3)
(mov 'errnia a2)
(mov 'create-subwindow a1)
(jcall error)
107
(btfix (& 5) 109)
(mov (& 5) a3)
(mov 'errnia a2)
(mov 'create-subwindow a1)
(jcall error)
109
(btfix (& 4) 111)
(mov (& 4) a3)
(mov 'errnia a2)
(mov 'create-subwindow a1)
(jcall error)
111
(btnil (& 0) 113)
(mov '#:image:rectangle:window a2)
(mov (& 0) a1)
(jcall typep)
(bfnil a1 113)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'create-subwindow a1)
(jcall error)
113
(mov (& 8) a1)
(call compat-type)
(mov a1 (& 8))
(mov 'create a2)
(jcall getfn1)
(push a1)
(bfnil a1 117)
(mov (& 9) a3)
(mov '#:display:errnotawindowtype a2)
(mov 'create-window a1)
(jcall error)
117
(push (@ 118))
(push (& 1))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(mov '9 a4)
(jmp funcall)
118
(eval ())
(adjstk '10)
(return)
))
(loader'((fentry make-window subr1)
(entry make-window subr1)
(push a1)
(mov '#:image:rectangle:window a2)
(jcall typep)
(bfnil a1 102)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'make-window a1)
(jcall error)
102
(bfnil (cvalq #:display:current-display) 104)
(mov (cvalq #:display:current-display) a3)
(mov '#:display:no-current-display a2)
(mov 'make-window a1)
(jcall error)
104
(hpxmov (& 0) '9 a4)
(btnil a4 106)
(hpxmov a4 '12 a3)
(hpmovx a3 (& 0) '12)
(push a4)
(hpxmov a4 '13 a2)
(mov (& 1) a1)
(jcall cons)
(pop a4)
(hpmovx a1 a4 '13)
106
(hpxmov (& 0) '12 a4)
(bfnil a4 108)
(hpmovx (cvalq #:display:current-display) (& 0) '12)
108
(hpxmov (& 0) '11 a4)
(bfnil a4 110)
(hpmovx '0 (& 0) '11)
110
(hpmovx nil (& 0) '13)
(push (@ 111))
(mov '0 a4)
(jmp current-display)
111
(eval ())
(push a1)
(push (@ 112))
(push dlink)
(push prot)
(stack dlink)
(push (@ 114))
(hpxmov (& 5) '12 a4)
(push a4)
(mov '1 a4)
(jmp current-display)
114
(eval ())
(hpxmov (& 4) '12 a4)
(push a4)
(hpxmov (& 5) '12 a1)
(hpxmov a1 '14 a1)
(mov (& 5) a2)
(jcall nconc1)
(pop a4)
(hpmovx a1 a4 '14)
(mov a1 (cvalq #:window:all-windows))
(push (@ 115))
(push 'make-window)
(push (& 6))
(mov '2 a4)
(jmp send)
115
(eval ())
(hpxmov (& 4) '7 a4)
(btnil a4 117)
(hpxmov (& 4) '7 a4)
(hpxmov a4 '11 a4)
(bfnil a4 117)
(hpxmov (& 4) '7 a4)
(hpxmov (& 4) '12 a3)
(hpmovx a3 a4 '11)
117
(mov (& 4) a4)
(mov (& 1) dlink)
(adjstk '3)
(push a4)
(mov (@ 113) a3)
112
(push a3)
(push a2)
(push (@ 120))
(push (& 4))
(mov '1 a4)
(jmp current-display)
120
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
113
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry current-window nsubr)
(entry current-window nsubr)
(push a4)
(mov (& 0) a4)
(plus '0 a4)
(xspmov a4 a4)
(push (& 0))
(push (cvalq #:display:current-display))
(push a4)
(mov (& 2) a1)
(cabne a1 '0 102)
(btnil (& 1) 103)
(hpxmov (& 1) '8 a1)
(bra 101)
103
(mov nil a1)
(bra 101)
102
(cabne a1 '1 105)
(btnil a4 107)
(mov '#:image:rectangle:window a2)
(mov a4 a1)
(jcall typep)
(bfnil a1 109)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'current-window a1)
(jcall error)
109
(hpxmov (& 0) '12 a4)
(mov a4 (& 1))
107
(bfnil (& 1) 110)
(mov nil a1)
(bra 101)
110
(hpxmov (& 1) '8 a4)
(cabne (& 0) a4 112)
(push (@ 114))
(push (& 2))
(mov '1 a4)
(jmp current-display)
114
(eval ())
(mov (& 0) a1)
(bra 101)
112
(push (@ 115))
(push (& 2))
(mov '1 a4)
(jmp current-display)
115
(eval ())
(hpxmov (& 1) '8 a4)
(btnil a4 117)
(push (@ 118))
(push 'uncurrent-window)
(hpxmov (& 3) '8 a4)
(push a4)
(mov '2 a4)
(jmp send)
118
(eval ())
117
(hpmovx (& 0) (& 1) '8)
(mov (& 0) (cvalq #:window:current-window))
(btnil (& 0) 119)
(hpxmov (& 0) '7 a4)
(bra 120)
119
(hpxmov (& 1) '11 a4)
120
(hpmovx a4 (& 1) '9)
(mov a4 (cvalq #:graph-env:current-graph-env))
(hpxmov (& 1) '8 a3)
(btnil a3 122)
(push (@ 123))
(push 'current-window)
(hpxmov (& 3) '8 a3)
(push a3)
(mov '2 a4)
(jmp send)
123
(eval ())
122
(mov (& 0) a1)
(bra 101)
105
(mov a1 a3)
(mov 'errwna a2)
(mov 'current-window a1)
(jcall error)
101
(adjstk '3)
(pop a4)
(adjstk a4)
(return)
))
(loader'((fentry modify-window nsubr)
(entry modify-window nsubr)
(cnbeq a4 '8 101)
(mov 'modify-window a1)
(mov '8 a2)
(jmp #:llcp:errwna)
101
(mov '#:image:rectangle:window a2)
(mov (& 7) a1)
(jcall typep)
(bfnil a1 103)
(mov (& 7) a3)
(mov '#:display:errnotawindow a2)
(mov 'modify-window a1)
(jcall error)
103
(hpxmov (& 7) '12 a4)
(push a4)
(bfnil a4 105)
(mov a4 a3)
(mov '#:display:no-current-display a2)
(mov 'modify-window a1)
(jcall error)
105
(hpxmov (& 0) '10 a4)
(cabeq a4 (& 8) 106)
(bfnil (& 7) 108)
(bfnil (& 6) 108)
(bfnil (& 5) 108)
(bfnil (& 4) 108)
(bfnil (& 3) 108)
(bfnil (& 2) 108)
(btnil (& 1) 106)
108
(bfnil (& 5) 111)
(btnil (& 4) 110)
111
(hpxmov (& 8) '7 a4)
(hpxmov a4 '10 a3)
(hpmovx '0 a4 '6)
(hpmovx '0 a4 '7)
(mov (& 5) a2)
(bfnil a2 112)
(hpxmov (& 8) '2 a2)
112
(hpmovx a2 a4 '8)
(mov (& 4) a2)
(bfnil a2 113)
(hpxmov (& 8) '3 a2)
113
(hpmovx a2 a4 '9)
(btnil a3 110)
(hpxmov a4 '8 a2)
(hpmovx a2 a3 '0)
(hpxmov a4 '9 a2)
(hpmovx a2 a3 '1)
110
(push (@ 116))
(mov '0 a4)
(jmp current-display)
116
(eval ())
(push a1)
(push (@ 117))
(push dlink)
(push prot)
(stack dlink)
(push (@ 119))
(push (& 5))
(mov '1 a4)
(jmp current-display)
119
(eval ())
(push (@ 120))
(push 'modify-window)
(push (& 14))
(push (& 14))
(push (& 14))
(push (& 14))
(push (& 14))
(push (& 14))
(push (& 14))
(push (& 14))
(mov '9 a4)
(jmp send)
120
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 118) a3)
117
(push a3)
(push a2)
(push (@ 121))
(push (& 4))
(mov '1 a4)
(jmp current-display)
121
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
118
(eval ())
(adjstk '1)
(mov (& 8) a1)
(adjstk '9)
(return)
106
(mov nil a1)
(adjstk '9)
(return)
))
(loader'((fentry update-window nsubr)
(entry update-window nsubr)
(cnbeq a4 '5 101)
(mov 'update-window a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(mov '#:image:rectangle:window a2)
(mov (& 4) a1)
(jcall typep)
(bfnil a1 103)
(mov (& 4) a3)
(mov '#:display:errnotawindow a2)
(mov 'update-window a1)
(jcall error)
103
(hpxmov (& 4) '12 a4)
(push a4)
(bfnil a4 105)
(mov a4 a3)
(mov '#:display:no-current-display a2)
(mov 'update-window a1)
(jcall error)
105
(hpxmov (& 0) '10 a4)
(cabeq a4 (& 5) 106)
(bfnil (& 4) 108)
(bfnil (& 3) 108)
(bfnil (& 2) 108)
(btnil (& 1) 106)
108
(bfnil (& 2) 111)
(btnil (& 1) 110)
111
(hpxmov (& 5) '7 a4)
(hpxmov a4 '10 a3)
(hpmovx '0 a4 '6)
(hpmovx '0 a4 '7)
(mov (& 2) a2)
(bfnil a2 112)
(hpxmov (& 5) '2 a2)
112
(hpmovx a2 a4 '8)
(mov (& 1) a2)
(bfnil a2 113)
(hpxmov (& 5) '3 a2)
113
(hpmovx a2 a4 '9)
(btnil a3 110)
(hpxmov a4 '8 a2)
(hpmovx a2 a3 '0)
(hpxmov a4 '9 a2)
(hpmovx a2 a3 '1)
110
(push (@ 116))
(mov '0 a4)
(jmp current-display)
116
(eval ())
(push a1)
(push (@ 117))
(push dlink)
(push prot)
(stack dlink)
(push (@ 119))
(push (& 5))
(mov '1 a4)
(jmp current-display)
119
(eval ())
(push (@ 120))
(push 'update-window)
(push (& 11))
(push (& 11))
(push (& 11))
(push (& 11))
(push (& 11))
(mov '6 a4)
(jmp send)
120
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 118) a3)
117
(push a3)
(push a2)
(push (@ 121))
(push (& 4))
(mov '1 a4)
(jmp current-display)
121
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
118
(eval ())
(adjstk '1)
(mov (& 5) a1)
(adjstk '6)
(return)
106
(mov nil a1)
(adjstk '6)
(return)
))
(loader'((fentry kill-window subr1)
(entry kill-window subr1)
(push a1)
(mov '#:image:rectangle:window a2)
(jcall typep)
(bfnil a1 102)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'kill-window a1)
(jcall error)
102
(hpxmov (& 0) '12 a4)
(push a4)
(bfnil a4 104)
(mov a4 a3)
(mov '#:display:no-current-display a2)
(mov 'kill-window a1)
(jcall error)
104
(hpxmov (& 0) '10 a4)
(cabeq a4 (& 1) 105)
(hpxmov (& 1) '13 a4)
(push a4)
107
(bfcons (& 0) 108)
(mov (& 0) a1)
(mov (cdr a1) (& 0))
(mov (car a1) a1)
(jcall kill-window)
(bra 107)
108
(adjstk '1)
(hpxmov (& 1) '9 a4)
(btnil a4 110)
(hpxmov (& 1) '9 a4)
(push a4)
(hpxmov (& 2) '9 a2)
(hpxmov a2 '13 a2)
(mov (& 2) a1)
(jcall delq)
(pop a4)
(hpmovx a1 a4 '13)
110
(push (@ 111))
(mov '0 a4)
(jmp current-display)
111
(eval ())
(push a1)
(push (@ 112))
(push dlink)
(push prot)
(stack dlink)
(push (@ 114))
(push (& 5))
(mov '1 a4)
(jmp current-display)
114
(eval ())
(hpxmov (& 4) '8 a4)
(cabne (& 5) a4 116)
(push (@ 117))
(push nil)
(mov '1 a4)
(jmp current-window)
117
(eval ())
116
(hpxmov (& 4) '7 a4)
(cabne (& 5) a4 119)
(push (@ 120))
(push nil)
(mov '1 a4)
(jmp current-keyboard-focus-window)
120
(eval ())
119
(hpxmov (& 4) '14 a2)
(mov (& 5) a1)
(jcall delq)
(hpmovx a1 (& 4) '14)
(mov a1 (cvalq #:window:all-windows))
(push (@ 121))
(push 'kill-window)
(push (& 7))
(mov '2 a4)
(jmp send)
121
(eval ())
(hpmovx nil (& 5) '12)
(hpmovx nil (& 5) '8)
(hpxmov (& 5) '7 a4)
(btnil a4 122)
(hpxmov (& 5) '7 a4)
(hpmovx nil a4 '11)
(hpxmov (& 5) '7 a4)
(hpmovx nil a4 '12)
(hpxmov (& 5) '7 a4)
(hpmovx nil a4 '10)
(mov nil a1)
(bra 123)
122
(mov nil a1)
123
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 113) a3)
112
(push a3)
(push a2)
(push (@ 124))
(push (& 4))
(mov '1 a4)
(jmp current-display)
124
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
113
(eval ())
(adjstk '3)
(return)
105
(mov nil a1)
(adjstk '2)
(return)
))
(loader'((fentry pop-window subr1)
(entry pop-window subr1)
(push a1)
(mov '#:image:rectangle:window a2)
(jcall typep)
(bfnil a1 102)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'pop-window a1)
(jcall error)
102
(hpxmov (& 0) '12 a4)
(push nil)
(push a4)
(bfnil a4 104)
(mov a4 a3)
(mov '#:display:no-current-display a2)
(mov 'pop-window a1)
(jcall error)
104
(hpxmov (& 0) '10 a4)
(cabeq a4 (& 2) 105)
(push (@ 107))
(mov '0 a4)
(jmp current-display)
107
(eval ())
(push a1)
(push (@ 108))
(push dlink)
(push prot)
(stack dlink)
(push (@ 110))
(push (& 5))
(mov '1 a4)
(jmp current-display)
110
(eval ())
(hpxmov (& 4) '14 a2)
(mov (& 6) a1)
(jcall delq)
(mov (& 6) a2)
(jcall nconc1)
(hpmovx a1 (& 4) '14)
(mov a1 (cvalq #:window:all-windows))
(hpxmov (& 6) '9 a4)
(btnil a4 112)
(hpxmov (& 6) '9 a4)
(mov a4 (& 5))
(push a4)
(hpxmov a4 '13 a2)
(mov (& 7) a1)
(jcall delq)
(mov a1 a2)
(mov (& 7) a1)
(jcall cons)
(pop a4)
(hpmovx a1 a4 '13)
112
(push (@ 113))
(push 'pop-window)
(push (& 8))
(mov '2 a4)
(jmp send)
113
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 109) a3)
108
(push a3)
(push a2)
(push (@ 114))
(push (& 4))
(mov '1 a4)
(jmp current-display)
114
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
109
(eval ())
(adjstk '4)
(return)
105
(mov nil a1)
(adjstk '3)
(return)
))
(loader'((fentry move-behind-window subr2)
(entry move-behind-window subr2)
(push a2)
(push a1)
(mov '#:image:rectangle:window a2)
(jcall typep)
(bfnil a1 102)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'move-behind-window a1)
(jcall error)
102
(mov '#:image:rectangle:window a2)
(mov (& 1) a1)
(jcall typep)
(bfnil a1 104)
(mov (& 1) a3)
(mov '#:display:errnotawindow a2)
(mov 'move-behind-window a1)
(jcall error)
104
(hpxmov (& 0) '12 a4)
(hpxmov (& 1) '12 a3)
(cabeq a4 a3 106)
(push (@ 107))
(push a4)
(push a3)
(mov '2 a4)
(jmp list)
107
(eval ())
(mov a1 a3)
(mov '#:display:err-diff-display a2)
(mov 'move-behind-window a1)
(jcall error)
106
(cabeq (& 0) (& 1) 108)
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq (& 0) a4 108)
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq (& 1) a4 108)
(push nil)
(push (@ 110))
(mov '0 a4)
(jmp current-display)
110
(eval ())
(push a1)
(push (@ 111))
(push dlink)
(push prot)
(stack dlink)
(push (@ 113))
(hpxmov (& 6) '12 a4)
(push a4)
(mov '1 a4)
(jmp current-display)
113
(eval ())
(hpxmov (& 5) '12 a4)
(push a4)
(hpxmov (& 6) '12 a1)
(hpxmov a1 '14 a1)
(jcall nreverse)
(mov a1 a2)
(mov (& 6) a1)
(jcall delq)
(pop a4)
(hpmovx a1 a4 '14)
(hpxmov (& 6) '12 a2)
(hpxmov a2 '14 a2)
(mov (& 6) a1)
(jcall memq)
(mov a1 (& 4))
(push a1)
(mov (cdr a1) a2)
(mov (& 6) a1)
(jcall cons)
(pop a4)
(mov a1 (cdr a4))
(hpxmov (& 6) '12 a4)
(push a4)
(hpxmov (& 7) '12 a1)
(hpxmov a1 '14 a1)
(jcall nreverse)
(pop a4)
(hpmovx a1 a4 '14)
(mov a1 (cvalq #:window:all-windows))
(hpxmov (& 5) '9 a4)
(btnil a4 115)
(hpxmov (& 5) '9 a4)
(hpxmov (& 6) '9 a3)
(cabne a4 a3 115)
(hpxmov (& 5) '9 a4)
(push a4)
(push a4)
(hpxmov a4 '13 a1)
(jcall nreverse)
(mov a1 a2)
(mov (& 8) a1)
(jcall delq)
(pop a4)
(hpmovx a1 a4 '13)
(hpxmov (& 0) '13 a2)
(mov (& 6) a1)
(jcall memq)
(mov a1 (& 5))
(push a1)
(mov (cdr a1) a2)
(mov (& 8) a1)
(jcall cons)
(pop a4)
(mov a1 (cdr a4))
(hpxmov (& 0) '13 a1)
(jcall nreverse)
(hpmovx a1 (& 0) '13)
(adjstk '1)
115
(push (@ 116))
(push 'move-behind-window)
(push (& 7))
(push (& 9))
(mov '3 a4)
(jmp send)
116
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 112) a3)
111
(push a3)
(push a2)
(push (@ 117))
(push (& 4))
(mov '1 a4)
(jmp current-display)
117
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
112
(eval ())
(adjstk '4)
(return)
108
(mov nil a1)
(adjstk '2)
(return)
))
(loader'((fentry current-keyboard-focus-window nsubr)
(entry current-keyboard-focus-window nsubr)
(push a4)
(cabne '0 (& 0) 101)
(hpxmov (cvalq #:display:current-display) '7 a1)
(bra 102)
101
(mov (& 0) a4)
(plus '0 a4)
(xspmov a4 a4)
(push a4)
(btnil a4 104)
(mov '#:image:rectangle:window a2)
(mov a4 a1)
(jcall typep)
(bfnil a1 104)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'current-keyboard-focus-window a1)
(jcall error)
104
(btnil (& 0) 107)
(hpxmov (& 0) '12 a4)
(bra 108)
107
(mov (cvalq #:display:current-display) a4)
108
(push a4)
(btnil a4 109)
(push (@ 111))
(mov '0 a4)
(jmp current-display)
111
(eval ())
(push a1)
(push (@ 112))
(push dlink)
(push prot)
(stack dlink)
(push (@ 114))
(push (& 5))
(mov '1 a4)
(jmp current-display)
114
(eval ())
(hpxmov (& 4) '7 a4)
(btnil a4 116)
(push (@ 117))
(push 'uncurrent-keyboard-focus-window)
(hpxmov (& 6) '7 a4)
(push a4)
(mov '2 a4)
(jmp send)
117
(eval ())
116
(hpmovx (& 5) (& 4) '7)
(mov (& 5) (cvalq #:window:current-keyboard-focus-window))
(btnil (& 5) 119)
(push (@ 120))
(push 'current-keyboard-focus-window)
(push (& 7))
(mov '2 a4)
(jmp send)
120
(eval ())
119
(mov (& 5) a4)
(mov (& 1) dlink)
(adjstk '3)
(push a4)
(mov (@ 113) a3)
112
(push a3)
(push a2)
(push (@ 121))
(push (& 4))
(mov '1 a4)
(jmp current-display)
121
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
113
(eval ())
(adjstk '1)
(bra 110)
109
(mov nil a1)
110
(adjstk '2)
102
(pop a4)
(adjstk a4)
(return)
))
(loader'((fentry find-window subr2)
(entry find-window subr2)
(push a2)
(push a1)
(btfix a1 102)
(mov a1 a3)
(mov 'errnia a2)
(mov 'find-window a1)
(jcall error)
102
(btfix (& 1) 104)
(mov (& 1) a3)
(mov 'errnia a2)
(mov 'find-window a1)
(jcall error)
104
(bfnil (cvalq #:display:current-display) 106)
(mov (cvalq #:display:current-display) a3)
(mov '#:display:no-current-display a2)
(mov 'find-window a1)
(jcall error)
106
(push (@ 107))
(push 'find-window)
(push (cvalq #:display:current-display))
(push (& 3))
(push (& 5))
(mov '4 a4)
(jmp send)
107
(eval ())
(adjstk '2)
(return)
))
(loader'((fentry map-window nsubr)
(entry map-window nsubr)
(cnbeq a4 '5 101)
(mov 'map-window a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(mov '#:image:rectangle:window a2)
(mov (& 4) a1)
(jcall typep)
(bfnil a1 103)
(mov (& 4) a3)
(mov '#:display:errnotawindow a2)
(mov 'map-window a1)
(jcall error)
103
(hpxmov (& 4) '12 a4)
(bfnil a4 105)
(hpxmov (& 4) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'map-window a1)
(jcall error)
105
(push (@ 106))
(push 'map-window)
(push (& 6))
(push (& 6))
(push (& 6))
(push (& 6))
(push (& 6))
(mov '6 a4)
(jmp send)
106
(eval ())
(mov nil a1)
(adjstk '5)
(return)
))
(loader'((fentry windowp subr1)
(entry windowp subr1)
(push a1)
(mov '#:image:rectangle:window a2)
(jcall typep)
(btnil a1 101)
(hpxmov (& 0) '8 a1)
(btnil a1 101)
(hpxmov (& 0) '12 a1)
(btnil a1 101)
(mov (& 0) a1)
101
(adjstk '1)
(return)
))
(loader'((fentry subwindowp subr2)
(entry subwindowp subr2)
(push a2)
(push a1)
(jcall windowp)
(btnil a1 101)
(mov (& 1) a1)
(jcall windowp)
(btnil a1 101)
(mov (& 1) a2)
(mov (& 0) a1)
(adjstk '2)
(bra subwindowp1)
101
(adjstk '2)
(return)
))
(loader'((entry subwindowp1 subr2)
(bfnil a1 101)
(mov nil a1)
(return)
101
(cabne a1 a2 103)
(return)
103
(hpxmov a1 '9 a1)
(bra subwindowp1)
))
(loader'((fentry check-window-position subr1)
(entry check-window-position subr1)
(push a1)
(mov '#:image:rectangle:window a2)
(jcall typep)
(bfnil a1 102)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'check-window-position a1)
(jcall error)
102
(hpxmov (& 0) '12 a4)
(bfnil a4 104)
(hpxmov (& 0) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'check-window-position a1)
(jcall error)
104
(push (@ 105))
(push (& 1))
(push '0)
(push '0)
(push '#:check-window:x)
(push '#:check-window:y)
(mov '5 a4)
(jmp map-window)
105
(eval ())
(mov '0 a4)
(diff (cvalq #:check-window:x) a4)
(mov a4 (cvalq #:check-window:x))
(mov '0 a3)
(diff (cvalq #:check-window:y) a3)
(mov a3 (cvalq #:check-window:y))
(hpxmov (& 0) '0 a2)
(cabne a2 a4 108)
(hpxmov (& 0) '1 a2)
(cabeq a2 a3 106)
108
(push (@ 109))
(push (& 1))
(push a4)
(push a3)
(push nil)
(push nil)
(mov '5 a4)
(jmp update-window)
109
(eval ())
(adjstk '1)
(return)
106
(mov nil a1)
(adjstk '1)
(return)
))
(loader'((fentry define-window-property-accessor dmsubr)
(entry define-window-property-accessor dmsubr)
(mov (car a1) a1)
(push a1)
(push (@ 101))
(push 'defun)
(mov a1 a2)
(mov '#:image:rectangle:window a1)
(jcall symbol)
(push a1)
(push '&nobind)
(push (@ 102))
(push 'if)
(push '(eq (arg) 1))
(push (@ 103))
(push 'cassq)
(push (@ 104))
(push 'quote)
(push (& 11))
(mov '2 a4)
(jmp list)
104
(eval ())
(push a1)
(push '((#:image:rectangle:window:properties (arg 0))))
(mov '3 a4)
(jmp mcons)
103
(eval ())
(push a1)
(push (@ 105))
(push '#:image:rectangle:window:set-property)
(push '(arg 0))
(push (@ 106))
(push 'quote)
(push (& 13))
(mov '2 a4)
(jmp list)
106
(eval ())
(push a1)
(push '((arg 1)))
(mov '4 a4)
(jmp mcons)
105
(eval ())
(push a1)
(mov '4 a4)
(jmp list)
102
(eval ())
(push a1)
(mov '4 a4)
(jmp list)
101
(eval ())
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:window:set-property subr3)
(entry #:image:rectangle:window:set-property subr3)
(push a3)
(push a2)
(push a1)
(push a2)
(hpxmov a1 '10 a2)
(pop a1)
(jcall assq)
(btnil a1 101)
(mov (& 2) (cdr a1))
(adjstk '3)
(return)
101
(hpxmov (& 0) '10 a3)
(mov (& 2) a2)
(mov (& 1) a1)
(jcall acons)
(hpmovx a1 (& 0) '10)
(adjstk '3)
(return)
))
(loader'((entry compat-type subr1)
(cabne a1 'window 102)
(mov '#:image:rectangle:window a1)
(return)
102
(cabne a1 '#:window:tty 29999)
(mov '#:image:rectangle:window:tty a1)
(return)
29999
(return)
))
(loader'((fentry #:image:rectangle:window:create nsubr)
(entry #:image:rectangle:window:create nsubr)
(cnbge a4 '7 101)
(mov '#:image:rectangle:window:create a1)
(mov '7 a2)
(jmp #:llcp:errwna)
101
(diff '7 a4)
(jcall #:llcp:nlist)
(push a1)
(jcall #:image:rectangle:window:make)
(push a1)
(hpmovx (& 8) a1 '0)
(hpmovx (& 7) a1 '1)
(hpmovx (& 6) a1 '2)
(hpmovx (& 5) a1 '3)
(push a1)
(mov (& 5) a2)
(mov '"" a1)
(jcall eqstring)
(btnil a1 102)
(mov '"Le-Lisp" a4)
(bra 103)
102
(mov (& 5) a4)
103
(pop a3)
(hpmovx a4 a3 '4)
(hpmovx (& 3) (& 0) '5)
(hpmovx (& 2) (& 0) '6)
(btnil (& 1) 104)
(mov (& 1) a4)
(mov (car a4) a4)
(bra 105)
104
(mov nil a4)
105
(hpmovx a4 (& 0) '9)
(mov (& 0) a1)
(adjstk '9)
(jmp make-window)
))
(loader'((fentry #:image:rectangle:window:prin subr1)
(entry #:image:rectangle:window:prin subr1)
(push a1)
(push (@ 101))
(push '35)
(mov '1 a4)
(jmp princn)
101
(eval ())
(push (@ 102))
(push '60)
(mov '1 a4)
(jmp princn)
102
(eval ())
(push (@ 103))
(mov (& 1) a1)
(jcall type-of)
(push a1)
(mov '1 a4)
(jmp prin)
103
(eval ())
(push (@ 104))
(push '32)
(mov '1 a4)
(jmp princn)
104
(eval ())
(push (@ 105))
(hpxmov (& 1) '4 a4)
(push a4)
(mov '1 a4)
(jmp prin)
105
(eval ())
(push (@ 106))
(push '62)
(mov '1 a4)
(jmp princn)
106
(eval ())
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:window:make-window subr1)
(entry #:image:rectangle:window:make-window subr1)
(push a1)
(hpxmov a1 '9 a4)
(btnil a4 101)
(push (@ 103))
(push 'create-subwindow)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(mov '3 a4)
(jmp send)
103
(eval ())
(bra 102)
101
(push (@ 104))
(push 'create-window)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(mov '3 a4)
(jmp send)
104
(eval ())
102
(mov (& 0) a1)
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:window:current-window subr1)
(entry #:image:rectangle:window:current-window subr1)
(push (@ 101))
(push 'current-window)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:uncurrent-window subr1)
(entry #:image:rectangle:window:uncurrent-window subr1)
(push (@ 101))
(push 'uncurrent-window)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:modify-window nsubr)
(entry #:image:rectangle:window:modify-window nsubr)
(cnbeq a4 '8 101)
(mov '#:image:rectangle:window:modify-window a1)
(mov '8 a2)
(jmp #:llcp:errwna)
101
(bfnil (& 4) 104)
(btnil (& 3) 103)
104
(hpxmov (& 7) '7 a4)
(hpxmov a4 '10 a3)
(hpmovx '0 a4 '6)
(hpmovx '0 a4 '7)
(mov (& 4) a2)
(bfnil a2 105)
(hpxmov (& 7) '2 a2)
105
(hpmovx a2 a4 '8)
(mov (& 3) a2)
(bfnil a2 106)
(hpxmov (& 7) '3 a2)
106
(hpmovx a2 a4 '9)
(btnil a3 103)
(hpxmov a4 '8 a2)
(hpmovx a2 a3 '0)
(hpxmov a4 '9 a2)
(hpmovx a2 a3 '1)
103
(push (@ 109))
(push 'modify-window)
(hpxmov (& 9) '12 a4)
(push a4)
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(push (& 10))
(mov '10 a4)
(jmp send)
109
(eval ())
(adjstk '8)
(return)
))
(loader'((fentry #:image:rectangle:window:update-window nsubr)
(entry #:image:rectangle:window:update-window nsubr)
(cnbeq a4 '5 101)
(mov '#:image:rectangle:window:update-window a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(bfnil (& 1) 104)
(btnil (& 0) 103)
104
(hpxmov (& 4) '7 a4)
(hpxmov a4 '10 a3)
(hpmovx '0 a4 '6)
(hpmovx '0 a4 '7)
(mov (& 1) a2)
(bfnil a2 105)
(hpxmov (& 4) '2 a2)
105
(hpmovx a2 a4 '8)
(mov (& 0) a2)
(bfnil a2 106)
(hpxmov (& 4) '3 a2)
106
(hpmovx a2 a4 '9)
(btnil a3 103)
(hpxmov a4 '8 a2)
(hpmovx a2 a3 '0)
(hpxmov a4 '9 a2)
(hpmovx a2 a3 '1)
103
(push (@ 109))
(push 'update-window)
(hpxmov (& 6) '12 a4)
(push a4)
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(mov '7 a4)
(jmp send)
109
(eval ())
(adjstk '5)
(return)
))
(loader'((fentry #:image:rectangle:window:kill-window subr1)
(entry #:image:rectangle:window:kill-window subr1)
(push (@ 101))
(push 'kill-window)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:pop-window subr1)
(entry #:image:rectangle:window:pop-window subr1)
(push (@ 101))
(push 'pop-window)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:move-behind-window subr2)
(entry #:image:rectangle:window:move-behind-window subr2)
(push (@ 101))
(push 'move-behind-window)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(push a2)
(mov '4 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:current-keyboard-focus-window subr1)
(entry #:image:rectangle:window:current-keyboard-focus-window subr1)
(push (@ 101))
(push 'current-keyboard-focus-window)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:uncurrent-keyboard-focus-window subr1)
(entry #:image:rectangle:window:uncurrent-keyboard-focus-window subr1)
(push (@ 101))
(push 'uncurrent-keyboard-focus-window)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(mov '3 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:map-window nsubr)
(entry #:image:rectangle:window:map-window nsubr)
(cnbeq a4 '5 101)
(mov '#:image:rectangle:window:map-window a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(push (@ 102))
(push 'map-window)
(hpxmov (& 6) '12 a4)
(push a4)
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(mov '7 a4)
(jmp send)
102
(eval ())
(adjstk '5)
(return)
))
(loader'((fentry move-window subr3)
(entry move-window subr3)
(push a3)
(push a2)
(push a1)
(mov '#:image:rectangle:window a2)
(jcall typep)
(bfnil a1 102)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'move-window a1)
(jcall error)
102
(hpxmov (& 0) '12 a4)
(bfnil a4 104)
(hpxmov (& 0) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'move-window a1)
(jcall error)
104
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq a4 (& 0) 106)
(bfnil (& 1) 107)
(btnil (& 2) 106)
107
(push (@ 108))
(push 'move-window)
(push (& 2))
(push (& 4))
(push (& 6))
(mov '4 a4)
(jmp send)
108
(eval ())
106
(mov (& 0) a1)
(adjstk '3)
(return)
))
(loader'((fentry resize-window subr3)
(entry resize-window subr3)
(push a3)
(push a2)
(push a1)
(mov '#:image:rectangle:window a2)
(jcall typep)
(bfnil a1 102)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'resize-window a1)
(jcall error)
102
(hpxmov (& 0) '12 a4)
(bfnil a4 104)
(hpxmov (& 0) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'resize-window a1)
(jcall error)
104
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq a4 (& 0) 106)
(bfnil (& 1) 107)
(btnil (& 2) 106)
107
(hpxmov (& 0) '7 a4)
(hpxmov a4 '10 a3)
(hpmovx '0 a4 '6)
(hpmovx '0 a4 '7)
(mov (& 1) a2)
(bfnil a2 108)
(hpxmov (& 0) '2 a2)
108
(hpmovx a2 a4 '8)
(mov (& 2) a2)
(bfnil a2 109)
(hpxmov (& 0) '3 a2)
109
(hpmovx a2 a4 '9)
(btnil a3 111)
(hpxmov a4 '8 a2)
(hpmovx a2 a3 '0)
(hpxmov a4 '9 a2)
(hpmovx a2 a3 '1)
111
(push (@ 112))
(push 'resize-window)
(push (& 2))
(push (& 4))
(push (& 6))
(mov '4 a4)
(jmp send)
112
(eval ())
106
(mov (& 0) a1)
(adjstk '3)
(return)
))
(loader'((fentry move-resize-window nsubr)
(entry move-resize-window nsubr)
(cnbeq a4 '5 101)
(mov 'move-resize-window a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(mov '#:image:rectangle:window a2)
(mov (& 4) a1)
(jcall typep)
(bfnil a1 103)
(mov (& 4) a3)
(mov '#:display:errnotawindow a2)
(mov 'move-resize-window a1)
(jcall error)
103
(hpxmov (& 4) '12 a4)
(bfnil a4 105)
(hpxmov (& 4) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'move-resize-window a1)
(jcall error)
105
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq a4 (& 4) 107)
(bfnil (& 3) 108)
(bfnil (& 2) 108)
(bfnil (& 1) 108)
(btnil (& 0) 107)
108
(hpxmov (& 4) '7 a4)
(hpxmov a4 '10 a3)
(hpmovx '0 a4 '6)
(hpmovx '0 a4 '7)
(mov (& 1) a2)
(bfnil a2 109)
(hpxmov (& 4) '2 a2)
109
(hpmovx a2 a4 '8)
(mov (& 0) a2)
(bfnil a2 110)
(hpxmov (& 4) '3 a2)
110
(hpmovx a2 a4 '9)
(btnil a3 112)
(hpxmov a4 '8 a2)
(hpmovx a2 a3 '0)
(hpxmov a4 '9 a2)
(hpmovx a2 a3 '1)
112
(push (@ 113))
(push 'move-resize-window)
(push (& 6))
(push (& 6))
(push (& 6))
(push (& 6))
(push (& 6))
(mov '6 a4)
(jmp send)
113
(eval ())
107
(mov (& 4) a1)
(adjstk '5)
(return)
))
(loader'((fentry window-events-list nsubr)
(entry window-events-list nsubr)
(cnbge a4 '1 101)
(mov 'window-events-list a1)
(mov '1 a2)
(jmp #:llcp:errwna)
101
(diff '1 a4)
(jcall #:llcp:nlist)
(push a1)
(mov '#:image:rectangle:window a2)
(mov (& 1) a1)
(jcall typep)
(bfnil a1 103)
(mov (& 1) a3)
(mov '#:display:errnotawindow a2)
(mov 'window-events-list a1)
(jcall error)
103
(hpxmov (& 1) '12 a4)
(bfnil a4 105)
(hpxmov (& 1) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'window-events-list a1)
(jcall error)
105
(btnil (& 0) 106)
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq a4 (& 1) 108)
(push (@ 110))
(push 'window-events-list)
(push (& 3))
(mov (& 3) a4)
(push (car a4))
(mov '3 a4)
(jmp send)
110
(eval ())
(adjstk '2)
(return)
108
(mov nil a1)
(adjstk '2)
(return)
106
(hpxmov (& 1) '14 a1)
(adjstk '2)
(return)
))
(loader'((fentry window-title nsubr)
(entry window-title nsubr)
(cnbge a4 '1 101)
(mov 'window-title a1)
(mov '1 a2)
(jmp #:llcp:errwna)
101
(diff '1 a4)
(jcall #:llcp:nlist)
(push a1)
(mov '#:image:rectangle:window a2)
(mov (& 1) a1)
(jcall typep)
(bfnil a1 103)
(mov (& 1) a3)
(mov '#:display:errnotawindow a2)
(mov 'window-title a1)
(jcall error)
103
(hpxmov (& 1) '12 a4)
(bfnil a4 105)
(hpxmov (& 1) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'window-title a1)
(jcall error)
105
(btnil (& 0) 106)
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq a4 (& 1) 108)
(push (@ 110))
(push 'window-title)
(push (& 3))
(mov (& 3) a4)
(push (car a4))
(mov '3 a4)
(jmp send)
110
(eval ())
(adjstk '2)
(return)
108
(mov nil a1)
(adjstk '2)
(return)
106
(hpxmov (& 1) '4 a1)
(adjstk '2)
(return)
))
(loader'((entry #:window:test-window-state subr2)
(push a2)
(push a2)
(mov '(iconify map unmap lower raise) a2)
(pop a1)
(jcall member)
(btnil a1 101)
(mov 't a1)
(adjstk '1)
(return)
101
(mov (& 0) a3)
(mov '#:display:not-a-valid-argument a2)
(mov 'window-state a1)
(adjstk '1)
(jmp error)
))
(loader'((fentry window-state nsubr)
(entry window-state nsubr)
(cnbge a4 '1 101)
(mov 'window-state a1)
(mov '1 a2)
(jmp #:llcp:errwna)
101
(diff '1 a4)
(jcall #:llcp:nlist)
(push a1)
(mov '#:image:rectangle:window a2)
(mov (& 1) a1)
(jcall typep)
(bfnil a1 103)
(mov (& 1) a3)
(mov '#:display:errnotawindow a2)
(mov 'window-state a1)
(jcall error)
103
(btnil (& 0) 104)
(mov (& 0) a2)
(mov (car a2) a2)
(mov (& 1) a1)
(call #:window:test-window-state)
(btnil a1 106)
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq a4 (& 1) 106)
(hpxmov (& 1) '12 a4)
(bfnil a4 109)
(hpxmov (& 1) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'window-state a1)
(jcall error)
109
(push (@ 110))
(push 'window-state)
(push (& 3))
(mov (& 3) a4)
(push (car a4))
(mov '3 a4)
(jmp send)
110
(eval ())
(adjstk '2)
(return)
106
(mov nil a1)
(adjstk '2)
(return)
104
(hpxmov (& 1) '17 a1)
(adjstk '2)
(return)
))
(loader'((fentry window-background nsubr)
(entry window-background nsubr)
(cnbge a4 '1 101)
(mov 'window-background a1)
(mov '1 a2)
(jmp #:llcp:errwna)
101
(diff '1 a4)
(jcall #:llcp:nlist)
(push a1)
(mov '#:image:rectangle:window a2)
(mov (& 1) a1)
(jcall typep)
(bfnil a1 103)
(mov (& 1) a3)
(mov '#:display:errnotawindow a2)
(mov 'window-background a1)
(jcall error)
103
(btnil (& 0) 104)
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq a4 (& 1) 106)
(hpxmov (& 1) '12 a4)
(bfnil a4 109)
(hpxmov (& 1) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'window-background a1)
(jcall error)
109
(push (@ 110))
(push 'window-background)
(push (& 3))
(mov (& 3) a4)
(push (car a4))
(mov '3 a4)
(jmp send)
110
(eval ())
(adjstk '2)
(return)
106
(mov nil a1)
(adjstk '2)
(return)
104
(hpxmov (& 1) '7 a4)
(btnil a4 111)
(hpxmov (& 1) '7 a1)
(hpxmov a1 '5 a1)
(adjstk '2)
(return)
111
(mov nil a1)
(adjstk '2)
(return)
))
(loader'((fentry window-border nsubr)
(entry window-border nsubr)
(cnbge a4 '1 101)
(mov 'window-border a1)
(mov '1 a2)
(jmp #:llcp:errwna)
101
(diff '1 a4)
(jcall #:llcp:nlist)
(push a1)
(mov '#:image:rectangle:window a2)
(mov (& 1) a1)
(jcall typep)
(bfnil a1 103)
(mov (& 1) a3)
(mov '#:display:errnotawindow a2)
(mov 'window-border a1)
(jcall error)
103
(btnil (& 0) 104)
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq a4 (& 1) 106)
(hpxmov (& 1) '12 a4)
(bfnil a4 109)
(hpxmov (& 1) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'window-border a1)
(jcall error)
109
(push (@ 110))
(push 'window-border)
(push (& 3))
(mov (& 3) a4)
(push (car a4))
(mov '3 a4)
(jmp send)
110
(eval ())
(adjstk '2)
(return)
106
(mov nil a1)
(adjstk '2)
(return)
104
(hpxmov (& 1) '5 a1)
(adjstk '2)
(return)
))
(loader'((fentry window-clear-region nsubr)
(entry window-clear-region nsubr)
(cnbeq a4 '5 101)
(mov 'window-clear-region a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(mov '#:image:rectangle:window a2)
(mov (& 4) a1)
(jcall typep)
(bfnil a1 103)
(mov (& 4) a3)
(mov '#:display:errnotawindow a2)
(mov 'window-clear-region a1)
(jcall error)
103
(btfix (& 3) 105)
(mov (& 3) a3)
(mov 'errnia a2)
(mov 'window-clear-region a1)
(jcall error)
105
(btfix (& 2) 107)
(mov (& 2) a3)
(mov 'errnia a2)
(mov 'window-clear-region a1)
(jcall error)
107
(btfix (& 1) 109)
(mov (& 1) a3)
(mov 'errnia a2)
(mov 'window-clear-region a1)
(jcall error)
109
(btfix (& 0) 111)
(mov (& 0) a3)
(mov 'errnia a2)
(mov 'window-clear-region a1)
(jcall error)
111
(hpxmov (& 4) '12 a4)
(bfnil a4 113)
(hpxmov (& 4) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'window-clear-region a1)
(jcall error)
113
(push (@ 114))
(push 'window-clear-region)
(push (& 6))
(push (& 6))
(push (& 6))
(push (& 6))
(push (& 6))
(mov '6 a4)
(jmp send)
114
(eval ())
(mov (& 4) a1)
(adjstk '5)
(return)
))
(loader'((fentry #:image:rectangle:window:window-clear-region nsubr)
(entry #:image:rectangle:window:window-clear-region nsubr)
(cnbeq a4 '5 101)
(mov '#:image:rectangle:window:window-clear-region a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(hpxmov (& 4) '12 a4)
(btnil (cvalq #:display:dumpdevice) 104)
(bfnil (cvalq #:display:dumpsilent) 102)
104
(push (@ 105))
(push 'window-clear-region)
(push a4)
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(push (& 7))
(mov '7 a4)
(jmp send)
105
(eval ())
(adjstk '5)
(return)
102
(mov nil a1)
(adjstk '5)
(return)
))
(loader'((fentry #:image:rectangle:window:move-window subr3)
(entry #:image:rectangle:window:move-window subr3)
(push a3)
(push a2)
(push a1)
(hpxmov a1 '12 a4)
(push a4)
(push (@ 101))
(mov '0 a4)
(jmp current-display)
101
(eval ())
(push a1)
(push (@ 102))
(push dlink)
(push prot)
(stack dlink)
(push (@ 104))
(push (& 5))
(mov '1 a4)
(jmp current-display)
104
(eval ())
(push (@ 105))
(push 'move-window)
(push (& 6))
(push (& 8))
(push (& 10))
(push (& 12))
(mov '5 a4)
(jmp send)
105
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 103) a3)
102
(push a3)
(push a2)
(push (@ 106))
(push (& 4))
(mov '1 a4)
(jmp current-display)
106
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
103
(eval ())
(adjstk '5)
(return)
))
(loader'((fentry #:image:rectangle:window:resize-window subr3)
(entry #:image:rectangle:window:resize-window subr3)
(push a3)
(push a2)
(push a1)
(hpxmov a1 '12 a4)
(push a4)
(push (@ 101))
(mov '0 a4)
(jmp current-display)
101
(eval ())
(push a1)
(push (@ 102))
(push dlink)
(push prot)
(stack dlink)
(push (@ 104))
(push (& 5))
(mov '1 a4)
(jmp current-display)
104
(eval ())
(push (@ 105))
(push 'resize-window)
(push (& 6))
(push (& 8))
(push (& 10))
(push (& 12))
(mov '5 a4)
(jmp send)
105
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 103) a3)
102
(push a3)
(push a2)
(push (@ 106))
(push (& 4))
(mov '1 a4)
(jmp current-display)
106
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
103
(eval ())
(adjstk '5)
(return)
))
(loader'((fentry #:image:rectangle:window:move-resize-window nsubr)
(entry #:image:rectangle:window:move-resize-window nsubr)
(cnbeq a4 '5 101)
(mov '#:image:rectangle:window:move-resize-window a1)
(mov '5 a2)
(jmp #:llcp:errwna)
101
(hpxmov (& 4) '12 a4)
(push a4)
(push (@ 102))
(mov '0 a4)
(jmp current-display)
102
(eval ())
(push a1)
(push (@ 103))
(push dlink)
(push prot)
(stack dlink)
(push (@ 105))
(push (& 5))
(mov '1 a4)
(jmp current-display)
105
(eval ())
(push (@ 106))
(push 'move-resize-window)
(push (& 6))
(push (& 12))
(push (& 12))
(push (& 12))
(push (& 12))
(push (& 12))
(mov '7 a4)
(jmp send)
106
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 104) a3)
103
(push a3)
(push a2)
(push (@ 107))
(push (& 4))
(mov '1 a4)
(jmp current-display)
107
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
104
(eval ())
(adjstk '7)
(return)
))
(loader'((fentry #:image:rectangle:window:window-events-list subr2)
(entry #:image:rectangle:window:window-events-list subr2)
(push (@ 101))
(push 'window-events-list)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(push a2)
(mov '4 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:window-title subr2)
(entry #:image:rectangle:window:window-title subr2)
(push (@ 101))
(push 'window-title)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(push a2)
(mov '4 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:window-state subr2)
(entry #:image:rectangle:window:window-state subr2)
(push (@ 101))
(push 'window-state)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(push a2)
(mov '4 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:window-background subr2)
(entry #:image:rectangle:window:window-background subr2)
(push (@ 101))
(push 'window-background)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(push a2)
(mov '4 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry #:image:rectangle:window:window-border subr2)
(entry #:image:rectangle:window:window-border subr2)
(push (@ 101))
(push 'window-border)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(push a2)
(mov '4 a4)
(jmp send)
101
(eval ())
(return)
))
(loader'((fentry window-graph-env subr1)
(entry window-graph-env subr1)
(push a1)
(mov '#:image:rectangle:window a2)
(jcall typep)
(bfnil a1 102)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'window-graph-env a1)
(jcall error)
102
(hpxmov (& 0) '12 a4)
(bfnil a4 104)
(hpxmov (& 0) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'window-graph-env a1)
(jcall error)
104
(push (@ 105))
(push 'window-graph-env)
(push (& 2))
(mov '2 a4)
(jmp send)
105
(eval ())
(adjstk '1)
(return)
))
(loader'((fentry #:image:rectangle:window:window-graph-env subr1)
(entry #:image:rectangle:window:window-graph-env subr1)
(hpxmov a1 '7 a1)
(return)
))
(loader'((fentry window-change-attributes subr3)
(entry window-change-attributes subr3)
(push a3)
(push a2)
(push a1)
(mov '#:image:rectangle:window a2)
(jcall typep)
(bfnil a1 102)
(mov (& 0) a3)
(mov '#:display:errnotawindow a2)
(mov 'window-change-attributes a1)
(jcall error)
102
(mov (& 1) a1)
(jcall listp)
(bfnil a1 104)
(mov (& 1) a3)
(mov 'errnla a2)
(mov 'window-change-attributes a1)
(jcall error)
104
(mov (& 2) a1)
(jcall listp)
(bfnil a1 106)
(mov (& 2) a3)
(mov 'errnla a2)
(mov 'window-change-attributes a1)
(jcall error)
106
(hpxmov (& 0) '12 a4)
(bfnil a4 108)
(hpxmov (& 0) '12 a3)
(mov '#:display:no-current-display a2)
(mov 'window-change-attributes a1)
(jcall error)
108
(hpxmov (cvalq #:display:current-display) '10 a4)
(cabeq a4 (& 0) 109)
(push (@ 111))
(push 'window-change-attributes)
(push (& 2))
(push (& 4))
(push (& 6))
(mov '4 a4)
(jmp send)
111
(eval ())
(adjstk '3)
(return)
109
(mov nil a1)
(adjstk '3)
(return)
))
(loader'((fentry #:image:rectangle:window:window-change-attributes subr3)
(entry #:image:rectangle:window:window-change-attributes subr3)
(push a2)
(push a1)
(push (@ 101))
(push 'window-change-attributes)
(hpxmov a1 '12 a4)
(push a4)
(push a1)
(push a2)
(push a3)
(mov '5 a4)
(jmp send)
101
(eval ())
(hpmovx (& 1) (& 0) '16)
(mov (& 1) a1)
(adjstk '2)
(return)
))
(loader'((fentry #:window:create nsubr)
(entry #:window:create nsubr)
(jcall #:llcp:nlist)
(push (@ 101))
(push '#:image:rectangle:window:create)
(push a1)
(mov '2 a4)
(jmp apply)
101
(eval ())
(return)
))
(loader'((fentry #:window:prin subr1)
(entry #:window:prin subr1)
(jmp #:image:rectangle:window:prin)
))
(loader '((end)))
