defmodule complice
   ; Deuxieme passe du compilateur : Generation de code.
   files  (cp2 cpenv cpfnt cppred)
   import (files module cpcommon cpmod2)
   export (:pass-two)

;;; Added automatically, don't type beyond this line.
cpexport (
(#:complice:pass-two subr3 (#:messages:current-language) () (#:complice:lfnt-module #:complice:talk?))
)
cpfunctions (
(#:complice:pass-two-aux subr1)
(#:complice:initall subr1)
(#:complice:make-header subr3)
(#:complice:check-nsubr subr2)
(#:complice:init-header subr2)
(#:complice:add-env subr2)
(#:complice:set-reg subr2)
(#:complice:push-var subr1)
(#:complice:deset-env subr2)
(#:complice:deset-reg subr3)
(#:complice:clear-var-in-all-reg subr1)
(#:complice:set-env subr2)
(#:complice:mov subr2)
(#:complice:read-op subr1)
(#:complice:write-op subr2)
(#:complice:care-of-all-var subr1)
(#:complice:push-it-now subr2)
(#:complice:back-push-value subr1)
(#:complice:back-push-value-aux subr3)
(#:complice:adjust-op-stack subr2)
(#:complice:care-of-all-cval subr0)
(#:complice:care-of-all-cvalq subr1)
(#:complice:care-of-all-ind subr1)
(#:complice:write-reg subr2)
(#:complice:value-in-reg subr1)
(#:complice:care-of-reg subr2)
(#:complice:alloc-reg? subr0)
(#:complice:deset-env-stk subr2)
(#:complice:deset-stk subr2)
(#:complice:alloc-reg subr2)
(#:complice:real-reg subr1)
(#:complice:reg-protect? subr1)
(#:complice:reg-protect?-aux subr3)
(#:complice:index-stack subr1)
(#:complice:memnth subr3)
(#:complice:close-env subr0)
(#:complice:push subr1)
(#:complice:is-in-reg? subr1)
(#:complice:get-env subr1)
(#:complice:back-push subr1)
(#:complice:back-push-aux subr3)
(#:complice:adjust-adjust subr2)
(#:complice:push-top-block subr1)
(#:complice:progn subr1)
(#:complice:exp subr1)
(#:complice:app-lambda subr1)
(#:complice:evlis2 subr2)
(#:complice:protect-op subr1)
(#:complice:protected-op? subr1)
(#:complice:init-app-lambda subr2)
(#:complice:reset-env subr3)
(#:complice:adjstk subr1)
(#:complice:cpfnt subr2)
(#:complice:cpfnt-open subr2)
(#:complice:op-mget subr2)
(#:complice:make-op subr2)
(#:complice:op-mset nsubr)
(#:complice:pop2 subr2)
(#:complice:pop subr1)
(#:complice:op-mget-set nsubr)
(#:complice:mcop2 subr3)
(#:complice:mcop3 nsubr)
(#:complice:pop3 subr3)
(#:complice:mcopar subr3)
(#:complice:cpfnt:if subr1)
(#:complice:pred subr3)
(#:complice:cppred subr3)
(#:complice:s-pred subr3)
(#:complice:d-pred nsubr)
(#:complice:pred-or-and nsubr)
(#:complice:adjust-saved-reg subr1)
(#:complice:adjust-reg subr1)
(#:complice:memq subr3)
(#:complice:exp-subr subr2)
(#:complice:nsubr subr2)
(#:complice:nfix subr1)
(#:complice:jmp subr1)
(#:complice:clear-all-reg subr0)
(#:complice:subr1 subr1)
(#:complice:subr2 subr1)
(#:complice:unprotect-op subr2)
(#:complice:subr3 subr1)
(#:complice:call subr1)
(#:complice:adjust-if-need subr0)
(#:complice:length-stack subr1)
(#:complice:memq-p nsubr)
(#:complice:code-last subr1)
(#:complice:set-all-reg subr1)
(#:complice:cpfnt:setq subr1)
(#:complice:cpfnt:funarg subr1)
(#:complice:final-adjust subr0)
(#:complice:cpfnt:selectq subr1)
(#:complice:cpfnt:while subr1)
(#:complice:cpfnt:until subr1)
(#:complice:cpfnt:repeat subr1)
(#:complice:comp-or-and subr3)
(#:complice:prog1-not-empty subr2)
(#:complice:cpfnt:arg subr1)
(#:complice:cpfnt:tag subr1)
(#:complice:*tag subr2)
(#:complice:cpfnt:evtag subr1)
(#:complice:cpfnt:exit subr1)
(#:complice:cpfnt:evexit subr1)
(#:complice:cpfnt:protect subr1)
(#:complice:cpfnt:lock subr1)
(#:complice:cpfnt:block subr1)
(#:complice:cpfnt:return subr2)
(#:complice:cpfnt:schedule subr2)
(#:complice:cpfnt:with-interrupts subr1)
(#:complice:cpfnt:without-interrupts subr1)
(#:complice:cpfnt:tagbody subr1)
(#:complice:cpfnt:go subr1)
(#:complice:cpfnt:letv subr1)
(#:complice:cpfnt:declare1 nsubr)
(#:complice:cpfnt:precomp subr1)
(#:complice:cpfnt:not subr1)
(#:complice:cpfnt:deset subr1)
(#:complice:copy-gensym subr1)
(#:complice:peigne subr2)
(#:complice:peigne-aux subr2)
(#:complice:hack-for-arg subr0)
)
cpimport (
(cpcommon
(#:complice:setcassq . subr3)
(#:complice:globalvarp . subr1)
(#:complice:ierror . subr2)
(#:complice:count . subr2)
(#:complice:macroexpand . subr1)
(#:complice:flatt . subr1)
(#:complice:error . subr2)
(#:complice:set-error . subr0)
)(cpmod2
(#:complice:peephole . subr1)
(pretty-lap . subr2)
))
cpenv (
files
module
cpcommon
cpmod2
((putprop '#:sys-package:colon 't '#:complice:globalvar)
)((putprop '#:complice:peephole-flag 't '#:complice:globalvar)
)((putprop '#:sys-package:colon 't '#:complice:globalvar)
)((putprop '#:complice:genlab 't '#:complice:globalvar)
)((putprop '#:complice:lap 't '#:complice:globalvar)
)((putprop '#:complice:a1 't '#:complice:globalvar)
)((putprop '#:complice:a2 't '#:complice:globalvar)
)((putprop '#:complice:a3 't '#:complice:globalvar)
)((putprop '#:complice:a4 't '#:complice:globalvar)
)((putprop '#:complice:stack 't '#:complice:globalvar)
)((putprop '#:complice:v-stack 't '#:complice:globalvar)
)((putprop '#:complice:env 't '#:complice:globalvar)
)((putprop '#:complice:protect 't '#:complice:globalvar)
)((putprop '#:complice:op-stack 't '#:complice:globalvar)
)((putprop '#:complice:l-adjust 't '#:complice:globalvar)
)((putprop '#:complice:l-readjust 't '#:complice:globalvar)
)((putprop '#:complice:tail? 't '#:complice:globalvar)
)((putprop '#:complice:return? 't '#:complice:globalvar)
)((putprop '#:complice:lframe 't '#:complice:globalvar)
)((putprop '#:complice:bind 't '#:complice:globalvar)
)((putprop '#:complice:&nobind 't '#:complice:globalvar)
)((putprop '#:complice:funarg? 't '#:complice:globalvar)
)((putprop '#:sys-package:colon 't '#:complice:globalvar)
)((putprop '#:complice:lhack-for-arg 't '#:complice:globalvar)
)((putprop '#:sys-package:colon 't '#:complice:globalvar)
))
