(loader '(
(listext (typecod typech llrbra lllbra llhat llcolon shrpbra shrppar shrpbar shrpgui shrprad shrpprc shrpdol shrpcol shrphat shrpbak shrpsla shrpquo shrpmoi shrpplu shrpdot llsharp llbquote llcomma llquote defsharp dms dmc ini_mach makevect stringa1 kwote list lllength nreverse getprop setfn getfns llde sysprot evala1 ffuncall base10p readdltd rdpkgc2 read2 getcv rereada4 lread asciii getch readi trysympk inicst inisymb gcnumb gcfloat gccons errsym errsxt erroob errwna errudv errudf errnia evalan evalt))
(entry startmodule subr0)
	(title macroch)
	(xrefi llinit |.syspkgc|)
	(xrefi llinit fcons)
	(xrefi llinit mstack)
	(xrefi llinit bvar)
	(xrefi llinit |.t|)
	(xrefp toperr errnia)
	(xrefp toperr errudf)
	(xrefp toperr errudv)
	(xrefp toperr errwna)
	(xrefp toperr erroob)
	(xrefp toperr errsxt)
	(xrefp toperr errsym)
	(xrefi toperr |.llexpr|)
	(xrefp gc gccons)
	(xrefp gc gcfloat)
	(xrefp gc gcnumb)
	(xrefp read inisymb)
	(xrefp read inicst)
	(xrefp read trysympk)
	(xrefp read readi)
	(xrefp read getch)
	(xrefp read asciii)
	(xrefp read lread)
	(xrefi read tabch)
	(xrefi read |.lread|)
	(xrefi read ibase)
	(xrefi read cpkgc)
	(xrefi read |.statrc|)
	(xrefp read rereada4)
	(xrefp read getcv)
	(xrefp read read2)
	(xrefp read rdpkgc2)
	(xrefp read readdltd)
	(xrefp read base10p)
	(xrefi eval savea4)
	(xrefp eval ffuncall)
	(xrefp eval evala1)
	(xrefp eval sysprot)
	(xrefi eval |.function|)
	(xrefp cntrl llde)
	(xrefi cntrl |.quote|)
	(xrefp symbs getfns)
	(xrefp symbs setfn)
	(xrefp symbs getprop)
	(xrefp fntstd nreverse)
	(xrefp fntstd lllength)
	(xrefi fntstd |.nconc|)
	(xrefi fntstd |.append|)
	(xrefi fntstd |.mcons|)
	(xrefi fntstd |.llcons|)
	(xrefi fntstd |.list|)
	(xrefp fntstd list)
	(xrefp fntstd kwote)
	(xrefp string stringa1)
	(xrefp string makevect)
	(xrefi string |.vector|)
	(xdefp ini_mach)
	(xdefi |.syscol|)
	(xdefi tabctyp)
	(xdefi tabccod)
	(impure)
	(ladr tabctyp 0)
	(ladr tabccod 0)
	(pure)
ini_mach
	(eval ())
	(makfnt dmc '3 (strg "dmc"))
	(makfnt dms '3 (strg "dms"))
	(makfnt defsharp '8 (strg "defsharp"))
	(makfnt llsharp '1 (strg "#"))
	(makcst sharp '5 (strg "sharp"))
	(makfnt llcolon '1 (strg ":"))
	(makcst user '4 (strg "user"))
	(makfnt llhat '1 (strg "^"))
	(makfnt lllbra '1 (strg "["))
	(makfnt llrbra '1 (strg "]"))
	(makfnt llquote '1 (strg "'"))
	(makfnt llbquote '1 (strg "`"))
	(makfnt llcomma '1 (strg ","))
	(makcst commaat '2 (strg ",@"))
	(makcst commadot '2 (strg ",."))
	(mov |.syspkgc| cpkgc)
	(makcst sysharp '5 (strg "sharp"))
	(mov |.sharp| (cval a1))
	(makcst syscol '5 (strg "colon"))
	(mov |.user| (cval a1))
	(mov |.sharp| cpkgc)
	(makfnt shrpdot '1 (strg "."))
	(makfnt shrpplu '1 (strg "+"))
	(makfnt shrpmoi '1 (strg "-"))
	(makfnt shrpquo '1 (strg "'"))
	(makfnt shrpsla '1 (strg "/"))
	(makfnt shrpbak '1 (strg "\"))
	(makfnt shrphat '1 (strg "^"))
	(makfnt shrpcol '1 (strg ":"))
	(makfnt shrpdol '1 (strg "$"))
	(makfnt shrpprc '1 (strg "%"))
	(makfnt shrpgui '1 (strg """"))
	(makfnt shrpbar '1 (strg "|"))
	(makfnt shrppar '1 (strg "("))
	(makfnt shrpbra '1 (strg "["))
	(makfnt shrprad '1 (strg "r"))
	(makcst shrpval '5 (strg "value"))
	(makcst slowbyte '7 (strg "lowbyte"))
	(movnil cpkgc)
	(makfnt typech '6 (strg "typech"))
	(makfnt typecod '6 (strg "typecn"))
	(makcst cnull '5 (strg "cnull"))
	(makcst cbcom '5 (strg "cbcom"))
	(makcst cecom '5 (strg "cecom"))
	(makcst cquote '6 (strg "cquote"))
	(makcst clpar '5 (strg "clpar"))
	(makcst crpar '5 (strg "crpar"))
	(makcst cdot '4 (strg "cdot"))
	(makcst csep '4 (strg "csep"))
	(makcst cpackage '5 (strg "cpkgc"))
	(makcst csplice '7 (strg "csplice"))
	(makcst cmacro '6 (strg "cmacro"))
	(makcst cstring '7 (strg "cstring"))
	(makcst cpname '6 (strg "cpname"))
	(makcst csymb '5 (strg "csymb"))
	(makcst cmsymb '6 (strg "cmsymb"))
	(mov '15 a1)
	(movnil a2)
	(push (@ ret_call_makevect_1))
	(bra makevect)
ret_call_makevect_1
	(eval ())
	(mov a1 tabctyp)
	(hpmovx |.cnull| a1 '0)
	(hpmovx |.cbcom| a1 '1)
	(hpmovx |.cecom| a1 '2)
	(hpmovx |.cquote| a1 '3)
	(hpmovx |.clpar| a1 '4)
	(hpmovx |.crpar| a1 '5)
	(hpmovx |.cdot| a1 '6)
	(hpmovx |.csep| a1 '7)
	(hpmovx |.cpackage| a1 '8)
	(hpmovx |.csplice| a1 '9)
	(hpmovx |.cmacro| a1 '10)
	(hpmovx |.cstring| a1 '11)
	(hpmovx |.cpname| a1 '12)
	(hpmovx |.csymb| a1 '13)
	(hpmovx |.cmsymb| a1 '14)
	(mov '15 a1)
	(movnil a2)
	(push (@ ret_call_makevect_2))
	(bra makevect)
ret_call_makevect_2
	(eval ())
	(mov a1 tabccod)
	(hpmovx '0 a1 '0)
	(hpmovx '1 a1 '1)
	(hpmovx '2 a1 '2)
	(hpmovx '3 a1 '3)
	(hpmovx '4 a1 '4)
	(hpmovx '5 a1 '5)
	(hpmovx '6 a1 '6)
	(hpmovx '7 a1 '7)
	(hpmovx '8 a1 '8)
	(hpmovx '9 a1 '9)
	(hpmovx '10 a1 '10)
	(hpmovx '11 a1 '11)
	(hpmovx '12 a1 '12)
	(hpmovx '13 a1 '13)
	(hpmovx '14 a1 '14)
	(return)
	(lentry dmc 6)
	(push (@ ret_call_llde_3))
	(bra llde)
ret_call_llde_3
	(eval ())
	(push a1)
	(push (@ dmcret))
	(push a1)
	(push '10)
	(mov '2 a4)
	(bra typech)
dmcret
	(pop a1)
	(return)
	(lentry dms 6)
	(push (@ ret_call_llde_4))
	(bra llde)
ret_call_llde_4
	(eval ())
	(push a1)
	(push (@ dmcret))
	(push a1)
	(push '9)
	(mov '2 a4)
	(bra typech)
	(lentry defsharp 6)
	(mov (car a1) a2)
	(bfsymb a2 defshrer)
	(push a2)
	(push (cdr a1))
	(mov |.sysharp| a1)
	(mov (cval a1) a1)
	(push (@ ret_call_trysympk_5))
	(bra trysympk)
ret_call_trysympk_5
	(eval ())
	(mov |.llexpr| a2)
	(pop a3)
	(push (@ ret_call_setfn_6))
	(bra setfn)
ret_call_setfn_6
	(eval ())
	(pop a1)
	(return)
defshrer
	(mov a2 a1)
	(mov |.defsharp| a2)
	(bra errsym)
	(lentry llquote 1)
	(push (@ ret_call_readi_7))
	(bra readi)
ret_call_readi_7
	(eval ())
	(ncons a1)
	(cons |.quote| a1)
	(return)
	(lentry llcomma 1)
	(mov '12 a1)
	(mov |.llcomma| a2)
	(bra errsxt)
commain
	(eval ())
	(push (@ ret_call_getch_8))
	(bra getch)
ret_call_getch_8
	(eval ())
	(cnbeq a4 '64 commain1)
	(cnbeq a4 '46 commain2)
	(push (@ ret_call_rereada4_9))
	(bra rereada4)
ret_call_rereada4_9
	(eval ())
	(mov |.llcomma| a1)
commain0
	(push a1)
	(push (@ ret_call_readi_10))
	(bra readi)
ret_call_readi_10
	(eval ())
	(pop a2)
	(cons a2 a1)
	(return)
commain1
	(mov |.commaat| a1)
	(bra commain0)
commain2
	(mov |.commadot| a1)
	(bra commain0)
	(lentry llbquote 1)
	(mov |.llcomma| a1)
	(push (fval a1))
	(gftype a1 a2)
	(push a2)
	(mov (@ llbquot1) a3)
	(push (@ ret_call_sysprot_11))
	(bra sysprot)
ret_call_sysprot_11
	(eval ())
	(mov |.llcomma| a1)
	(sftype (& 1) a1)
	(mov (& 2) (fval a1))
	(mov (& 0) a1)
	(adjstk '3)
	(bri a3)
llbquot1
	(mov (@ commain) (fval a1))
	(sftype '1 a1)
	(push (@ ret_call_readi_12))
	(bra readi)
ret_call_readi_12
	(eval ())
	(bra backquot)
backcste
	(eval ())
	(btnil a1 backcst9)
	(bfcons a1 backcst8)
	(mov (car a1) a4)
	(cabne a4 |.quote| backcst8)
	(mov (cdr a1) a4)
	(btnil (cdr a4) backcst9)
backcst8
	(movnil a4)
	(return)
backcst9
	(mov |.t| a4)
	(return)
backquot
	(eval ())
	(bfnil a1 backquo0)
	(return)
backquo0
	(btcons a1 backquo1)
	(bra kwote)
backquo1
	(eval ())
	(mov (car a1) a2)
	(cabne a2 |.llcomma| backquo2)
	(mov (cdr a1) a1)
	(return)
backquo2
	(eval ())
	(cabeq a2 |.commaat| backquor)
	(cabeq a2 |.commadot| backquor)
	(bfcons a2 backquo3)
	(cabeq (car a2) |.commaat| backquo4)
	(cabeq (car a2) |.commadot| backquo5)
backquo3
	(eval ())
	(push a2)
	(mov (cdr a1) a1)
	(push (@ ret_call_backquot_13))
	(bra backquot)
ret_call_backquot_13
	(eval ())
	(xtopst a1)
	(push (@ ret_call_backquot_14))
	(bra backquot)
ret_call_backquot_14
	(eval ())
	(pop a2)
	(bfnil a2 backqu32)
	(push (@ ret_call_backcste_15))
	(bra backcste)
ret_call_backcste_15
	(eval ())
	(btnil a4 backqu31)
	(mov (cdr a1) a1)
	(mov (car a1) a1)
	(ncons a1)
	(bra kwote)
backqu31
	(ncons a1)
	(cons |.list| a1)
	(return)
backqu32
	(push (@ ret_call_backcste_16))
	(bra backcste)
ret_call_backcste_16
	(eval ())
	(btnil a4 backqu34)
	(mov a1 a3)
	(mov a2 a1)
	(push (@ ret_call_backcste_17))
	(bra backcste)
ret_call_backcste_17
	(eval ())
	(btnil a4 backqu33)
	(mov (cdr a1) a1)
	(mov (car a1) a1)
	(mov (cdr a3) a3)
	(cons (car a3) a1)
	(bra kwote)
backqu33
	(mov a3 a1)
backqu34
	(bfcons a2 backqu36)
	(mov (car a2) a3)
	(cabne a3 |.llcons| backqu35)
	(push |.mcons|)
	(push a1)
	(mov (cdr a2) a2)
	(push (car a2))
	(mov (cdr a2) a2)
	(push (car a2))
	(mov '4 a4)
	(bra list)
backqu35
	(cabeq a3 |.list| backqu37)
	(cabeq a3 |.mcons| backqu37)
backqu36
	(ncons a2)
	(mov |.llcons| a3)
	(bra backquo7)
backqu37
	(mov (cdr a2) a2)
	(bra backquo7)
backquo4
	(mov (car a1) a2)
	(push (cdr a2))
	(mov (cdr a1) a1)
	(push (@ ret_call_backquot_18))
	(bra backquot)
ret_call_backquot_18
	(eval ())
	(bfnil a1 backqu41)
	(pop a1)
	(return)
backqu41
	(bfcons a1 backqu42)
	(cabne (car a1) |.append| backqu42)
	(mov (cdr a1) a1)
	(bra backqu43)
backqu42
	(ncons a1)
backqu43
	(pop a2)
	(cons a2 a1)
	(cons |.append| a1)
	(return)
backquo5
	(bfnil (cdr a1) backqu51)
	(mov (car a1) a1)
	(mov (cdr a1) a1)
	(return)
backqu51
	(push (car a1))
	(mov (cdr a1) a1)
	(push (@ ret_call_backquot_19))
	(bra backquot)
ret_call_backquot_19
	(eval ())
	(ncons a1)
	(pop a2)
	(cons (cdr a2) a1)
	(cons |.nconc| a1)
	(return)
backquo7
	(xcons a2 a1)
	(cons a3 a1)
	(return)
backquor
	(mov '12 a1)
	(mov |.llbquote| a2)
	(bra errsxt)
	(lentry llsharp 1)
	(push (@ ret_call_getch_20))
	(bra getch)
ret_call_getch_20
	(eval ())
	(push (@ ret_call_base10p_21))
	(bra base10p)
ret_call_base10p_21
	(eval ())
	(btnil a1 rdsh4)
	(diff '48 a4)
	(push a4)
	(bra rdsh3)
rdsh2
	(times '10 (& 0))
	(diff '48 a4)
	(plus a4 (& 0))
rdsh3
	(push (@ ret_call_getch_22))
	(bra getch)
ret_call_getch_22
	(eval ())
	(push (@ ret_call_base10p_23))
	(bra base10p)
ret_call_base10p_23
	(eval ())
	(bfnil a1 rdsh2)
	(push '1)
	(bra rdsh5)
rdsh4
	(push '0)
rdsh5
	(push (@ ret_call_asciii_24))
	(bra asciii)
ret_call_asciii_24
	(eval ())
	(mov a1 a2)
	(push a1)
	(mov |.sysharp| a1)
	(mov (cval a1) a1)
	(movnil a3)
	(push (@ ret_call_getfns_25))
	(bra getfns)
ret_call_getfns_25
	(eval ())
	(btnil a1 rdshr)
	(adjstk '1)
	(pop a4)
	(bra ffuncall)
rdshr
	(pop a1)
	(mov |.llsharp| a2)
	(bra errudf)
	(lentry shrpdot 1)
	(push (@ ret_call_readi_26))
	(bra readi)
ret_call_readi_26
	(eval ())
	(push (@ ret_call_evala1_27))
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evala1_27
	(eval ())
shrpdot1
	(ncons a1)
	(return)
	(lentry shrpplu 1)
	(push (@ ret_call_readi_28))
	(bra readi)
ret_call_readi_28
	(eval ())
	(push (@ ret_call_evala1_29))
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evala1_29
	(eval ())
	(btnil a1 shrpplu1)
shrpplu0
	(push (@ shrpdot1))
	(bra readi)
shrpplu1
	(push (@ ret_call_readi_30))
	(bra readi)
ret_call_readi_30
	(eval ())
	(movnil a1)
	(return)
	(lentry shrpmoi 1)
	(push (@ ret_call_readi_31))
	(bra readi)
ret_call_readi_31
	(eval ())
	(push (@ ret_call_evala1_32))
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evala1_32
	(eval ())
	(bfnil a1 shrpplu1)
	(bra shrpplu0)
	(lentry shrpquo 1)
	(push (@ ret_call_readi_33))
	(bra readi)
ret_call_readi_33
	(eval ())
	(ncons a1)
	(cons |.function| a1)
	(bra shrpdot1)
	(lentry shrpsla 1)
	(push (@ ret_call_getch_34))
	(bra getch)
ret_call_getch_34
	(eval ())
	(mov a4 a1)
	(bra lowbyte)
	(lentry shrpbak 1)
	(mov |.statrc| a2)
	(push (cval a2))
	(movnil (cval a2))
	(push (@ ret_call_readi_35))
	(bra readi)
ret_call_readi_35
	(eval ())
	(mov |.statrc| a2)
	(pop (cval a2))
	(mov |.shrpval| a2)
	(push a1)
	(push (@ ret_call_getprop_36))
	(bra getprop)
ret_call_getprop_36
	(eval ())
	(pop a2)
	(bfnil a1 lowbyte)
shrpbak1
	(mov a2 a1)
	(mov |.shrpval| a2)
	(bra errudv)
	(lentry shrphat 1)
	(push (@ ret_call_getch_37))
	(bra getch)
ret_call_getch_37
	(eval ())
	(land '31 a4)
	(mov a4 a1)
	(bra lowbyte)
	(lentry shrpcol 1)
	(hbxmov tabch '58 a2)
	(push a2)
	(push cpkgc)
	(mov (@ shrpcol1) a3)
	(push (@ ret_call_sysprot_38))
	(bra sysprot)
ret_call_sysprot_38
	(eval ())
	(pop a1)
	(pop cpkgc)
	(hbmovx (& 0) tabch '58)
	(adjstk '1)
	(bri a3)
shrpcol1
	(movnil cpkgc)
	(hbmovx '8 tabch '58)
	(push (@ ret_call_readi_39))
	(bra readi)
ret_call_readi_39
	(eval ())
	(bfcons a1 shrpcol3)
	(push (@ ret_call_getcv_40))
	(bra getcv)
ret_call_getcv_40
	(eval ())
	(cnbeq a4 '58 shrpcol2)
	(push (@ ret_call_rereada4_41))
	(bra rereada4)
ret_call_rereada4_41
	(eval ())
	(bra shrpcol3)
shrpcol2
	(mov a1 cpkgc)
	(push (@ ret_call_readi_42))
	(bra readi)
ret_call_readi_42
	(eval ())
shrpcol3
	(ncons a1)
	(return)
shrpcoer
	(mov '6 a1)
	(mov |.shrpcol| a2)
	(bra errsxt)
	(lentry shrpdol 1)
	(push |.shrpdol|)
	(mov '16 a1)
	(bra shrprad1)
	(lentry shrpprc 1)
	(push |.shrpprc|)
	(mov '2 a1)
	(bra shrprad1)
	(lentry shrprad 2)
	(push |.shrprad|)
shrprad1
	(push (@ ret_call_shrprad2_43))
	(bra shrprad2)
ret_call_shrprad2_43
	(eval ())
	(bfcons a1 shrpradr)
	(bffix (car a1) shrpradr)
	(adjstk '1)
	(return)
shrprad2
	(push ibase)
	(mov a1 ibase)
	(mov (@ readi) a3)
	(push (@ ret_call_sysprot_44))
	(bra sysprot)
ret_call_sysprot_44
	(eval ())
	(pop a1)
	(pop ibase)
	(ncons a1)
	(bri a3)
shrpradr
	(pop a2)
	(bra errsxt)
	(lentry shrpgui 1)
	(movnil a1)
	(bra shrpgui2)
shrpgui1
	(cons a4 a1)
shrpgui2
	(push (@ ret_call_getch_45))
	(bra getch)
ret_call_getch_45
	(eval ())
	(cnbne a4 '34 shrpgui1)
	(push (@ ret_call_getch_46))
	(bra getch)
ret_call_getch_46
	(eval ())
	(cnbeq a4 '34 shrpgui1)
	(push (@ ret_call_rereada4_47))
	(bra rereada4)
ret_call_rereada4_47
	(eval ())
	(push (@ ret_call_nreverse_48))
	(bra nreverse)
ret_call_nreverse_48
	(eval ())
	(ncons a1)
	(return)
	(lentry shrpbar 1)
	(push (@ ret_call_getcv_49))
	(bra getcv)
ret_call_getcv_49
	(eval ())
shrpbari
	(cnbeq a4 '35 shrpbar0)
	(cnbne a4 '124 shrpbar)
	(push (@ ret_call_getcv_50))
	(bra getcv)
ret_call_getcv_50
	(eval ())
	(cnbne a4 '35 shrpbari)
	(movnil a1)
	(return)
shrpbar0
	(push (@ ret_call_getcv_51))
	(bra getcv)
ret_call_getcv_51
	(eval ())
	(cnbne a4 '124 shrpbari)
	(push (@ shrpbar))
	(bra shrpbar)
	(lentry shrppar 1)
	(push (@ ret_call_read2_52))
	(bra read2)
ret_call_read2_52
	(eval ())
	(bfcons a1 shrpprr)
	(stinvsbl a1)
shrpprr
	(ncons a1)
	(return)
	(lentry shrpbra 1)
	(push (@ ret_call_shrpbra0_53))
	(bra shrpbra0)
ret_call_shrpbra0_53
	(eval ())
	(btnil cpkgc shrpbrar)
	(mov cpkgc (typ a1))
shrpbrar
	(bra shrpdot1)
shrpbra0
	(push cpkgc)
	(mov (@ shrpbra1) a3)
	(push (@ ret_call_sysprot_54))
	(bra sysprot)
ret_call_sysprot_54
	(eval ())
	(pop a1)
	(pop cpkgc)
	(bri a3)
shrpbra1
	(movnil cpkgc)
	(mov '93 a1)
	(push (@ ret_call_readdltd_55))
	(bra readdltd)
ret_call_readdltd_55
	(eval ())
	(push a1)
	(push (@ ret_call_lllength_56))
	(bra lllength)
ret_call_lllength_56
	(eval ())
	(push a1)
	(movnil a2)
	(push (@ ret_call_makevect_57))
	(bra makevect)
ret_call_makevect_57
	(eval ())
	(pop a3)
	(pop a2)
	(mov '0 a4)
	(bra shrpbra3)
shrpbra2
	(hpmovx (car a2) a1 a4)
	(mov (cdr a2) a2)
	(incr a4)
shrpbra3
	(cnbne a4 a3 shrpbra2)
	(return)
lowbyte
	(eval ())
	(push (@ shrpdot1))
	(push (@ ret_call_getch_58))
	(bra getch)
ret_call_getch_58
	(eval ())
	(cnbeq a4 '124 lowbyte0)
	(bra rereada4)
lowbyte0
	(bffix a1 lowbyte5)
	(lshift '8 a1)
	(push (@ ret_call_getch_59))
	(bra getch)
ret_call_getch_59
	(eval ())
	(cnbeq a4 '47 lowbyte2)
	(cnbeq a4 '94 lowbyte3)
	(cnbeq a4 '92 lowbyte4)
	(mov a4 a1)
	(mov |.slowbyte| a2)
	(bra errsxt)
lowbyte2
	(push (@ ret_call_getch_60))
	(bra getch)
ret_call_getch_60
	(eval ())
lowbytre
	(lor a4 a1)
	(return)
lowbyte3
	(push (@ ret_call_getch_61))
	(bra getch)
ret_call_getch_61
	(eval ())
	(land '31 a4)
	(bra lowbytre)
lowbyte4
	(push a1)
	(push (@ ret_call_readi_62))
	(bra readi)
ret_call_readi_62
	(eval ())
	(push a1)
	(mov |.shrpval| a2)
	(push (@ ret_call_getprop_63))
	(bra getprop)
ret_call_getprop_63
	(eval ())
	(pop a2)
	(pop a4)
	(btnil a1 shrpbak1)
	(btfix a1 lowbytre)
lowbyte5
	(mov a1 a2)
	(mov |.shrpval| a1)
	(bra errnia)
	(lentry llcolon 1)
	(mov |.syscol| a1)
	(mov (cval a1) a1)
	(hbmovx '8 tabch '58)
	(mov (@ rdpkgc2) a3)
	(push (@ ret_call_sysprot_64))
	(bra sysprot)
ret_call_sysprot_64
	(eval ())
	(hbmovx '10 tabch '58)
	(pop a1)
	(bri a3)
	(lentry llhat 1)
	(push (@ ret_call_getch_65))
	(bra getch)
ret_call_getch_65
	(eval ())
	(land '31 a4)
	(bra asciii)
	(lentry lllbra 1)
	(mov |.lllbra| a1)
lllbra1
	(mov |.lread| a2)
	(bra errudf)
	(lentry llrbra 1)
	(mov |.llrbra| a1)
	(bra lllbra1)
	(lentry typech 5)
	(mov |.typech| a2)
typech0
	(cnbeq a4 '1 typechg1)
	(cnbeq a4 '2 typechs1)
	(mov '2 a1)
	(bra errwna)
typechs1
	(pop a1)
	(btfix a1 typechs5)
	(mov '14 a3)
typechs2
	(hpxmov tabctyp a3 a4)
	(cabeq a1 a4 typechs4)
	(sobgez a3 typechs2)
	(bra typechr1)
typechs4
	(mov a3 a1)
	(bra typechs6)
typechs5
	(cnblt a1 '0 typechr2)
	(cnbgt a1 '14 typechr2)
typechs6
	(hpxmov tabccod a1 a1)
	(xtopst a1)
	(cabeq a2 |.typech| typechs7)
	(bffix a1 typechr1)
	(cnblt a1 '0 typechr2)
	(cnbge a1 '256 typechr2)
	(bra typechs8)
typechs7
	(mov a2 savea4)
	(push (@ ret_call_stringa1_66))
	(bra stringa1)
ret_call_stringa1_66
	(eval ())
	(hbxmov a1 '0 a1)
typechs8
	(pop a2)
	(hbmovx a2 tabch a1)
	(hpxmov tabctyp a2 a1)
	(return)
typechg1
	(pop a1)
	(cabeq a2 |.typech| typechg5)
	(bffix a1 typechr1)
	(cnblt a1 '0 typechr2)
	(cnbge a1 '256 typechr2)
	(bra typechg7)
typechg5
	(mov a2 savea4)
	(push (@ ret_call_stringa1_67))
	(bra stringa1)
ret_call_stringa1_67
	(eval ())
	(hbxmov a1 '0 a1)
typechg7
	(hbxmov tabch a1 a1)
	(hpxmov tabctyp a1 a1)
	(return)
typechr1
	(bra errnia)
typechr2
	(bra erroob)
	(lentry typecod 5)
	(mov |.typecod| a2)
	(bra typech0)
	(end)
))
