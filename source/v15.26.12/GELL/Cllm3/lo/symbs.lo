(loader '(
(listext (fdecr fincr defprop getl getsym1 getsymb remob synqnym synonym remfn getfn typefn valfn objval d3root pckgcell fplist makunbound remprop addprop putprop getprop findfn setfn getfns getbi getfn1 ini_sym vag loc gadiff2i gaplus2i evalcar istdsym inicst inisymb gccons errnla errwna errudf erroob errsym errnva evalan evalt))
(entry startmodule subr0)
	(title symbs)
	(xrefi llinit mstack)
	(xrefi llinit fcons)
	(xrefi llinit bvar)
	(xrefi llinit |.undef|)
	(xrefi llinit hashtab)
	(xrefp toperr errnva)
	(xrefp toperr errsym)
	(xrefp toperr erroob)
	(xrefp toperr errudf)
	(xrefp toperr errwna)
	(xrefp toperr errnla)
	(xrefp gc gccons)
	(xrefi read cpkgc)
	(xrefp read inisymb)
	(xrefp read inicst)
	(xrefp read istdsym)
	(xrefp eval evalcar)
	(xrefi cntrl tabcodfn)
	(xrefi cntrl tabtypfn)
	(xrefp number gaplus2i)
	(xrefp number gadiff2i)
	(xrefp bllsht loc)
	(xrefp bllsht vag)
	(xdefp ini_sym)
	(xdefp getfn1)
	(xdefp getbi)
	(xdefp getfns)
	(xdefp setfn)
	(xdefp findfn)
	(xdefp getprop)
	(xdefp putprop)
	(xdefp addprop)
	(xdefp remprop)
	(pure)
ini_sym
	(eval ())
	(makfnt makunbound '10 (strg "makunbound"))
	(makfnt fplist '5 (strg "plist"))
	(makfnt pckgcell '11 (strg "packagecell"))
	(makfnt d3root '14 (strg "3d-root-symbol"))
	(makfnt objval '6 (strg "objval"))
	(makfnt valfn '5 (strg "valfn"))
	(makfnt typefn '6 (strg "typefn"))
	(makfnt setfn '5 (strg "setfn"))
	(makfnt remfn '5 (strg "remfn"))
	(makfnt findfn '6 (strg "findfn"))
	(makfnt getfn1 '6 (strg "getfn1"))
	(makfnt getfn '5 (strg "getfn"))
	(makfnt getsym1 '8 (strg "getsymb1"))
	(makfnt getsymb '7 (strg "getsymb"))
	(makfnt getbi '6 (strg "getfn2"))
	(makfnt synonym '7 (strg "synonym"))
	(makfnt synqnym '8 (strg "synonymq"))
	(makfnt remob '5 (strg "remob"))
	(makfnt getprop '3 (strg "get"))
	(makfnt getprop '7 (strg "getprop"))
	(makfnt getl '4 (strg "getl"))
	(makfnt addprop '7 (strg "addprop"))
	(makfnt putprop '7 (strg "putprop"))
	(makfnt defprop '7 (strg "defprop"))
	(makfnt remprop '7 (strg "remprop"))
	(makfnt fincr '4 (strg "incr"))
	(makfnt fdecr '4 (strg "decr"))
	(endc)
	(return)
sybfalse
	(movnil a1)
	(return)
sybret
	(return)
	(lentry makunbound 2)
	(bfvar a1 makuerr)
	(mov |.undef| (cval a1))
	(return)
makuerr
	(mov |.makunbound| a2)
	(bra errnva)
	(lentry fplist 5)
	(mov |.fplist| a2)
	(mov (@ setplist) a3)
	(push (@ ret_call_getset12_1))
	(bra getset12)
ret_call_getset12_1
	(eval ())
	(mov (plist a1) a1)
	(return)
setplist
	(eval ())
	(mov a1 (plist a3))
	(return)
	(lentry pckgcell 5)
	(mov |.pckgcell| a2)
	(mov (@ pckgset) a3)
	(push (@ ret_call_getset12_2))
	(bra getset12)
ret_call_getset12_2
	(eval ())
	(mov (pkgc a1) a1)
	(return)
pckgset
	(eval ())
	(mov a1 (pkgc a3))
	(return)
	(lentry d3root 2)
	(bfsymb (pname a1) d3rootn)
	(mov a1 a4)
d3roota
	(btnil (pkgc a1) d3rootr)
	(mov (pname a1) a1)
	(cabne a1 a4 d3roota)
d3rootn
	(movnil a1)
d3rootr
	(return)
	(lentry objval 5)
	(mov |.objval| a2)
	(mov (@ objvset) a3)
	(push (@ ret_call_getset12_3))
	(bra getset12)
ret_call_getset12_3
	(eval ())
	(mov (oval a1) a1)
	(return)
objvset
	(eval ())
	(mov a1 (oval a3))
	(return)
	(lentry valfn 2)
	(bfsymb a1 valferr)
	(mov (fval a1) a1)
	(btlisp a1 valfnr)
	(bra loc)
valferr
	(mov |.valfn| a2)
	(bra errsym)
valfnr
	(return)
	(lentry typefn 2)
	(bfsymb a1 typefer1)
	(gftype a1 a1)
	(mov tabcodfn a2)
	(hgsize a2 a3)
	(decr a3)
typefn1
	(hpxmov a2 a3 a4)
	(cabeq a4 a1 typefn2)
	(sobgtz a3 typefn1)
typefn2
	(hpxmov tabtypfn a3 a1)
	(return)
typefer1
	(mov |.typefn| a2)
	(bra errsym)
typefer2
	(mov |.typefn| a2)
	(bra erroob)
	(lentry setfn 4)
	(bfvar a1 setfner2)
	(bfsymb a2 setfner1)
	(push a3)
	(hgsize tabtypfn a4)
	(bra setfn3)
setfner1
	(mov a2 a1)
	(mov |.setfn| a2)
	(bra errsym)
setfner2
	(mov |.setfn| a2)
	(bra errnva)
setfner3
	(mov |.setfn| a2)
	(mov a3 a1)
	(bra erroob)
setfn2
	(hpxmov tabtypfn a4 a3)
	(cabeq a3 a2 setfn4)
setfn3
	(sobgez a4 setfn2)
	(bra setfner3)
setfn4
	(hpxmov tabcodfn a4 a4)
	(sftype a4 a1)
	(xtopst a1)
	(bfcons a1 setfn5)
	(bffix (car a1) setfn6)
setfn5
	(push (@ ret_call_vag_4))
	(bra vag)
ret_call_vag_4
	(eval ())
setfn6
	(mov a1 a2)
	(pop a1)
	(mov a2 (fval a1))
	(return)
	(lentry getfn1 3)
	(bfsymb a1 getfn1r2)
	(bfsymb a2 getfn1r1)
	(bfnil (pkgc a2) sybfalse)
getfn1i
	(push (@ ret_call_getsym1i_5))
	(bra getsym1i)
ret_call_getsym1i_5
	(eval ())
	(gftype a1 a2)
	(cnbeq a2 '0 sybfalse)
	(return)
getfn1r1
	(mov a2 a1)
getfn1r2
	(mov |.getfn1| a2)
	(bra errsym)
	(lentry getfn 5)
	(mov |.getfn| a2)
	(mov '0 a3)
	(cnbeq a4 '2 getfn2)
	(cnbeq a4 '3 getfn3)
	(mov '3 a1)
	(bra errwna)
getfn3
	(pop a3)
	(bfsymb a3 getfner3)
getfn2
	(eval ())
	(pop a2)
	(pop a1)
	(bra getfns)
getfner1
	(mov a2 a1)
getfner2
	(mov |.getfn| a2)
	(bra errsym)
getfner3
	(mov a3 a1)
	(bra errsym)
getfns
	(eval ())
	(endc)
	(bfsymb a2 getfner1)
	(btsymb a1 getfn5)
	(bfcons a1 getfner2)
	(mov a1 a4)
	(btcons a4 getfnm1)
	(movnil a1)
	(return)
getfnm1
	(mov (car a4) a1)
	(bfsymb a1 getfner2)
	(push (cdr a4))
	(push (@ ret_call_getfn5_6))
	(bra getfn5)
ret_call_getfn5_6
	(eval ())
	(btnil a1 getfnm2)
	(adjstk '1)
	(return)
getfnm2
	(pop a4)
	(btcons a4 getfnm1)
	(movnil a1)
	(return)
getfn5
	(btstrg (pname a2) getfnone)
	(bfcons a1 getfn8)
getfn7
	(mov (cdr a1) a4)
	(mov (car a1) a1)
	(btnil a4 getfn8)
	(push a4)
	(push (@ ret_call_getfn8_7))
	(bra getfn8)
ret_call_getfn8_7
	(eval ())
	(pop a4)
	(bfnil a1 getfnrt)
	(mov a4 a1)
	(bfcons a1 getfn8)
	(bra getfn7)
getfnrt
	(return)
getfn8
	(eval ())
getfn80
	(mov a2 a4)
getfn81
	(eval ())
	(cabeq (pkgc a2) a1 getfn9)
	(mov (pname a2) a2)
	(cabne a2 a4 getfn81)
getfn82
	(btnil a1 getfn83)
	(mov (pkgc a1) a1)
	(cabne a1 a3 getfn84)
getfn83
	(movnil a1)
	(return)
getfn84
	(bfcons a1 getfn80)
	(bra getfn7)
getfn9
	(push a3)
	(gftype a2 a3)
	(cnbeq a3 '0 getfn91)
	(pop a3)
	(mov a2 a1)
	(return)
getfn91
	(pop a3)
	(bra getfn82)
getfnone
	(eval ())
	(gftype a2 a4)
	(cnbeq a4 '0 sybfalse)
	(mov (pkgc a2) a4)
getfno1
	(eval ())
	(bfcons a1 getfno3)
getfno2
	(mov (cdr a1) a4)
	(mov (car a1) a1)
	(btnil a4 getfno3)
	(push a4)
	(mov (pkgc a2) a4)
	(push (@ ret_call_getfno3_8))
	(bra getfno3)
ret_call_getfno3_8
	(eval ())
	(pop a4)
	(bfnil a1 getfnor)
	(mov a4 a1)
	(bra getfno2)
getfnor
	(return)
getfno3
	(cabeq a1 a4 getfno9)
	(btnil a1 sybfalse)
	(mov (pkgc a1) a1)
	(cabne a1 a3 getfno1)
getfnof
	(movnil a1)
	(return)
getfno9
	(mov a2 a1)
	(return)
	(endc)
	(lentry getbi 4)
	(bfsymb a1 getbier1)
	(bfsymb a2 getbier2)
	(bfsymb a3 getbier3)
	(bfnil (pkgc a3) sybfalse)
getbi1
	(push a2)
getbi2
	(push a1)
	(push (@ ret_call_getbi1i_9))
	(bra getbi1i)
ret_call_getbi1i_9
	(eval ())
	(bfnil a1 getbi9)
	(pop a1)
	(mov (pkgc a2) a2)
	(bfnil a2 getbi2)
	(pop a2)
	(mov (pkgc a1) a1)
	(bfnil a1 getbi1)
	(return)
getbi9
	(adjstk '2)
	(return)
getbier3
	(mov a3 a1)
	(bra getbier1)
getbier2
	(mov a2 a1)
getbier1
	(mov |.getbi| a2)
	(bra errsym)
getbi1i
	(eval ())
	(mov (pkgc a3) a4)
	(bfcons a4 getbi1i1)
	(cabne (car a4) a1 getbi1i1)
	(cabne (cdr a4) a2 getbi1i1)
	(gftype a3 a4)
	(cnbne a4 '0 getbi1i9)
getbi1i1
	(btstrg (pname a3) sybfalse)
	(push a3)
getbi1i2
	(mov (pname a3) a3)
	(mov (pkgc a3) a4)
	(bfcons a4 getbi1i3)
	(cabne (car a4) a1 getbi1i3)
	(cabne (cdr a4) a2 getbi1i3)
	(gftype a3 a4)
	(cnbne a4 '0 getbi1i8)
getbi1i3
	(cabne a3 (& 0) getbi1i2)
	(adjstk '1)
	(bra sybfalse)
getbi1i8
	(adjstk '1)
getbi1i9
	(mov a3 a1)
	(return)
	(lentry remfn 2)
	(bfsymb a1 makunfner)
	(mov '0 (fval a1))
	(sftype '0 a1)
	(return)
makunfner
	(mov |.remfn| a2)
	(bra errsym)
	(lentry findfn 2)
	(mov a1 a2)
	(hgsize hashtab a1)
	(decr a1)
findfn1
	(hpxmov hashtab a1 a1)
	(bra findfn8)
findfn2
	(mov a1 a3)
	(btstrg (pname a1) findfn4)
findfn3
	(mov (pname a1) a1)
findfn4
	(cabeq (fval a1) a2 findfn9)
	(cabne a1 a3 findfn3)
	(mov (alink a1) a1)
findfn8
	(btsymb a1 findfn2)
	(sobgez a1 findfn1)
	(movnil a1)
findfn9
	(return)
	(lentry synonym 3)
	(bfsymb a1 synmerr2)
	(btnil a1 synmerr2)
	(btsymb a2 synom)
	(mov a2 a1)
synmerr2
	(mov |.synonym| a2)
	(bra errsym)
synom
	(gftype a2 a3)
	(cnbeq a3 '0 synmerr3)
	(sftype a3 a1)
	(mov (fval a2) (fval a1))
	(return)
synmerr3
	(push a1)
	(mov a2 a1)
	(mov |.synonym| a2)
	(push (@ ret_call_errudf_10))
	(bra errudf)
ret_call_errudf_10
	(eval ())
	(pop a1)
	(bra synonym)
	(lentry synqnym 6)
	(mov (cdr a1) a2)
	(mov (car a1) a1)
	(mov (car a2) a2)
	(bfsymb a1 synmerq2)
	(btnil a1 synmerq2)
	(bfsymb a2 synmerq1)
	(bra synom)
synmerq1
	(mov a2 a1)
synmerq2
	(mov |.synqnym| a2)
	(bra errsym)
	(lentry remob 2)
	(bfvar a1 remoberr)
	(bra istdsym)
remoberr
	(mov |.remob| a2)
	(bra errsym)
	(endc)
	(lentry getsymb 5)
	(cnbeq a4 '3 getsymb0)
	(cnbeq a4 '2 getsymb1)
	(mov |.getsymb| a2)
	(mov '3 a1)
	(bra errwna)
getsymb0
	(pop a3)
	(btsymb a3 getsymb2)
	(mov a3 a1)
	(mov |.getsymb| a2)
	(bra errsym)
getsymb1
	(mov '0 a3)
getsymb2
	(pop a2)
	(pop a1)
	(bra getsymi)
getsymi
	(eval ())
	(bfsymb a2 getsymer)
getsymi1
	(btsymb a1 getsymi3)
	(movnil a1)
	(return)
getsymi3
	(eval ())
	(cabeq a1 a3 sybfalse)
	(push a1)
	(push (@ ret_call_getsym1i_11))
	(bra getsym1i)
ret_call_getsym1i_11
	(eval ())
	(bfnil a1 getsymi5)
	(pop a1)
	(btnil a1 sybfalse)
	(mov (pkgc a1) a1)
	(bra getsymi1)
getsymi5
	(adjstk '1)
	(return)
getsymer
	(mov |.getsymb| a1)
	(bra errsym)
	(lentry getsym1 3)
	(bfsymb a1 getsy1r1)
	(bfsymb a2 getsy1r2)
	(bfnil (pkgc a2) sybfalse)
getsym1i
	(eval ())
	(cabeq (pkgc a2) a1 getsym12)
	(btstrg (pname a2) sybfalse)
	(mov a2 a4)
getsym11
	(mov (pname a2) a2)
	(cabeq (pkgc a2) a1 getsym12)
	(cabne a2 a4 getsym11)
	(bra sybfalse)
getsym12
	(mov a2 a1)
	(return)
getsy1r2
	(mov a2 a1)
getsy1r1
	(mov |.getsym1| a2)
	(bra errsym)
geti
	(eval ())
	(mov (plist a1) a4)
	(movnil a3)
	(bra geti3)
geti2
	(cabeq a2 (car a4) getiret)
	(mov (cdr a4) a4)
	(bfcons a4 geti4)
	(mov a4 a3)
	(mov (cdr a4) a4)
	(intest)
geti3
	(btcons a4 geti2)
geti4
	(movnil a4)
getiret
	(return)
	(lentry getprop 3)
	(btnil a1 getpr4)
	(bfsymb a1 geterr)
	(mov (plist a1) a4)
	(bfcons a4 getpr4)
getpr2
	(cabeq a2 (car a4) getpr5)
	(mov (cdr a4) a4)
	(bfcons a4 getpr4)
	(mov (cdr a4) a4)
	(intest)
	(btcons a4 getpr2)
getpr4
	(movnil a1)
	(return)
getpr5
	(mov (cdr a4) a4)
	(bfcons a4 getpr4)
	(mov (car a4) a1)
	(return)
geterr
	(mov |.getprop| a2)
	(bra errsym)
	(lentry getl 3)
	(btnil a1 sybfalse)
	(bfsymb a1 getlerr)
	(btnil a2 sybfalse)
	(bfcons a2 getlerr2)
	(mov (plist a1) a1)
	(bra getl7)
getl1
	(mov (car a1) a3)
	(push a2)
getl2
	(mov (car a2) a4)
	(cabeq a3 a4 getl8)
	(mov (cdr a2) a2)
	(btcons a2 getl2)
	(pop a2)
	(mov (cdr a1) a1)
	(bfcons a1 getl7)
	(mov (cdr a1) a1)
getl7
	(btcons a1 getl1)
	(return)
getl8
	(pop a2)
	(return)
getlerr
	(mov |.getl| a2)
	(bra errsym)
getlerr2
	(mov a2 a1)
	(mov |.getl| a2)
	(bra errnla)
	(lentry addprop 4)
	(bfsymb a1 addpret)
	(btnil a1 addpret)
	(mov (plist a1) a4)
	(cons a2 a4)
	(cons a3 a4)
	(mov a4 (plist a1))
	(mov a2 a1)
	(return)
addpret
	(mov |.addprop| a2)
	(bra errnva)
	(lentry putprop 4)
	(bfsymb a1 putperr)
	(btnil a1 putperr)
	(push a2)
	(mov a3 a2)
	(push (@ ret_call_geti_12))
	(bra geti)
ret_call_geti_12
	(eval ())
	(mov a2 a3)
	(pop a2)
	(bfcons a4 addprop)
	(mov (cdr a4) a4)
	(bfcons a4 sybfalse)
	(mov a2 (car a4))
	(mov a2 a1)
	(return)
putperr
	(mov |.putprop| a2)
	(bra errnva)
	(lentry defprop 6)
	(bfcons a1 defperr)
	(mov (cdr a1) a4)
	(mov (car a1) a1)
	(bfcons a4 defperr)
	(mov (car a4) a2)
	(mov (cdr a4) a3)
	(bfcons a3 defperr)
	(mov (car a3) a3)
	(bra putprop)
defperr
	(mov |.defprop| a2)
	(bra errnva)
	(lentry remprop 3)
	(bfsymb a1 remperr)
	(push (@ ret_call_geti_13))
	(bra geti)
ret_call_geti_13
	(eval ())
	(bfcons a4 sybfalse)
	(push a4)
	(mov (cdr a4) a2)
	(bfcons a2 rempr2)
	(mov (cdr a2) a2)
rempr2
	(bfcons a3 rempr4)
	(mov a2 (cdr a3))
	(pop a1)
	(return)
rempr4
	(mov a2 (plist a1))
	(pop a1)
	(return)
remperr
	(mov |.remprop| a2)
	(bra errnva)
getset12
	(eval ())
	(cnbeq a4 '1 getseta)
	(cnbeq a4 '2 getsetb)
	(mov '2 a1)
	(bra errwna)
getseta
	(pop a3)
	(pop a1)
	(bfsymb a1 getsetc)
	(bri a3)
getsetb
	(eval ())
	(pop a4)
	(pop a1)
	(xtopst a3)
	(bfsymb a3 getsetd)
	(btnil a3 getsetd)
	(return)
getsetd
	(mov a3 a1)
getsetc
	(bra errsym)
	(lentry fincr 6)
	(push (car a1))
	(mov (cdr a1) a1)
	(bfnil a1 incr2)
	(mov '1 a1)
	(bra incr3)
incr2
	(push (@ ret_call_evalcar_14))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_14
	(eval ())
incr3
	(mov a1 a2)
	(topst a1)
	(bfvar a1 increrr1)
	(mov (cval a1) a1)
	(mov '2 a4)
	(push (@ ret_call_gaplus2i_15))
	(bra gaplus2i)
ret_call_gaplus2i_15
	(eval ())
	(pop a2)
	(mov a1 (cval a2))
	(return)
increrr1
	(mov |.fincr| a2)
	(bra errnva)
	(lentry fdecr 6)
	(push (car a1))
	(mov (cdr a1) a1)
	(bfnil a1 decr2)
	(mov '1 a1)
	(bra decr3)
decr2
	(push (@ ret_call_evalcar_16))
	(mov (car a1) a1)
	(bfnil evalst evalt)
	(bra evalan)
ret_call_evalcar_16
	(eval ())
decr3
	(mov a1 a2)
	(topst a1)
	(bfvar a1 decrerr1)
	(mov (cval a1) a1)
	(push (@ ret_call_gadiff2i_17))
	(bra gadiff2i)
ret_call_gadiff2i_17
	(eval ())
	(pop a2)
	(mov a1 (cval a2))
	(return)
decrerr1
	(mov |.fdecr| a2)
	(bra errnva)
	(end)
))
