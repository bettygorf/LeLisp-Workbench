(loader '((title |startll.lo|)))
(loader'((fentry subversion subr0)
(entry subversion subr0)
(mov '3 a1)
(return)
))
(loader'((fentry herald subr0)
(entry herald subr0)
(push (@ 101))
(mov '0 a4)
(jmp outchan)
101
(eval ())
(push a1)
(push (@ 102))
(push dlink)
(push prot)
(stack dlink)
(push (@ 104))
(push nil)
(mov '1 a4)
(jmp outchan)
104
(eval ())
(push (@ 105))
(push '"; Le-Lisp (by INRIA) version 15.25 ")
(push '"(07/Jul/93)   [")
(jcall system)
(push a1)
(push '"]")
(mov '4 a4)
(jmp print)
105
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 103) a3)
102
(push a3)
(push a2)
(push (@ 106))
(push (& 4))
(mov '1 a4)
(jmp outchan)
106
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
103
(eval ())
(adjstk '1)
(mov nil a1)
(return)
))
(loader'((fentry explodech subr1)
(entry explodech subr1)
(jcall explode)
(push a1)
(push nil)
101
(bfcons (& 1) 102)
(mov (& 1) a1)
(mov (cdr a1) (& 1))
(mov (car a1) a1)
(jcall ascii)
(mov (& 0) a2)
(jcall cons)
(mov a1 (& 0))
(bra 101)
102
(mov (& 0) a1)
(adjstk '2)
(jmp nreverse)
))
(loader'((fentry implodech subr1)
(entry implodech subr1)
(push a1)
(push nil)
101
(bfcons (& 1) 102)
(mov (& 1) a1)
(mov (cdr a1) (& 1))
(mov (car a1) a1)
(jcall cascii)
(mov (& 0) a2)
(jcall cons)
(mov a1 (& 0))
(bra 101)
102
(mov (& 0) a1)
(jcall nreverse)
(adjstk '2)
(jmp implode)
))
(loader'((fentry lhoblist subr1)
(entry lhoblist subr1)
(push (cvalq s))
(mov a1 (cvalq s))
(push '1)
(push '(s))
(push (@ lhoblist))
(push llink)
(mov nil llink)
(push dlink)
(push cbindn)
(stack dlink)
(bra 101)
(fentry #:lhoblist:g104 subr1)
(entry #:lhoblist:g104 subr1)
(push (@ 102))
(push (cvalq s))
(push a1)
(push '0)
(mov '3 a4)
(jmp index)
102
(eval ())
(return)
101
(mov '#:lhoblist:g104 a1)
(jcall maploblist)
(mov (& 1) dlink)
(mov (& 2) llink)
(mov (& 6) (cvalq s))
(adjstk '7)
(return)
))
(loader '((fentry #:llcp:nlist subr0) (pop a3) (mov nil a1) (bra 4) 3 (pop a2) (jcall xcons) 4 (sobgez a4 3) (bri a3) (fentry #:llcp:errwna subr2) (mov a2 a3) (mov 'errwna a2) (jmp error) (end)))
(defvar #:system:initty-after-restore-flag t)
(defvar #:system:inibitmap-after-restore-flag t)
(loader'((fentry core-init-std subr1)
(entry core-init-std subr1)
(push a1)
(btnil (cvalq #:system:initty-after-restore-flag) 102)
(push (@ 103))
(mov '0 a4)
(jmp initty)
103
(eval ())
102
(btnil (cvalq #:system:inibitmap-after-restore-flag) 105)
(push (@ 106))
(mov '0 a4)
(jmp inibitmap)
106
(eval ())
105
(jcall herald)
(push (@ 107))
(mov '"HOME" a1)
(jcall getenv)
(push a1)
(push '"/.lelisp")
(mov '2 a4)
(jmp catenate)
107
(eval ())
(push a1)
(jcall probefile)
(btnil a1 109)
(mov 't a2)
(mov (& 0) a1)
(jcall loadfile)
109
(adjstk '1)
(push (@ 110))
(push '"; ")
(push (& 2))
(push '" : ")
(push (cvalq #:system:save-std-date))
(mov '4 a4)
(jmp print)
110
(eval ())
(jcall list-features)
(adjstk '1)
(jmp sortl)
))
(defvar #:system:save-std-gcinfo-list (list (cons 'initial (gcinfo t))))
(defvar #:system:save-std-date ())
(loader'((fentry save-std nsubr)
(entry save-std nsubr)
(cnbge a4 '2 101)
(mov 'save-std a1)
(mov '2 a2)
(jmp #:llcp:errwna)
101
(diff '2 a4)
(jcall #:llcp:nlist)
(push a1)
(push (@ 102))
(push '"Attendez, je sauve : ")
(push (& 3))
(mov '2 a4)
(jmp print)
102
(eval ())
(mov 'date a1)
(jcall featurep)
(bfnil a1 104)
(mov 'module a1)
(jcall featurep)
(btnil a1 105)
(push (@ 107))
(push 'date)
(push 't)
(mov '2 a4)
(jmp loadmodule)
107
(eval ())
(bra 104)
105
(mov '("date") a1)
(jcall libload)
104
(jcall date)
(mov a1 (cvalq #:system:save-std-date))
(push (@ 108))
(mov '0 a4)
(jmp gc)
108
(eval ())
(push (@ 109))
(mov '0 a4)
(jmp gcinfo)
109
(eval ())
(mov a1 a2)
(mov (& 2) a1)
(jcall cons)
(mov (cvalq #:system:save-std-gcinfo-list) a2)
(jcall cons)
(mov a1 (cvalq #:system:save-std-gcinfo-list))
(mov 't (cvalq #:system:real-terminal-flag))
(mov nil (cvalq #:system:line-mode-flag))
(push (@ 110))
(push '|? |)
(mov '1 a4)
(jmp prompt)
110
(eval ())
(mov (& 0) a4)
(mov (car a4) a4)
(bfnil a4 111)
(mov 'core-init-std a4)
111
(push a4)
(mov (& 1) a3)
(mov (cdr a3) a3)
(mov (car a3) a3)
(bfnil a3 112)
(mov a4 a3)
(bfnil a3 112)
(mov 'core-init-std a3)
112
(push a3)
(push (@ 115))
(push (cvalq #:system:core-directory))
(push (& 6))
(push (cvalq #:system:core-extension))
(mov '3 a4)
(jmp catenate)
115
(eval ())
(jcall save-core)
(btnil a1 113)
(push (@ 116))
(push (& 2))
(push (& 5))
(mov '2 a4)
(jmp funcall)
116
(eval ())
(adjstk '5)
(return)
113
(push (@ 117))
(push (& 1))
(push (& 5))
(mov '2 a4)
(jmp funcall)
117
(eval ())
(adjstk '5)
(return)
))
(loader'((fentry #:llcp:ext-not-resolved subr0)
(entry #:llcp:ext-not-resolved subr0)
(mov nil a3)
(mov '" look at defCcheck " a2)
(mov '#:llcp:ext-not-resolved a1)
(jmp error)
))
(loader'((fentry defmacro-open fsubr)
(entry defmacro-open fsubr)
(mov (cdr a1) a4)
(mov (car a1) a1)
(push a1)
(push a4)
(mov 'macro-open a2)
(jcall symbol)
(mov (& 0) a3)
(mov 'expr a2)
(jcall setfn)
(mov (& 1) a1)
(adjstk '2)
(return)
))
(loader'((fentry make-macro-open subr2)
(entry make-macro-open subr2)
(push a2)
(push a1)
(mov 'macro-open a2)
(jcall symbol)
(mov (& 1) a3)
(mov 'expr a2)
(jcall setfn)
(mov (& 0) a1)
(adjstk '2)
(return)
))
(loader'((fentry macro-openp subr1)
(entry macro-openp subr1)
(mov 'macro-open a2)
(jmp getfn1)
))
(loader'((fentry remove-macro-open subr1)
(entry remove-macro-open subr1)
(push a1)
(mov 'macro-open a2)
(jcall getsymb1)
(btnil a1 101)
(mov 'macro-open a2)
(mov (& 0) a1)
(jcall getsymb1)
(adjstk '1)
(jmp remob)
101
(mov nil a1)
(adjstk '1)
(return)
))
(loader'((fentry compiler nsubr)
(entry compiler nsubr)
(jcall #:llcp:nlist)
(push (@ 101))
(mov '0 a4)
(jmp outchan)
101
(eval ())
(push a1)
(push (@ 102))
(push dlink)
(push prot)
(stack dlink)
(push (@ 104))
(push nil)
(mov '1 a4)
(jmp outchan)
104
(eval ())
(push (@ 105))
(push '";GELL 15.26 warning,  call to (compiler ...)")
(mov '1 a4)
(jmp print)
105
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 103) a3)
102
(push a3)
(push a2)
(push (@ 106))
(push (& 4))
(mov '1 a4)
(jmp outchan)
106
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
103
(eval ())
(adjstk '1)
(return)
))
(loader'((fentry compile-all-in-core nsubr)
(entry compile-all-in-core nsubr)
(jcall #:llcp:nlist)
(push (@ 101))
(mov '0 a4)
(jmp outchan)
101
(eval ())
(push a1)
(push (@ 102))
(push dlink)
(push prot)
(stack dlink)
(push (@ 104))
(push nil)
(mov '1 a4)
(jmp outchan)
104
(eval ())
(push (@ 105))
(push '";GELL 15.26 warning,  call to (compile-all-in-core ...)")
(mov '1 a4)
(jmp print)
105
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 103) a3)
102
(push a3)
(push a2)
(push (@ 106))
(push (& 4))
(mov '1 a4)
(jmp outchan)
106
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
103
(eval ())
(adjstk '1)
(return)
))
(loader'((fentry loader nsubr)
(entry loader nsubr)
(jcall #:llcp:nlist)
(push (@ 101))
(mov '0 a4)
(jmp outchan)
101
(eval ())
(push a1)
(push (@ 102))
(push dlink)
(push prot)
(stack dlink)
(push (@ 104))
(push nil)
(mov '1 a4)
(jmp outchan)
104
(eval ())
(push (@ 105))
(push '";GELL 15.26 warning,  call to (loader ...)")
(mov '1 a4)
(jmp print)
105
(eval ())
(mov (& 1) dlink)
(adjstk '3)
(push a1)
(mov (@ 103) a3)
102
(push a3)
(push a2)
(push (@ 106))
(push (& 4))
(mov '1 a4)
(jmp outchan)
106
(eval ())
(pop a2)
(pop a3)
(pop a1)
(bri a3)
103
(eval ())
(adjstk '1)
(return)
))
(loader '((end)))
